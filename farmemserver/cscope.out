cscope 15 $HOME/fastswap/farmemserver               0000311391
	@rmserver.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

5 
	~<rdma/rdma_cma.h
>

7 
	#TEST_NZ
(
x
Ëdÿ{ i‡–(x)Ë
	`dõ
("îr‹: " #x " faûed (ªtu∫edÇ⁄-zîo)." ); } 0)

	)

8 
	#TEST_Z
(
x
Ëdÿ{ i‡(!(x)Ë
	`dõ
("îr‹: " #x " faûed (ªtu∫ed zîo/nuŒ)."); } 0)

	)

10 c⁄° 
size_t
 
	gBUFFER_SIZE
 = 1024 * 1024 * 1024 * 32l;

11 c⁄° 
	gNUM_PROCS
 = 8;

12 c⁄° 
	gNUM_QUEUES_PER_PROC
 = 3;

13 c⁄° 
	gNUM_QUEUES
 = 
NUM_PROCS
 * 
NUM_QUEUES_PER_PROC
;

15 
	sdevi˚
 {

16 
ibv_pd
 *
	mpd
;

17 
ibv_c⁄ãxt
 *
	mvîbs
;

20 
	squeue
 {

21 
ibv_qp
 *
	mqp
;

22 
ibv_cq
 *
	mcq
;

23 
rdma_cm_id
 *
	mcm_id
;

24 
˘æ
 *
	m˘æ
;

26 
	mINIT
,

27 
	mCONNECTED


28 } 
	m°©e
;

31 
	s˘æ
 {

32 
queue
 *
	mqueues
;

33 
ibv_mr
 *
	mmr_buf„r
;

34 *
	mbuf„r
;

35 
devi˚
 *
	mdev
;

37 
ibv_comp_ch™√l
 *
	mcomp_ch™√l
;

40 
	smemªgi⁄
 {

41 
uöt64_t
 
	mba£addr
;

42 
uöt32_t
 
	mkey
;

45 
dõ
(c⁄° *
ªas⁄
);

47 
Æloc_c⁄åﬁ
();

48 
⁄_c⁄√˘_ªque°
(
rdma_cm_id
 *
id
, 
rdma_c⁄n_∑øm
 *
∑øm
);

49 
⁄_c⁄√˘i⁄
(
queue
 *
q
);

50 
⁄_disc⁄√˘
(
queue
 *
q
);

51 
⁄_evít
(
rdma_cm_evít
 *
evít
);

52 
de°roy_devi˚
(
˘æ
 *ctrl);

54 
˘æ
 *
	gg˘æ
 = 
NULL
;

55 
	gqueue_˘r
 = 0;

57 
	$maö
(
¨gc
, **
¨gv
)

59 
sockaddr_ö
 
addr
 = {};

60 
rdma_cm_evít
 *
evít
 = 
NULL
;

61 
rdma_evít_ch™√l
 *
ec
 = 
NULL
;

62 
rdma_cm_id
 *
li°íî
 = 
NULL
;

63 
uöt16_t
 
p‹t
 = 0;

65 i‡(
¨gc
 != 2) {

66 
	`dõ
("NeedÅo specifyáÖortÇumberÅoÜisten");

69 
addr
.
sö_Ámûy
 = 
AF_INET
;

70 
addr
.
sö_p‹t
 = 
	`ht⁄s
(
	`©oi
(
¨gv
[1]));

72 
	`TEST_NZ
(
	`Æloc_c⁄åﬁ
());

74 
	`TEST_Z
(
ec
 = 
	`rdma_¸óã_evít_ch™√l
());

75 
	`TEST_NZ
(
	`rdma_¸óã_id
(
ec
, &
li°íî
, 
NULL
, 
RDMA_PS_TCP
));

76 
	`TEST_NZ
(
	`rdma_böd_addr
(
li°íî
, (
sockaddr
 *)&
addr
));

77 
	`TEST_NZ
(
	`rdma_li°í
(
li°íî
, 
NUM_QUEUES
 + 1));

78 
p‹t
 = 
	`¡ohs
(
	`rdma_gë_§c_p‹t
(
li°íî
));

79 
	`¥ötf
("li°íög o¿p‹à%d.\n", 
p‹t
);

81 
i
 = 0; i < 
NUM_QUEUES
; ++i) {

82 
	`¥ötf
("waôög f‹ queuêc⁄√˘i⁄: %d\n", 
i
);

83 
queue
 *
q
 = &
g˘æ
->
queues
[
i
];

86 
	`rdma_gë_cm_evít
(
ec
, &
evít
) == 0) {

87 
rdma_cm_evít
 
evít_c›y
;

89 
	`mem˝y
(&
evít_c›y
, 
evít
, (*event));

90 
	`rdma_ack_cm_evít
(
evít
);

92 i‡(
	`⁄_evít
(&
evít_c›y
Ë|| 
q
->
°©e
 =
queue
::
CONNECTED
)

97 
	`¥ötf
("done connectingáll queues\n");

100 
	`rdma_gë_cm_evít
(
ec
, &
evít
) == 0) {

101 
rdma_cm_evít
 
evít_c›y
;

103 
	`mem˝y
(&
evít_c›y
, 
evít
, (*event));

104 
	`rdma_ack_cm_evít
(
evít
);

106 i‡(
	`⁄_evít
(&
evít_c›y
))

110 
	`rdma_de°roy_evít_ch™√l
(
ec
);

111 
	`rdma_de°roy_id
(
li°íî
);

112 
	`de°roy_devi˚
(
g˘æ
);

114 
	}
}

116 
	$dõ
(c⁄° *
ªas⁄
)

118 
	`Ârötf
(
°dîr
, "%†-Éºno: %d\n", 
ªas⁄
, 
î∫o
);

119 
	`exô
(
EXIT_FAILURE
);

120 
	}
}

122 
	$Æloc_c⁄åﬁ
()

124 
g˘æ
 = (
˘æ
 *Ë
	`mÆloc
((ctrl));

125 
	`TEST_Z
(
g˘æ
);

126 
	`mem£t
(
g˘æ
, 0, (
˘æ
));

128 
g˘æ
->
queues
 = (
queue
 *Ë
	`mÆloc
((queueË* 
NUM_QUEUES
);

129 
	`TEST_Z
(
g˘æ
->
queues
);

130 
	`mem£t
(
g˘æ
->
queues
, 0, (
queue
Ë* 
NUM_QUEUES
);

131 
i
 = 0; i < 
NUM_QUEUES
; ++i) {

132 
g˘æ
->
queues
[
i
].
˘æ
 = gctrl;

133 
g˘æ
->
queues
[
i
].
°©e
 = 
queue
::
INIT
;

138 
	}
}

140 
devi˚
 *
	$gë_devi˚
(
queue
 *
q
)

142 
devi˚
 *
dev
 = 
NULL
;

144 i‡(!
q
->
˘æ
->
dev
) {

145 
dev
 = (
devi˚
 *Ë
	`mÆloc
((*dev));

146 
	`TEST_Z
(
dev
);

147 
dev
->
vîbs
 = 
q
->
cm_id
->verbs;

148 
	`TEST_Z
(
dev
->
vîbs
);

149 
dev
->
pd
 = 
	`ibv_Æloc_pd
(dev->
vîbs
);

150 
	`TEST_Z
(
dev
->
pd
);

152 
˘æ
 *˘æ = 
q
->ctrl;

153 
˘æ
->
buf„r
 = 
	`mÆloc
(
BUFFER_SIZE
);

154 
	`TEST_Z
(
˘æ
->
buf„r
);

156 
	`TEST_Z
(
˘æ
->
mr_buf„r
 = 
	`ibv_ªg_mr
(

157 
dev
->
pd
,

158 
˘æ
->
buf„r
,

159 
BUFFER_SIZE
,

160 
IBV_ACCESS_LOCAL_WRITE
 | 
IBV_ACCESS_REMOTE_WRITE
 | 
IBV_ACCESS_REMOTE_READ
));

162 
	`¥ötf
("ªgi°îed mem‹yÑegi⁄ o‡%zu byãs\n", 
BUFFER_SIZE
);

163 
q
->
˘æ
->
dev
 = dev;

166  
q
->
˘æ
->
dev
;

167 
	}
}

169 
	$de°roy_devi˚
(
˘æ
 *ctrl)

171 
	`TEST_Z
(
˘æ
->
dev
);

173 
	`ibv_dîeg_mr
(
˘æ
->
mr_buf„r
);

174 
	`‰ì
(
˘æ
->
buf„r
);

175 
	`ibv_dóŒoc_pd
(
˘æ
->
dev
->
pd
);

176 
	`‰ì
(
˘æ
->
dev
);

177 
˘æ
->
dev
 = 
NULL
;

178 
	}
}

180 
	$¸óã_qp
(
queue
 *
q
)

182 
ibv_qp_öô_©å
 
qp_©å
 = {};

184 
qp_©å
.
£nd_cq
 = 
q
->
cq
;

185 
qp_©å
.
ªcv_cq
 = 
q
->
cq
;

186 
qp_©å
.
qp_ty≥
 = 
IBV_QPT_RC
;

187 
qp_©å
.
ˇp
.
max_£nd_wr
 = 10;

188 
qp_©å
.
ˇp
.
max_ªcv_wr
 = 10;

189 
qp_©å
.
ˇp
.
max_£nd_sge
 = 1;

190 
qp_©å
.
ˇp
.
max_ªcv_sge
 = 1;

192 
	`TEST_NZ
(
	`rdma_¸óã_qp
(
q
->
cm_id
, q->
˘æ
->
dev
->
pd
, &
qp_©å
));

193 
q
->
qp
 = q->
cm_id
->qp;

194 
	}
}

196 
	$⁄_c⁄√˘_ªque°
(
rdma_cm_id
 *
id
, 
rdma_c⁄n_∑øm
 *
∑øm
)

199 
rdma_c⁄n_∑øm
 
cm_∑øms
 = {};

200 
ibv_devi˚_©å
 
©ås
 = {};

201 
queue
 *
q
 = &
g˘æ
->
queues
[
queue_˘r
++];

203 
	`TEST_Z
(
q
->
°©e
 =
queue
::
INIT
);

204 
	`¥ötf
("%s\n", 
__FUNCTION__
);

206 
id
->
c⁄ãxt
 = 
q
;

207 
q
->
cm_id
 = 
id
;

209 
devi˚
 *
dev
 = 
	`gë_devi˚
(
q
);

210 
	`¸óã_qp
(
q
);

212 
	`TEST_NZ
(
	`ibv_quîy_devi˚
(
dev
->
vîbs
, &
©ås
));

214 
	`¥ötf
("©ås: max_qp=%d, max_qp_wr=%d, max_cq=%d max_cqe=%d \
_qp_rd_©om=%d, max_qp_öô_rd_©om=%d\n", 
©ås
.
max_qp
,

216 
©ås
.
max_qp_wr
,áârs.
max_cq
,áârs.
max_cqe
,

217 
©ås
.
max_qp_rd_©om
,áârs.
max_qp_öô_rd_©om
);

219 
	`¥ötf
("ctrláttrs: initiator_depth=%dÑesponder_resources=%d\n",

220 
∑øm
->
öôüt‹_dïth
,Ö¨am->
ª•⁄dî_ªsour˚s
);

225 
cm_∑øms
.
öôüt‹_dïth
 = 
∑øm
->initiator_depth;

229 
cm_∑øms
.
ª•⁄dî_ªsour˚s
 = 
∑øm
->responder_resources;

230 
cm_∑øms
.
∫r_ªåy_cou¡
 = 
∑øm
->rnr_retry_count;

231 
cm_∑øms
.
Êow_c⁄åﬁ
 = 
∑øm
->flow_control;

233 
	`TEST_NZ
(
	`rdma_ac˚±
(
q
->
cm_id
, &
cm_∑øms
));

236 
	}
}

238 
	$⁄_c⁄√˘i⁄
(
queue
 *
q
)

240 
	`¥ötf
("%s\n", 
__FUNCTION__
);

241 
˘æ
 *˘æ = 
q
->ctrl;

243 
	`TEST_Z
(
q
->
°©e
 =
queue
::
INIT
);

245 i‡(
q
 =&
˘æ
->
queues
[0]) {

246 
ibv_£nd_wr
 
wr
 = {};

247 
ibv_£nd_wr
 *
bad_wr
 = 
NULL
;

248 
ibv_sge
 
sge
 = {};

249 
memªgi⁄
 
£rvîmr
 = {};

251 
	`¥ötf
("connected. sending memoryÑegion info.\n");

252 
	`¥ötf
("MR key=%u ba£ vaddr=%p\n", 
˘æ
->
mr_buf„r
->
rkey
, cål->mr_buf„r->
addr
);

254 
£rvîmr
.
ba£addr
 = (
uöt64_t
Ë
˘æ
->
mr_buf„r
->
addr
;

255 
£rvîmr
.
key
 = 
˘æ
->
mr_buf„r
->
rkey
;

257 
wr
.
›code
 = 
IBV_WR_SEND
;

258 
wr
.
sg_li°
 = &
sge
;

259 
wr
.
num_sge
 = 1;

260 
wr
.
£nd_Êags
 = 
IBV_SEND_SIGNALED
 | 
IBV_SEND_INLINE
;

262 
sge
.
addr
 = (
uöt64_t
Ë&
£rvîmr
;

263 
sge
.
Àngth
 = (
£rvîmr
);

265 
	`TEST_NZ
(
	`ibv_po°_£nd
(
q
->
qp
, &
wr
, &
bad_wr
));

270 
q
->
°©e
 = 
queue
::
CONNECTED
;

272 
	}
}

274 
	$⁄_disc⁄√˘
(
queue
 *
q
)

276 
	`¥ötf
("%s\n", 
__FUNCTION__
);

278 i‡(
q
->
°©e
 =
queue
::
CONNECTED
) {

279 
q
->
°©e
 = 
queue
::
INIT
;

280 
	`rdma_de°roy_qp
(
q
->
cm_id
);

281 
	`rdma_de°roy_id
(
q
->
cm_id
);

285 
	}
}

287 
	$⁄_evít
(
rdma_cm_evít
 *
evít
)

289 
	`¥ötf
("%s\n", 
__FUNCTION__
);

290 
queue
 *
q
 = (queuê*Ë
evít
->
id
->
c⁄ãxt
;

292 
evít
->event) {

293 
RDMA_CM_EVENT_CONNECT_REQUEST
:

294  
	`⁄_c⁄√˘_ªque°
(
evít
->
id
, &evít->
∑øm
.
c⁄n
);

295 
RDMA_CM_EVENT_ESTABLISHED
:

296  
	`⁄_c⁄√˘i⁄
(
q
);

297 
RDMA_CM_EVENT_DISCONNECTED
:

298 
	`⁄_disc⁄√˘
(
q
);

301 
	`¥ötf
("unknow¿evít: %s\n", 
	`rdma_evít_°r
(
evít
->event));

304 
	}
}

	@/usr/include/rdma/rdma_cma.h

34 #i‡!
deföed
(
RDMA_CMA_H
)

35 
	#RDMA_CMA_H


	)

37 
	~<√töë/ö.h
>

38 
	~<sys/sockë.h
>

39 
	~<öföib™d/vîbs.h
>

40 
	~<öföib™d/ß.h
>

42 #ifde‡
__˝lu•lus


50 
	erdma_cm_evít_ty≥
 {

51 
RDMA_CM_EVENT_ADDR_RESOLVED
,

52 
RDMA_CM_EVENT_ADDR_ERROR
,

53 
RDMA_CM_EVENT_ROUTE_RESOLVED
,

54 
RDMA_CM_EVENT_ROUTE_ERROR
,

55 
RDMA_CM_EVENT_CONNECT_REQUEST
,

56 
RDMA_CM_EVENT_CONNECT_RESPONSE
,

57 
RDMA_CM_EVENT_CONNECT_ERROR
,

58 
RDMA_CM_EVENT_UNREACHABLE
,

59 
RDMA_CM_EVENT_REJECTED
,

60 
RDMA_CM_EVENT_ESTABLISHED
,

61 
RDMA_CM_EVENT_DISCONNECTED
,

62 
RDMA_CM_EVENT_DEVICE_REMOVAL
,

63 
RDMA_CM_EVENT_MULTICAST_JOIN
,

64 
RDMA_CM_EVENT_MULTICAST_ERROR
,

65 
RDMA_CM_EVENT_ADDR_CHANGE
,

66 
RDMA_CM_EVENT_TIMEWAIT_EXIT


69 
	erdma_p‹t_•a˚
 {

70 
RDMA_PS_IPOIB
 = 0x0002,

71 
RDMA_PS_TCP
 = 0x0106,

72 
RDMA_PS_UDP
 = 0x0111,

73 
RDMA_PS_IB
 = 0x013F,

76 
	#RDMA_IB_IP_PS_MASK
 0xFFFFFFFFFFFF0000ULL

	)

77 
	#RDMA_IB_IP_PORT_MASK
 0x000000000000FFFFULL

	)

78 
	#RDMA_IB_IP_PS_TCP
 0x0000000001060000ULL

	)

79 
	#RDMA_IB_IP_PS_UDP
 0x0000000001110000ULL

	)

80 
	#RDMA_IB_PS_IB
 0x00000000013F0000ULL

	)

86 
	#RDMA_UDP_QKEY
 0x01234567

	)

88 
	srdma_ib_addr
 {

89 
ibv_gid
 
sgid
;

90 
ibv_gid
 
dgid
;

91 
uöt16_t
 
pkey
;

94 
	srdma_addr
 {

96 
sockaddr
 
§c_addr
;

97 
sockaddr_ö
 
§c_sö
;

98 
sockaddr_ö6
 
§c_sö6
;

99 
sockaddr_°‹age
 
§c_°‹age
;

102 
sockaddr
 
d°_addr
;

103 
sockaddr_ö
 
d°_sö
;

104 
sockaddr_ö6
 
d°_sö6
;

105 
sockaddr_°‹age
 
d°_°‹age
;

108 
rdma_ib_addr
 
ibaddr
;

109 } 
addr
;

112 
	srdma_rouã
 {

113 
rdma_addr
 
addr
;

114 
ibv_ß_∑th_ªc
 *
∑th_ªc
;

115 
num_∑ths
;

118 
	srdma_evít_ch™√l
 {

119 
fd
;

122 
	srdma_cm_id
 {

123 
ibv_c⁄ãxt
 *
vîbs
;

124 
rdma_evít_ch™√l
 *
ch™√l
;

125 *
c⁄ãxt
;

126 
ibv_qp
 *
qp
;

127 
rdma_rouã
 
rouã
;

128 
rdma_p‹t_•a˚
 
ps
;

129 
uöt8_t
 
p‹t_num
;

130 
rdma_cm_evít
 *
evít
;

131 
ibv_comp_ch™√l
 *
£nd_cq_ch™√l
;

132 
ibv_cq
 *
£nd_cq
;

133 
ibv_comp_ch™√l
 *
ªcv_cq_ch™√l
;

134 
ibv_cq
 *
ªcv_cq
;

135 
ibv_§q
 *
§q
;

136 
ibv_pd
 *
pd
;

137 
ibv_qp_ty≥
 
qp_ty≥
;

141 
RDMA_MAX_RESP_RES
 = 0xFF,

142 
RDMA_MAX_INIT_DEPTH
 = 0xFF

145 
	srdma_c⁄n_∑øm
 {

146 c⁄° *
¥iv©e_d©a
;

147 
uöt8_t
 
¥iv©e_d©a_Àn
;

148 
uöt8_t
 
ª•⁄dî_ªsour˚s
;

149 
uöt8_t
 
öôüt‹_dïth
;

150 
uöt8_t
 
Êow_c⁄åﬁ
;

151 
uöt8_t
 
ªåy_cou¡
;

152 
uöt8_t
 
∫r_ªåy_cou¡
;

154 
uöt8_t
 
§q
;

155 
uöt32_t
 
qp_num
;

158 
	srdma_ud_∑øm
 {

159 c⁄° *
¥iv©e_d©a
;

160 
uöt8_t
 
¥iv©e_d©a_Àn
;

161 
ibv_ah_©å
 
ah_©å
;

162 
uöt32_t
 
qp_num
;

163 
uöt32_t
 
qkey
;

166 
	srdma_cm_evít
 {

167 
rdma_cm_id
 *
id
;

168 
rdma_cm_id
 *
li°í_id
;

169 
rdma_cm_evít_ty≥
 
evít
;

170 
°©us
;

172 
rdma_c⁄n_∑øm
 
c⁄n
;

173 
rdma_ud_∑øm
 
ud
;

174 } 
∑øm
;

177 
	#RAI_PASSIVE
 0x00000001

	)

178 
	#RAI_NUMERICHOST
 0x00000002

	)

179 
	#RAI_NOROUTE
 0x00000004

	)

180 
	#RAI_FAMILY
 0x00000008

	)

182 
	srdma_addröfo
 {

183 
ai_Êags
;

184 
ai_Ámûy
;

185 
ai_qp_ty≥
;

186 
ai_p‹t_•a˚
;

187 
sockÀn_t
 
ai_§c_Àn
;

188 
sockÀn_t
 
ai_d°_Àn
;

189 
sockaddr
 *
ai_§c_addr
;

190 
sockaddr
 *
ai_d°_addr
;

191 *
ai_§c_ˇn⁄«me
;

192 *
ai_d°_ˇn⁄«me
;

193 
size_t
 
ai_rouã_Àn
;

194 *
ai_rouã
;

195 
size_t
 
ai_c⁄√˘_Àn
;

196 *
ai_c⁄√˘
;

197 
rdma_addröfo
 *
ai_√xt
;

212 
rdma_evít_ch™√l
 *
rdma_¸óã_evít_ch™√l
();

226 
rdma_de°roy_evít_ch™√l
(
rdma_evít_ch™√l
 *
ch™√l
);

249 
rdma_¸óã_id
(
rdma_evít_ch™√l
 *
ch™√l
,

250 
rdma_cm_id
 **
id
, *
c⁄ãxt
,

251 
rdma_p‹t_•a˚
 
ps
);

276 
rdma_¸óã_ï
(
rdma_cm_id
 **
id
, 
rdma_addröfo
 *
ªs
,

277 
ibv_pd
 *
pd
, 
ibv_qp_öô_©å
 *
qp_öô_©å
);

288 
rdma_de°roy_ï
(
rdma_cm_id
 *
id
);

302 
rdma_de°roy_id
(
rdma_cm_id
 *
id
);

320 
rdma_böd_addr
(
rdma_cm_id
 *
id
, 
sockaddr
 *
addr
);

345 
rdma_ªsﬁve_addr
(
rdma_cm_id
 *
id
, 
sockaddr
 *
§c_addr
,

346 
sockaddr
 *
d°_addr
, 
timeout_ms
);

362 
rdma_ªsﬁve_rouã
(
rdma_cm_id
 *
id
, 
timeout_ms
);

385 
rdma_¸óã_qp
(
rdma_cm_id
 *
id
, 
ibv_pd
 *
pd
,

386 
ibv_qp_öô_©å
 *
qp_öô_©å
);

387 
rdma_¸óã_qp_ex
(
rdma_cm_id
 *
id
,

388 
ibv_qp_öô_©å_ex
 *
qp_öô_©å
);

389 
rdma_¸óã_qp_exp
(
rdma_cm_id
 *
id
,

390 
ibv_exp_qp_öô_©å
 *
qp_öô_©å
);

403 
rdma_de°roy_qp
(
rdma_cm_id
 *
id
);

421 
rdma_c⁄√˘
(
rdma_cm_id
 *
id
, 
rdma_c⁄n_∑øm
 *
c⁄n_∑øm
);

441 
rdma_li°í
(
rdma_cm_id
 *
id
, 
backlog
);

446 
rdma_gë_ªque°
(
rdma_cm_id
 *
li°í
, rdma_cm_id **
id
);

467 
rdma_ac˚±
(
rdma_cm_id
 *
id
, 
rdma_c⁄n_∑øm
 *
c⁄n_∑øm
);

485 
rdma_ªje˘
(
rdma_cm_id
 *
id
, c⁄° *
¥iv©e_d©a
,

486 
uöt8_t
 
¥iv©e_d©a_Àn
);

508 
rdma_nŸify
(
rdma_cm_id
 *
id
, 
ibv_evít_ty≥
 
evít
);

519 
rdma_disc⁄√˘
(
rdma_cm_id
 *
id
);

539 
rdma_joö_mu…iˇ°
(
rdma_cm_id
 *
id
, 
sockaddr
 *
addr
,

540 *
c⁄ãxt
);

557 
rdma_Àave_mu…iˇ°
(
rdma_cm_id
 *
id
, 
sockaddr
 *
addr
);

575 
rdma_gë_cm_evít
(
rdma_evít_ch™√l
 *
ch™√l
,

576 
rdma_cm_evít
 **
evít
);

588 
rdma_ack_cm_evít
(
rdma_cm_evít
 *
evít
);

590 
uöt16_t
 
rdma_gë_§c_p‹t
(
rdma_cm_id
 *
id
);

591 
uöt16_t
 
rdma_gë_d°_p‹t
(
rdma_cm_id
 *
id
);

593 
ölöe
 
sockaddr
 *
rdma_gë_loˇl_addr
(
rdma_cm_id
 *
id
)

595  &
id
->
rouã
.
addr
.
§c_addr
;

598 
ölöe
 
sockaddr
 *
rdma_gë_≥î_addr
(
rdma_cm_id
 *
id
)

600  &
id
->
rouã
.
addr
.
d°_addr
;

612 
rdma_lib_ª£t
();

627 
ibv_c⁄ãxt
 **
rdma_gë_devi˚s
(*
num_devi˚s
);

637 
rdma_‰ì_devi˚s
(
ibv_c⁄ãxt
 **
li°
);

647 c⁄° *
rdma_evít_°r
(
rdma_cm_evít_ty≥
 
evít
);

651 
RDMA_OPTION_ID
 = 0,

652 
RDMA_OPTION_IB
 = 1

657 
RDMA_OPTION_ID_TOS
 = 0,

658 
RDMA_OPTION_ID_REUSEADDR
 = 1,

659 
RDMA_OPTION_ID_AFONLY
 = 2,

660 
RDMA_OPTION_IB_PATH
 = 1

671 
rdma_£t_›ti⁄
(
rdma_cm_id
 *
id
, 
Àvñ
, 
›äame
,

672 *
›tvÆ
, 
size_t
 
›éí
);

679 
rdma_migøã_id
(
rdma_cm_id
 *
id
, 
rdma_evít_ch™√l
 *
ch™√l
);

684 
rdma_gëaddröfo
(*
node
, *
£rvi˚
,

685 
rdma_addröfo
 *
höts
,

686 
rdma_addröfo
 **
ªs
);

688 
rdma_‰ìaddröfo
(
rdma_addröfo
 *
ªs
);

690 #ifde‡
__˝lu•lus


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/infiniband/sa.h

34 #i‚de‡
INFINIBAND_SA_H


35 
	#INFINIBAND_SA_H


	)

37 
	~<öföib™d/vîbs.h
>

39 
	sibv_ß_∑th_ªc
 {

42 
ibv_gid
 
	mdgid
;

43 
ibv_gid
 
	msgid
;

44 
uöt16_t
 
	mdlid
;

45 
uöt16_t
 
	m¶id
;

46 
	møw_åaffic
;

48 
uöt32_t
 
	mÊow_œbñ
;

49 
uöt8_t
 
	mh›_limô
;

50 
uöt8_t
 
	måaffic_˛ass
;

51 
	mªvîsibÀ
;

52 
uöt8_t
 
	mnumb_∑th
;

53 
uöt16_t
 
	mpkey
;

55 
uöt8_t
 
	m¶
;

56 
uöt8_t
 
	mmtu_£À˘‹
;

57 
uöt8_t
 
	mmtu
;

58 
uöt8_t
 
	møã_£À˘‹
;

59 
uöt8_t
 
	møã
;

60 
uöt8_t
 
	m∑ckë_li„_time_£À˘‹
;

61 
uöt8_t
 
	m∑ckë_li„_time
;

62 
uöt8_t
 
	m¥e„ªn˚
;

65 
	sibv_ß_mcmembî_ªc
 {

66 
ibv_gid
 
	mmgid
;

67 
ibv_gid
 
	mp‹t_gid
;

68 
uöt32_t
 
	mqkey
;

69 
uöt16_t
 
	mmlid
;

70 
uöt8_t
 
	mmtu_£À˘‹
;

71 
uöt8_t
 
	mmtu
;

72 
uöt8_t
 
	måaffic_˛ass
;

73 
uöt16_t
 
	mpkey
;

74 
uöt8_t
 
	møã_£À˘‹
;

75 
uöt8_t
 
	møã
;

76 
uöt8_t
 
	m∑ckë_li„_time_£À˘‹
;

77 
uöt8_t
 
	m∑ckë_li„_time
;

78 
uöt8_t
 
	m¶
;

79 
uöt32_t
 
	mÊow_œbñ
;

80 
uöt8_t
 
	mh›_limô
;

81 
uöt8_t
 
	msc›e
;

82 
uöt8_t
 
	mjoö_°©e
;

83 
	m¥oxy_joö
;

86 
	sibv_ß_£rvi˚_ªc
 {

87 
uöt64_t
 
	mid
;

88 
ibv_gid
 
	mgid
;

89 
uöt16_t
 
	mpkey
;

91 
uöt32_t
 
	mÀa£
;

92 
uöt8_t
 
	mkey
[16];

93 
uöt8_t
 
	m«me
[64];

94 
uöt8_t
 
	md©a8
[16];

95 
uöt16_t
 
	md©a16
[8];

96 
uöt32_t
 
	md©a32
[4];

97 
uöt64_t
 
	md©a64
[2];

100 
	#IBV_PATH_RECORD_REVERSIBLE
 0x80

	)

102 
	sibv_∑th_ªc‹d
 {

103 
uöt64_t
 
	m£rvi˚_id
;

104 
ibv_gid
 
	mdgid
;

105 
ibv_gid
 
	msgid
;

106 
uöt16_t
 
	mdlid
;

107 
uöt16_t
 
	m¶id
;

108 
uöt32_t
 
	mÊowœbñ_h›limô
;

109 
uöt8_t
 
	mt˛ass
;

110 
uöt8_t
 
	mªvîsibÀ_num∑th
;

111 
uöt16_t
 
	mpkey
;

112 
uöt16_t
 
	mqos˛ass_¶
;

113 
uöt8_t
 
	mmtu
;

114 
uöt8_t
 
	møã
;

115 
uöt8_t
 
	m∑ckëli„time
;

116 
uöt8_t
 
	m¥e„ªn˚
;

117 
uöt8_t
 
	mª£rved
[6];

120 
	#IBV_PATH_FLAG_GMP
 (1<<0)

	)

121 
	#IBV_PATH_FLAG_PRIMARY
 (1<<1)

	)

122 
	#IBV_PATH_FLAG_ALTERNATE
 (1<<2)

	)

123 
	#IBV_PATH_FLAG_OUTBOUND
 (1<<3)

	)

124 
	#IBV_PATH_FLAG_INBOUND
 (1<<4)

	)

125 
	#IBV_PATH_FLAG_INBOUND_REVERSE
 (1<<5)

	)

126 
	#IBV_PATH_FLAG_BIDIRECTIONAL
 (
IBV_PATH_FLAG_OUTBOUND
 | \

127 
IBV_PATH_FLAG_INBOUND_REVERSE
)

	)

129 
	sibv_∑th_d©a
 {

130 
uöt32_t
 
	mÊags
;

131 
uöt32_t
 
	mª£rved
;

132 
ibv_∑th_ªc‹d
 
	m∑th
;

	@/usr/include/infiniband/verbs.h

36 #i‚de‡
INFINIBAND_VERBS_H


37 
	#INFINIBAND_VERBS_H


	)

39 
	~<°döt.h
>

40 
	~<±hªad.h
>

41 
	~<°ddef.h
>

42 
	~<î∫o.h
>

43 
	~<öföib™d/oÁ_vîbs.h
>

44 
	~<°rög.h
>

46 #ifde‡
__˝lu•lus


47 
	#BEGIN_C_DECLS
 "C" {

	)

48 
	#END_C_DECLS
 }

	)

50 
	#BEGIN_C_DECLS


	)

51 
	#END_C_DECLS


	)

54 #i‡
__GNUC__
 >= 3

55 
	#__©åibuã_c⁄°
 
	`__©åibuã__
((c⁄°))

	)

57 
	#__©åibuã_c⁄°


	)

60 
BEGIN_C_DECLS


62 
	uibv_gid
 {

63 
uöt8_t
 
øw
[16];

65 
uöt64_t
 
sub√t_¥efix
;

66 
uöt64_t
 
öãrÁ˚_id
;

67 } 
globÆ
;

70 #i‚de‡
c⁄èöî_of


78 
	#c⁄èöî_of
(
±r
, 
ty≥
, 
membî
) \

79 ((
ty≥
 *Ë((
uöt8_t
 *)(
±r
Ë- 
	`off£tof
—y≥, 
membî
)))

	)

82 
	#vext_fõld_avaû
(
ty≥
, 
Êd
, 
sz
Ë(
	`off£tof
—y≥, fldË< (sz))

	)

84 *
	g__VERBS_ABI_IS_EXTENDED
 = ((
uöt8_t
 *)
NULL
) - 1;

86 
	eibv_node_ty≥
 {

87 
	mIBV_NODE_UNKNOWN
 = -1,

88 
	mIBV_NODE_CA
 = 1,

89 
	mIBV_NODE_SWITCH
,

90 
	mIBV_NODE_ROUTER
,

91 
	mIBV_NODE_RNIC
,

96 
	mIBV_EXP_NODE_TYPE_START
 = 32,

97 
	mIBV_EXP_NODE_MIC
 = 
IBV_EXP_NODE_TYPE_START


100 
	eibv_å™•‹t_ty≥
 {

101 
	mIBV_TRANSPORT_UNKNOWN
 = -1,

102 
	mIBV_TRANSPORT_IB
 = 0,

103 
	mIBV_TRANSPORT_IWARP
,

108 
	mIBV_EXP_TRANSPORT_TYPE_START
 = 32,

109 
	mIBV_EXP_TRANSPORT_SCIF
 = 
IBV_EXP_TRANSPORT_TYPE_START


112 
	eibv_devi˚_ˇp_Êags
 {

113 
	mIBV_DEVICE_RESIZE_MAX_WR
 = 1,

114 
	mIBV_DEVICE_BAD_PKEY_CNTR
 = 1 << 1,

115 
	mIBV_DEVICE_BAD_QKEY_CNTR
 = 1 << 2,

116 
	mIBV_DEVICE_RAW_MULTI
 = 1 << 3,

117 
	mIBV_DEVICE_AUTO_PATH_MIG
 = 1 << 4,

118 
	mIBV_DEVICE_CHANGE_PHY_PORT
 = 1 << 5,

119 
	mIBV_DEVICE_UD_AV_PORT_ENFORCE
 = 1 << 6,

120 
	mIBV_DEVICE_CURR_QP_STATE_MOD
 = 1 << 7,

121 
	mIBV_DEVICE_SHUTDOWN_PORT
 = 1 << 8,

122 
	mIBV_DEVICE_INIT_TYPE
 = 1 << 9,

123 
	mIBV_DEVICE_PORT_ACTIVE_EVENT
 = 1 << 10,

124 
	mIBV_DEVICE_SYS_IMAGE_GUID
 = 1 << 11,

125 
	mIBV_DEVICE_RC_RNR_NAK_GEN
 = 1 << 12,

126 
	mIBV_DEVICE_SRQ_RESIZE
 = 1 << 13,

127 
	mIBV_DEVICE_N_NOTIFY_CQ
 = 1 << 14,

128 
	mIBV_DEVICE_MEM_WINDOW
 = 1 << 17,

129 
	mIBV_DEVICE_XRC
 = 1 << 20,

130 
	mIBV_DEVICE_MEM_MGT_EXTENSIONS
 = 1 << 21,

131 
	mIBV_DEVICE_MEM_WINDOW_TYPE_2A
 = 1 << 23,

132 
	mIBV_DEVICE_MEM_WINDOW_TYPE_2B
 = 1 << 24,

133 
	mIBV_DEVICE_MANAGED_FLOW_STEERING
 = 1 << 29

136 
	eibv_©omic_ˇp
 {

137 
	mIBV_ATOMIC_NONE
,

138 
	mIBV_ATOMIC_HCA
,

139 
	mIBV_ATOMIC_GLOB


142 
	sibv_devi˚_©å
 {

143 
	mfw_vî
[64];

144 
uöt64_t
 
	mnode_guid
;

145 
uöt64_t
 
	msys_image_guid
;

146 
uöt64_t
 
	mmax_mr_size
;

147 
uöt64_t
 
	m∑ge_size_ˇp
;

148 
uöt32_t
 
	mvíd‹_id
;

149 
uöt32_t
 
	mvíd‹_∑π_id
;

150 
uöt32_t
 
	mhw_vî
;

151 
	mmax_qp
;

152 
	mmax_qp_wr
;

153 
uöt32_t
 
	mdevi˚_ˇp_Êags
;

154 
	mmax_sge
;

155 
	mmax_sge_rd
;

156 
	mmax_cq
;

157 
	mmax_cqe
;

158 
	mmax_mr
;

159 
	mmax_pd
;

160 
	mmax_qp_rd_©om
;

161 
	mmax_ì_rd_©om
;

162 
	mmax_ªs_rd_©om
;

163 
	mmax_qp_öô_rd_©om
;

164 
	mmax_ì_öô_rd_©om
;

165 
ibv_©omic_ˇp
 
	m©omic_ˇp
;

166 
	mmax_ì
;

167 
	mmax_rdd
;

168 
	mmax_mw
;

169 
	mmax_øw_ùv6_qp
;

170 
	mmax_øw_ëhy_qp
;

171 
	mmax_mˇ°_gΩ
;

172 
	mmax_mˇ°_qp_©èch
;

173 
	mmax_tŸÆ_mˇ°_qp_©èch
;

174 
	mmax_ah
;

175 
	mmax_fmr
;

176 
	mmax_m≠_≥r_fmr
;

177 
	mmax_§q
;

178 
	mmax_§q_wr
;

179 
	mmax_§q_sge
;

180 
uöt16_t
 
	mmax_pkeys
;

181 
uöt8_t
 
	mloˇl_ˇ_ack_dñay
;

182 
uöt8_t
 
	mphys_p‹t_˙t
;

187 
	sibv_quîy_devi˚_ex_öput
 {

188 
uöt32_t
 
	mcomp_mask
;

191 
	eibv_odp_å™•‹t_ˇp_bôs
 {

192 
	mIBV_ODP_SUPPORT_SEND
 = 1 << 0,

193 
	mIBV_ODP_SUPPORT_RECV
 = 1 << 1,

194 
	mIBV_ODP_SUPPORT_WRITE
 = 1 << 2,

195 
	mIBV_ODP_SUPPORT_READ
 = 1 << 3,

196 
	mIBV_ODP_SUPPORT_ATOMIC
 = 1 << 4,

199 
	sibv_odp_ˇps
 {

200 
uöt64_t
 
	mgíîÆ_ˇps
;

202 
uöt32_t
 
	mrc_odp_ˇps
;

203 
uöt32_t
 
	muc_odp_ˇps
;

204 
uöt32_t
 
	mud_odp_ˇps
;

205 } 
	m≥r_å™•‹t_ˇps
;

208 
	eibv_odp_gíîÆ_ˇps
 {

209 
	mIBV_ODP_SUPPORT
 = 1 << 0,

212 
	sibv_devi˚_©å_ex
 {

213 
ibv_devi˚_©å
 
	m‹ig_©å
;

214 
uöt32_t
 
	mcomp_mask
;

215 
ibv_odp_ˇps
 
	modp_ˇps
;

218 
	eibv_mtu
 {

219 
	mIBV_MTU_256
 = 1,

220 
	mIBV_MTU_512
 = 2,

221 
	mIBV_MTU_1024
 = 3,

222 
	mIBV_MTU_2048
 = 4,

223 
	mIBV_MTU_4096
 = 5

226 
	eibv_p‹t_°©e
 {

227 
	mIBV_PORT_NOP
 = 0,

228 
	mIBV_PORT_DOWN
 = 1,

229 
	mIBV_PORT_INIT
 = 2,

230 
	mIBV_PORT_ARMED
 = 3,

231 
	mIBV_PORT_ACTIVE
 = 4,

232 
	mIBV_PORT_ACTIVE_DEFER
 = 5

236 
	mIBV_LINK_LAYER_UNSPECIFIED
,

237 
	mIBV_LINK_LAYER_INFINIBAND
,

238 
	mIBV_LINK_LAYER_ETHERNET
,

243 
	mIBV_EXP_LINK_LAYER_START
 = 32,

244 
	mIBV_EXP_LINK_LAYER_SCIF
 = 
IBV_EXP_LINK_LAYER_START


247 
	eibv_p‹t_ˇp_Êags
 {

248 
	mIBV_PORT_SM
 = 1 << 1,

249 
	mIBV_PORT_NOTICE_SUP
 = 1 << 2,

250 
	mIBV_PORT_TRAP_SUP
 = 1 << 3,

251 
	mIBV_PORT_OPT_IPD_SUP
 = 1 << 4,

252 
	mIBV_PORT_AUTO_MIGR_SUP
 = 1 << 5,

253 
	mIBV_PORT_SL_MAP_SUP
 = 1 << 6,

254 
	mIBV_PORT_MKEY_NVRAM
 = 1 << 7,

255 
	mIBV_PORT_PKEY_NVRAM
 = 1 << 8,

256 
	mIBV_PORT_LED_INFO_SUP
 = 1 << 9,

257 
	mIBV_PORT_SYS_IMAGE_GUID_SUP
 = 1 << 11,

258 
	mIBV_PORT_PKEY_SW_EXT_PORT_TRAP_SUP
 = 1 << 12,

259 
	mIBV_PORT_EXTENDED_SPEEDS_SUP
 = 1 << 14,

260 
	mIBV_PORT_CM_SUP
 = 1 << 16,

261 
	mIBV_PORT_SNMP_TUNNEL_SUP
 = 1 << 17,

262 
	mIBV_PORT_REINIT_SUP
 = 1 << 18,

263 
	mIBV_PORT_DEVICE_MGMT_SUP
 = 1 << 19,

264 
	mIBV_PORT_VENDOR_CLASS
 = 1 << 24,

265 
	mIBV_PORT_CLIENT_REG_SUP
 = 1 << 25,

266 
	mIBV_PORT_IP_BASED_GIDS
 = 1 << 26,

269 
	sibv_p‹t_©å
 {

270 
ibv_p‹t_°©e
 
	m°©e
;

271 
ibv_mtu
 
	mmax_mtu
;

272 
ibv_mtu
 
	ma˘ive_mtu
;

273 
	mgid_tbl_Àn
;

274 
uöt32_t
 
	mp‹t_ˇp_Êags
;

275 
uöt32_t
 
	mmax_msg_sz
;

276 
uöt32_t
 
	mbad_pkey_˙å
;

277 
uöt32_t
 
	mqkey_viﬁ_˙å
;

278 
uöt16_t
 
	mpkey_tbl_Àn
;

279 
uöt16_t
 
	mlid
;

280 
uöt16_t
 
	msm_lid
;

281 
uöt8_t
 
	mlmc
;

282 
uöt8_t
 
	mmax_vl_num
;

283 
uöt8_t
 
	msm_¶
;

284 
uöt8_t
 
	msub√t_timeout
;

285 
uöt8_t
 
	möô_ty≥_ª∂y
;

286 
uöt8_t
 
	ma˘ive_width
;

287 
uöt8_t
 
	ma˘ive_•ìd
;

288 
uöt8_t
 
	mphys_°©e
;

289 
uöt8_t
 
	mlök_œyî
;

290 
uöt8_t
 
	mª£rved
;

293 
	eibv_evít_ty≥
 {

294 
	mIBV_EVENT_CQ_ERR
,

295 
	mIBV_EVENT_QP_FATAL
,

296 
	mIBV_EVENT_QP_REQ_ERR
,

297 
	mIBV_EVENT_QP_ACCESS_ERR
,

298 
	mIBV_EVENT_COMM_EST
,

299 
	mIBV_EVENT_SQ_DRAINED
,

300 
	mIBV_EVENT_PATH_MIG
,

301 
	mIBV_EVENT_PATH_MIG_ERR
,

302 
	mIBV_EVENT_DEVICE_FATAL
,

303 
	mIBV_EVENT_PORT_ACTIVE
,

304 
	mIBV_EVENT_PORT_ERR
,

305 
	mIBV_EVENT_LID_CHANGE
,

306 
	mIBV_EVENT_PKEY_CHANGE
,

307 
	mIBV_EVENT_SM_CHANGE
,

308 
	mIBV_EVENT_SRQ_ERR
,

309 
	mIBV_EVENT_SRQ_LIMIT_REACHED
,

310 
	mIBV_EVENT_QP_LAST_WQE_REACHED
,

311 
	mIBV_EVENT_CLIENT_REREGISTER
,

312 
	mIBV_EVENT_GID_CHANGE
,

317 
	mIBV_EXP_EVENT_DCT_KEY_VIOLATION
 = 32,

318 
	mIBV_EXP_EVENT_DCT_ACCESS_ERR
,

319 
	mIBV_EXP_EVENT_DCT_REQ_ERR
,

322 
	sibv_async_evít
 {

324 
ibv_cq
 *
	mcq
;

325 
ibv_qp
 *
	mqp
;

326 
ibv_§q
 *
	m§q
;

327 
ibv_exp_d˘
 *
	md˘
;

328 
	mp‹t_num
;

330 
uöt32_t
 
	mxrc_qp_num
;

331 } 
	mñemít
;

332 
ibv_evít_ty≥
 
	mevít_ty≥
;

335 
	eibv_wc_°©us
 {

336 
	mIBV_WC_SUCCESS
,

337 
	mIBV_WC_LOC_LEN_ERR
,

338 
	mIBV_WC_LOC_QP_OP_ERR
,

339 
	mIBV_WC_LOC_EEC_OP_ERR
,

340 
	mIBV_WC_LOC_PROT_ERR
,

341 
	mIBV_WC_WR_FLUSH_ERR
,

342 
	mIBV_WC_MW_BIND_ERR
,

343 
	mIBV_WC_BAD_RESP_ERR
,

344 
	mIBV_WC_LOC_ACCESS_ERR
,

345 
	mIBV_WC_REM_INV_REQ_ERR
,

346 
	mIBV_WC_REM_ACCESS_ERR
,

347 
	mIBV_WC_REM_OP_ERR
,

348 
	mIBV_WC_RETRY_EXC_ERR
,

349 
	mIBV_WC_RNR_RETRY_EXC_ERR
,

350 
	mIBV_WC_LOC_RDD_VIOL_ERR
,

351 
	mIBV_WC_REM_INV_RD_REQ_ERR
,

352 
	mIBV_WC_REM_ABORT_ERR
,

353 
	mIBV_WC_INV_EECN_ERR
,

354 
	mIBV_WC_INV_EEC_STATE_ERR
,

355 
	mIBV_WC_FATAL_ERR
,

356 
	mIBV_WC_RESP_TIMEOUT_ERR
,

357 
	mIBV_WC_GENERAL_ERR


359 c⁄° *
ibv_wc_°©us_°r
(
ibv_wc_°©us
 
°©us
);

361 
	eibv_wc_›code
 {

362 
	mIBV_WC_SEND
,

363 
	mIBV_WC_RDMA_WRITE
,

364 
	mIBV_WC_RDMA_READ
,

365 
	mIBV_WC_COMP_SWAP
,

366 
	mIBV_WC_FETCH_ADD
,

367 
	mIBV_WC_BIND_MW
,

368 
	mIBV_WC_LOCAL_INV
,

373 
	mIBV_WC_RECV
 = 1 << 7,

374 
	mIBV_WC_RECV_RDMA_WITH_IMM


377 
	eibv_wc_Êags
 {

378 
	mIBV_WC_GRH
 = 1 << 0,

379 
	mIBV_WC_WITH_IMM
 = 1 << 1,

380 
	mIBV_WC_WITH_INV
 = 1 << 3

383 
	sibv_wc
 {

384 
uöt64_t
 
	mwr_id
;

385 
ibv_wc_°©us
 
	m°©us
;

386 
ibv_wc_›code
 
	m›code
;

387 
uöt32_t
 
	mvíd‹_îr
;

388 
uöt32_t
 
	mbyã_Àn
;

392 
uöt32_t
 
	mimm_d©a
;

393 
uöt32_t
 
	mqp_num
;

394 
uöt32_t
 
	m§c_qp
;

395 
	mwc_Êags
;

396 
uöt16_t
 
	mpkey_ödex
;

397 
uöt16_t
 
	m¶id
;

398 
uöt8_t
 
	m¶
;

399 
uöt8_t
 
	mdlid_∑th_bôs
;

402 
	eibv_ac˚ss_Êags
 {

403 
	mIBV_ACCESS_LOCAL_WRITE
 = 1,

404 
	mIBV_ACCESS_REMOTE_WRITE
 = (1<<1),

405 
	mIBV_ACCESS_REMOTE_READ
 = (1<<2),

406 
	mIBV_ACCESS_REMOTE_ATOMIC
 = (1<<3),

407 
	mIBV_ACCESS_MW_BIND
 = (1<<4),

408 
	mIBV_ACCESS_ZERO_BASED
 = (1<<5),

409 
	mIBV_ACCESS_ON_DEMAND
 = (1<<6),

412 
	sibv_mw_böd_öfo
 {

413 
ibv_mr
 *
	mmr
;

414 
uöt64_t
 
	maddr
;

415 
uöt64_t
 
	mÀngth
;

416 
	mmw_ac˚ss_Êags
;

419 
	sibv_pd
 {

420 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

421 
uöt32_t
 
	mh™dÀ
;

424 
	eibv_xrcd_öô_©å_mask
 {

425 
	mIBV_XRCD_INIT_ATTR_FD
 = 1 << 0,

426 
	mIBV_XRCD_INIT_ATTR_OFLAGS
 = 1 << 1,

427 
	mIBV_XRCD_INIT_ATTR_RESERVED
 = 1 << 2

430 
	sibv_xrcd_öô_©å
 {

431 
uöt32_t
 
	mcomp_mask
;

432 
	mfd
;

433 
	moÊags
;

436 
	sibv_xrcd
 {

437 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

440 
	eibv_ªªg_mr_Êags
 {

441 
	mIBV_REREG_MR_CHANGE_TRANSLATION
 = (1 << 0),

442 
	mIBV_REREG_MR_CHANGE_PD
 = (1 << 1),

443 
	mIBV_REREG_MR_CHANGE_ACCESS
 = (1 << 2),

444 
	mIBV_REREG_MR_KEEP_VALID
 = (1 << 3),

445 
	mIBV_REREG_MR_FLAGS_SUPPORTED
 = ((
IBV_REREG_MR_KEEP_VALID
 << 1) - 1)

448 
	sibv_mr
 {

449 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

450 
ibv_pd
 *
	mpd
;

451 *
	maddr
;

452 
size_t
 
	mÀngth
;

453 
uöt32_t
 
	mh™dÀ
;

454 
uöt32_t
 
	mlkey
;

455 
uöt32_t
 
	mrkey
;

458 
	eibv_mw_ty≥
 {

459 
	mIBV_MW_TYPE_1
 = 1,

460 
	mIBV_MW_TYPE_2
 = 2

463 
	sibv_mw
 {

464 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

465 
ibv_pd
 *
	mpd
;

466 
uöt32_t
 
	mrkey
;

467 
uöt32_t
 
	mh™dÀ
;

468 
ibv_mw_ty≥
 
	mty≥
;

471 
	sibv_globÆ_rouã
 {

472 
ibv_gid
 
	mdgid
;

473 
uöt32_t
 
	mÊow_œbñ
;

474 
uöt8_t
 
	msgid_ödex
;

475 
uöt8_t
 
	mh›_limô
;

476 
uöt8_t
 
	måaffic_˛ass
;

479 
	sibv_grh
 {

480 
uöt32_t
 
	mvîsi⁄_t˛ass_Êow
;

481 
uöt16_t
 
	m∑yÀn
;

482 
uöt8_t
 
	m√xt_hdr
;

483 
uöt8_t
 
	mh›_limô
;

484 
ibv_gid
 
	msgid
;

485 
ibv_gid
 
	mdgid
;

488 
	eibv_øã
 {

489 
	mIBV_RATE_MAX
 = 0,

490 
	mIBV_RATE_2_5_GBPS
 = 2,

491 
	mIBV_RATE_5_GBPS
 = 5,

492 
	mIBV_RATE_10_GBPS
 = 3,

493 
	mIBV_RATE_20_GBPS
 = 6,

494 
	mIBV_RATE_30_GBPS
 = 4,

495 
	mIBV_RATE_40_GBPS
 = 7,

496 
	mIBV_RATE_60_GBPS
 = 8,

497 
	mIBV_RATE_80_GBPS
 = 9,

498 
	mIBV_RATE_120_GBPS
 = 10,

499 
	mIBV_RATE_14_GBPS
 = 11,

500 
	mIBV_RATE_56_GBPS
 = 12,

501 
	mIBV_RATE_112_GBPS
 = 13,

502 
	mIBV_RATE_168_GBPS
 = 14,

503 
	mIBV_RATE_25_GBPS
 = 15,

504 
	mIBV_RATE_100_GBPS
 = 16,

505 
	mIBV_RATE_200_GBPS
 = 17,

506 
	mIBV_RATE_300_GBPS
 = 18

515 
	$ibv_øã_to_mu…
(
ibv_øã
 
øã
Ë
__©åibuã_c⁄°
;

521 
ibv_øã
 
	$mu…_to_ibv_øã
(
mu…
Ë
__©åibuã_c⁄°
;

528 
	$ibv_øã_to_mbps
(
ibv_øã
 
øã
Ë
__©åibuã_c⁄°
;

534 
ibv_øã
 
	$mbps_to_ibv_øã
(
mbps
Ë
__©åibuã_c⁄°
;

536 
	sibv_ah_©å
 {

537 
ibv_globÆ_rouã
 
grh
;

538 
uöt16_t
 
dlid
;

539 
uöt8_t
 
¶
;

540 
uöt8_t
 
§c_∑th_bôs
;

541 
uöt8_t
 
°©ic_øã
;

542 
uöt8_t
 
is_globÆ
;

543 
uöt8_t
 
p‹t_num
;

546 
	eibv_§q_©å_mask
 {

547 
IBV_SRQ_MAX_WR
 = 1 << 0,

548 
IBV_SRQ_LIMIT
 = 1 << 1

551 
	sibv_§q_©å
 {

552 
uöt32_t
 
max_wr
;

553 
uöt32_t
 
max_sge
;

554 
uöt32_t
 
§q_limô
;

557 
	sibv_§q_öô_©å
 {

558 *
§q_c⁄ãxt
;

559 
ibv_§q_©å
 
©å
;

562 
	eibv_§q_ty≥
 {

563 
IBV_SRQT_BASIC
,

564 
IBV_SRQT_XRC


567 
	eibv_§q_öô_©å_mask
 {

568 
IBV_SRQ_INIT_ATTR_TYPE
 = 1 << 0,

569 
IBV_SRQ_INIT_ATTR_PD
 = 1 << 1,

570 
IBV_SRQ_INIT_ATTR_XRCD
 = 1 << 2,

571 
IBV_SRQ_INIT_ATTR_CQ
 = 1 << 3,

572 
IBV_SRQ_INIT_ATTR_RESERVED
 = 1 << 4

575 
	sibv_§q_öô_©å_ex
 {

576 *
§q_c⁄ãxt
;

577 
ibv_§q_©å
 
©å
;

579 
uöt32_t
 
comp_mask
;

580 
ibv_§q_ty≥
 
§q_ty≥
;

581 
ibv_pd
 *
pd
;

582 
ibv_xrcd
 *
xrcd
;

583 
ibv_cq
 *
cq
;

586 
	eibv_qp_ty≥
 {

587 
IBV_QPT_RC
 = 2,

588 
IBV_QPT_UC
,

589 
IBV_QPT_UD
,

591 
IBV_QPT_XRC
,

592 
IBV_QPT_RAW_PACKET
 = 8,

593 
IBV_QPT_RAW_ETH
 = 8,

594 
IBV_QPT_XRC_SEND
 = 9,

595 
IBV_QPT_XRC_RECV
,

600 
IBV_EXP_QP_TYPE_START
 = 32,

601 
IBV_EXP_QPT_DC_INI
 = 
IBV_EXP_QP_TYPE_START


604 
	sibv_qp_ˇp
 {

605 
uöt32_t
 
max_£nd_wr
;

606 
uöt32_t
 
max_ªcv_wr
;

607 
uöt32_t
 
max_£nd_sge
;

608 
uöt32_t
 
max_ªcv_sge
;

609 
uöt32_t
 
max_ölöe_d©a
;

612 
	sibv_qp_öô_©å
 {

613 *
qp_c⁄ãxt
;

614 
ibv_cq
 *
£nd_cq
;

615 
ibv_cq
 *
ªcv_cq
;

616 
ibv_§q
 *
§q
;

617 
ibv_qp_ˇp
 
ˇp
;

618 
ibv_qp_ty≥
 
qp_ty≥
;

619 
sq_sig_Æl
;

621 
ibv_xrc_domaö
 *
xrc_domaö
;

624 
	eibv_qp_öô_©å_mask
 {

625 
IBV_QP_INIT_ATTR_PD
 = 1 << 0,

626 
IBV_QP_INIT_ATTR_XRCD
 = 1 << 1,

627 
IBV_QP_INIT_ATTR_RESERVED
 = 1 << 2

630 
	sibv_qp_öô_©å_ex
 {

631 *
qp_c⁄ãxt
;

632 
ibv_cq
 *
£nd_cq
;

633 
ibv_cq
 *
ªcv_cq
;

634 
ibv_§q
 *
§q
;

635 
ibv_qp_ˇp
 
ˇp
;

636 
ibv_qp_ty≥
 
qp_ty≥
;

637 
sq_sig_Æl
;

639 
uöt32_t
 
comp_mask
;

640 
ibv_pd
 *
pd
;

641 
ibv_xrcd
 *
xrcd
;

644 
	eibv_qp_›í_©å_mask
 {

645 
IBV_QP_OPEN_ATTR_NUM
 = 1 << 0,

646 
IBV_QP_OPEN_ATTR_XRCD
 = 1 << 1,

647 
IBV_QP_OPEN_ATTR_CONTEXT
 = 1 << 2,

648 
IBV_QP_OPEN_ATTR_TYPE
 = 1 << 3,

649 
IBV_QP_OPEN_ATTR_RESERVED
 = 1 << 4

652 
	sibv_qp_›í_©å
 {

653 
uöt32_t
 
comp_mask
;

654 
uöt32_t
 
qp_num
;

655 
ibv_xrcd
 *
xrcd
;

656 *
qp_c⁄ãxt
;

657 
ibv_qp_ty≥
 
qp_ty≥
;

660 
	eibv_qp_©å_mask
 {

661 
IBV_QP_STATE
 = 1 << 0,

662 
IBV_QP_CUR_STATE
 = 1 << 1,

663 
IBV_QP_EN_SQD_ASYNC_NOTIFY
 = 1 << 2,

664 
IBV_QP_ACCESS_FLAGS
 = 1 << 3,

665 
IBV_QP_PKEY_INDEX
 = 1 << 4,

666 
IBV_QP_PORT
 = 1 << 5,

667 
IBV_QP_QKEY
 = 1 << 6,

668 
IBV_QP_AV
 = 1 << 7,

669 
IBV_QP_PATH_MTU
 = 1 << 8,

670 
IBV_QP_TIMEOUT
 = 1 << 9,

671 
IBV_QP_RETRY_CNT
 = 1 << 10,

672 
IBV_QP_RNR_RETRY
 = 1 << 11,

673 
IBV_QP_RQ_PSN
 = 1 << 12,

674 
IBV_QP_MAX_QP_RD_ATOMIC
 = 1 << 13,

675 
IBV_QP_ALT_PATH
 = 1 << 14,

676 
IBV_QP_MIN_RNR_TIMER
 = 1 << 15,

677 
IBV_QP_SQ_PSN
 = 1 << 16,

678 
IBV_QP_MAX_DEST_RD_ATOMIC
 = 1 << 17,

679 
IBV_QP_PATH_MIG_STATE
 = 1 << 18,

680 
IBV_QP_CAP
 = 1 << 19,

681 
IBV_QP_DEST_QPN
 = 1 << 20

684 
	eibv_qp_°©e
 {

685 
IBV_QPS_RESET
,

686 
IBV_QPS_INIT
,

687 
IBV_QPS_RTR
,

688 
IBV_QPS_RTS
,

689 
IBV_QPS_SQD
,

690 
IBV_QPS_SQE
,

691 
IBV_QPS_ERR
,

692 
IBV_QPS_UNKNOWN


695 
	eibv_mig_°©e
 {

696 
IBV_MIG_MIGRATED
,

697 
IBV_MIG_REARM
,

698 
IBV_MIG_ARMED


701 
	sibv_qp_©å
 {

702 
ibv_qp_°©e
 
qp_°©e
;

703 
ibv_qp_°©e
 
cur_qp_°©e
;

704 
ibv_mtu
 
∑th_mtu
;

705 
ibv_mig_°©e
 
∑th_mig_°©e
;

706 
uöt32_t
 
qkey
;

707 
uöt32_t
 
rq_p¢
;

708 
uöt32_t
 
sq_p¢
;

709 
uöt32_t
 
de°_qp_num
;

710 
qp_ac˚ss_Êags
;

711 
ibv_qp_ˇp
 
ˇp
;

712 
ibv_ah_©å
 
ah_©å
;

713 
ibv_ah_©å
 
Æt_ah_©å
;

714 
uöt16_t
 
pkey_ödex
;

715 
uöt16_t
 
Æt_pkey_ödex
;

716 
uöt8_t
 
í_sqd_async_nŸify
;

717 
uöt8_t
 
sq_døöög
;

718 
uöt8_t
 
max_rd_©omic
;

719 
uöt8_t
 
max_de°_rd_©omic
;

720 
uöt8_t
 
mö_∫r_timî
;

721 
uöt8_t
 
p‹t_num
;

722 
uöt8_t
 
timeout
;

723 
uöt8_t
 
ªåy_˙t
;

724 
uöt8_t
 
∫r_ªåy
;

725 
uöt8_t
 
Æt_p‹t_num
;

726 
uöt8_t
 
Æt_timeout
;

729 
	eibv_wr_›code
 {

730 
IBV_WR_RDMA_WRITE
,

731 
IBV_WR_RDMA_WRITE_WITH_IMM
,

732 
IBV_WR_SEND
,

733 
IBV_WR_SEND_WITH_IMM
,

734 
IBV_WR_RDMA_READ
,

735 
IBV_WR_ATOMIC_CMP_AND_SWP
,

736 
IBV_WR_ATOMIC_FETCH_AND_ADD
,

737 
IBV_WR_LOCAL_INV
,

738 
IBV_WR_BIND_MW
,

739 
IBV_WR_SEND_WITH_INV
,

742 
	eibv_£nd_Êags
 {

743 
IBV_SEND_FENCE
 = 1 << 0,

744 
IBV_SEND_SIGNALED
 = 1 << 1,

745 
IBV_SEND_SOLICITED
 = 1 << 2,

746 
IBV_SEND_INLINE
 = 1 << 3

749 
	sibv_sge
 {

750 
uöt64_t
 
addr
;

751 
uöt32_t
 
Àngth
;

752 
uöt32_t
 
lkey
;

755 
	sibv_£nd_wr
 {

756 
uöt64_t
 
wr_id
;

757 
ibv_£nd_wr
 *
√xt
;

758 
ibv_sge
 *
sg_li°
;

759 
num_sge
;

760 
ibv_wr_›code
 
›code
;

761 
£nd_Êags
;

762 
uöt32_t
 
imm_d©a
;

765 
uöt64_t
 
ªmŸe_addr
;

766 
uöt32_t
 
rkey
;

767 } 
rdma
;

769 
uöt64_t
 
ªmŸe_addr
;

770 
uöt64_t
 
com∑ª_add
;

771 
uöt64_t
 
sw≠
;

772 
uöt32_t
 
rkey
;

773 } 
©omic
;

775 
ibv_ah
 *
ah
;

776 
uöt32_t
 
ªmŸe_q≤
;

777 
uöt32_t
 
ªmŸe_qkey
;

778 } 
ud
;

779 } 
wr
;

783 
uöt32_t
 
ªmŸe_§qn
;

784 } 
xrc
;

785 } 
qp_ty≥
;

787 
uöt32_t
 
xrc_ªmŸe_§q_num
;

790 
ibv_mw
 *
mw
;

791 
uöt32_t
 
rkey
;

792 
ibv_mw_böd_öfo
 
böd_öfo
;

793 } 
böd_mw
;

796 
	sibv_ªcv_wr
 {

797 
uöt64_t
 
wr_id
;

798 
ibv_ªcv_wr
 *
√xt
;

799 
ibv_sge
 *
sg_li°
;

800 
num_sge
;

803 
	sibv_mw_böd
 {

804 
uöt64_t
 
wr_id
;

805 
£nd_Êags
;

806 
ibv_mw_böd_öfo
 
böd_öfo
;

809 
	sibv_§q
 {

810 
ibv_c⁄ãxt
 *
c⁄ãxt
;

811 *
§q_c⁄ãxt
;

812 
ibv_pd
 *
pd
;

813 
uöt32_t
 
h™dÀ
;

815 
±hªad_muãx_t
 
muãx
;

816 
±hªad_c⁄d_t
 
c⁄d
;

817 
uöt32_t
 
evíts_com∂ëed
;

822 
uöt32_t
 
xrc_§q_num_bö_com∑t_∑ddög
;

823 
ibv_xrc_domaö
 *
xrc_domaö_bö_com∑t_∑ddög
;

824 
ibv_cq
 *
xrc_cq_bö_com∑t_∑ddög
;

825 *
ibv_§q_∑ddög
;

828 
uöt32_t
 
xrc_§q_num
;

829 
ibv_xrc_domaö
 *
xrc_domaö
;

830 
ibv_cq
 *
xrc_cq
;

834 
	eibv_evít_Êags
 {

835 
IBV_XRC_QP_EVENT_FLAG
 = 0x80000000,

840 
	sibv_qp
 {

841 
ibv_c⁄ãxt
 *
c⁄ãxt
;

842 *
qp_c⁄ãxt
;

843 
ibv_pd
 *
pd
;

844 
ibv_cq
 *
£nd_cq
;

845 
ibv_cq
 *
ªcv_cq
;

846 
ibv_§q
 *
§q
;

847 
uöt32_t
 
h™dÀ
;

848 
uöt32_t
 
qp_num
;

849 
ibv_qp_°©e
 
°©e
;

850 
ibv_qp_ty≥
 
qp_ty≥
;

852 
±hªad_muãx_t
 
muãx
;

853 
±hªad_c⁄d_t
 
c⁄d
;

854 
uöt32_t
 
evíts_com∂ëed
;

857 
	sibv_comp_ch™√l
 {

858 
ibv_c⁄ãxt
 *
c⁄ãxt
;

859 
fd
;

860 
ªf˙t
;

863 
	sibv_cq
 {

864 
ibv_c⁄ãxt
 *
c⁄ãxt
;

865 
ibv_comp_ch™√l
 *
ch™√l
;

866 *
cq_c⁄ãxt
;

867 
uöt32_t
 
h™dÀ
;

868 
cqe
;

870 
±hªad_muãx_t
 
muãx
;

871 
±hªad_c⁄d_t
 
c⁄d
;

872 
uöt32_t
 
comp_evíts_com∂ëed
;

873 
uöt32_t
 
async_evíts_com∂ëed
;

876 
	sibv_ah
 {

877 
ibv_c⁄ãxt
 *
c⁄ãxt
;

878 
ibv_pd
 *
pd
;

879 
uöt32_t
 
h™dÀ
;

882 
	eibv_Êow_Êags
 {

883 
IBV_FLOW_ATTR_FLAGS_ALLOW_LOOP_BACK
 = 1,

884 
IBV_FLOW_ATTR_FLAGS_DONT_TRAP
 = 1 << 1,

887 
	eibv_Êow_©å_ty≥
 {

889 
IBV_FLOW_ATTR_NORMAL
 = 0x0,

893 
IBV_FLOW_ATTR_ALL_DEFAULT
 = 0x1,

897 
IBV_FLOW_ATTR_MC_DEFAULT
 = 0x2,

900 
	eibv_Êow_•ec_ty≥
 {

901 
IBV_FLOW_SPEC_ETH
 = 0x20,

902 
IBV_FLOW_SPEC_IPV4
 = 0x30,

903 
IBV_FLOW_SPEC_TCP
 = 0x40,

904 
IBV_FLOW_SPEC_UDP
 = 0x41,

907 
	sibv_Êow_ëh_fûãr
 {

908 
uöt8_t
 
d°_mac
[6];

909 
uöt8_t
 
§c_mac
[6];

910 
uöt16_t
 
ëhî_ty≥
;

914 
uöt16_t
 
vœn_èg
;

917 
	sibv_Êow_•ec_ëh
 {

918 
ibv_Êow_•ec_ty≥
 
ty≥
;

919 
uöt16_t
 
size
;

920 
ibv_Êow_ëh_fûãr
 
vÆ
;

921 
ibv_Êow_ëh_fûãr
 
mask
;

924 
	sibv_Êow_ùv4_fûãr
 {

925 
uöt32_t
 
§c_ù
;

926 
uöt32_t
 
d°_ù
;

929 
	sibv_Êow_•ec_ùv4
 {

930 
ibv_Êow_•ec_ty≥
 
ty≥
;

931 
uöt16_t
 
size
;

932 
ibv_Êow_ùv4_fûãr
 
vÆ
;

933 
ibv_Êow_ùv4_fûãr
 
mask
;

936 
	sibv_Êow_t˝_udp_fûãr
 {

937 
uöt16_t
 
d°_p‹t
;

938 
uöt16_t
 
§c_p‹t
;

941 
	sibv_Êow_•ec_t˝_udp
 {

942 
ibv_Êow_•ec_ty≥
 
ty≥
;

943 
uöt16_t
 
size
;

944 
ibv_Êow_t˝_udp_fûãr
 
vÆ
;

945 
ibv_Êow_t˝_udp_fûãr
 
mask
;

948 
	sibv_Êow_•ec
 {

951 
ibv_Êow_•ec_ty≥
 
ty≥
;

952 
uöt16_t
 
size
;

953 } 
hdr
;

954 
ibv_Êow_•ec_ëh
 
ëh
;

955 
ibv_Êow_•ec_ùv4
 
ùv4
;

956 
ibv_Êow_•ec_t˝_udp
 
t˝_udp
;

960 
	sibv_Êow_©å
 {

961 
uöt32_t
 
comp_mask
;

962 
ibv_Êow_©å_ty≥
 
ty≥
;

963 
uöt16_t
 
size
;

964 
uöt16_t
 
¥i‹ôy
;

965 
uöt8_t
 
num_of_•ecs
;

966 
uöt8_t
 
p‹t
;

967 
uöt32_t
 
Êags
;

974 
	sibv_Êow
 {

975 
uöt32_t
 
comp_mask
;

976 
ibv_c⁄ãxt
 *
c⁄ãxt
;

977 
uöt32_t
 
h™dÀ
;

980 
ibv_devi˚
;

981 
ibv_c⁄ãxt
;

983 
	sibv_devi˚_›s
 {

984 
ibv_c⁄ãxt
 * (*
Æloc_c⁄ãxt
)(
ibv_devi˚
 *
devi˚
, 
cmd_fd
);

985 (*
‰ì_c⁄ãxt
)(
ibv_c⁄ãxt
 *
c⁄ãxt
);

989 
IBV_SYSFS_NAME_MAX
 = 64,

990 
IBV_SYSFS_PATH_MAX
 = 256

993 
	sibv_devi˚
 {

994 
ibv_devi˚_›s
 
›s
;

995 
ibv_node_ty≥
 
node_ty≥
;

996 
ibv_å™•‹t_ty≥
 
å™•‹t_ty≥
;

998 
«me
[
IBV_SYSFS_NAME_MAX
];

1000 
dev_«me
[
IBV_SYSFS_NAME_MAX
];

1002 
dev_∑th
[
IBV_SYSFS_PATH_MAX
];

1004 
ibdev_∑th
[
IBV_SYSFS_PATH_MAX
];

1007 
	svîbs_devi˚
 {

1008 
ibv_devi˚
 
devi˚
;

1009 
size_t
 
sz
;

1010 
size_t
 
size_of_c⁄ãxt
;

1011 (*
öô_c⁄ãxt
)(
vîbs_devi˚
 *
devi˚
,

1012 
ibv_c⁄ãxt
 *
˘x
, 
cmd_fd
);

1013 (*
unöô_c⁄ãxt
)(
vîbs_devi˚
 *
devi˚
,

1014 
ibv_c⁄ãxt
 *
˘x
);

1016 
ªfcou¡
;

1017 
±hªad_muãx_t
 
ªÊock
;

1018 (*
vîbs_unöô_func
)(
vîbs_devi˚
 *
devi˚
);

1021 
	sibv_c⁄ãxt_›s
 {

1022 (*
quîy_devi˚
)(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1023 
ibv_devi˚_©å
 *
devi˚_©å
);

1024 (*
quîy_p‹t
)(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
uöt8_t
 
p‹t_num
,

1025 
ibv_p‹t_©å
 *
p‹t_©å
);

1026 
ibv_pd
 * (*
Æloc_pd
)(
ibv_c⁄ãxt
 *
c⁄ãxt
);

1027 (*
dóŒoc_pd
)(
ibv_pd
 *
pd
);

1028 
ibv_mr
 * (*
ªg_mr
)(
ibv_pd
 *
pd
, *
addr
, 
size_t
 
Àngth
,

1029 
ac˚ss
);

1030 (*
ªªg_mr
)(
ibv_mr
 *
mr
,

1031 
Êags
,

1032 
ibv_pd
 *
pd
, *
addr
,

1033 
size_t
 
Àngth
,

1034 
ac˚ss
);

1035 (*
dîeg_mr
)(
ibv_mr
 *
mr
);

1036 
ibv_mw
 * (*
Æloc_mw
)(
ibv_pd
 *
pd
, 
ibv_mw_ty≥
 
ty≥
);

1037 (*
böd_mw
)(
ibv_qp
 *
qp
, 
ibv_mw
 *
mw
,

1038 
ibv_mw_böd
 *
mw_böd
);

1039 (*
dóŒoc_mw
)(
ibv_mw
 *
mw
);

1040 
ibv_cq
 * (*
¸óã_cq
)(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
cqe
,

1041 
ibv_comp_ch™√l
 *
ch™√l
,

1042 
comp_ve˘‹
);

1043 (*
pﬁl_cq
)(
ibv_cq
 *
cq
, 
num_íåõs
, 
ibv_wc
 *
wc
);

1044 (*
ªq_nŸify_cq
)(
ibv_cq
 *
cq
, 
sﬁicôed_⁄ly
);

1045 (*
cq_evít
)(
ibv_cq
 *
cq
);

1046 (*
ªsize_cq
)(
ibv_cq
 *
cq
, 
cqe
);

1047 (*
de°roy_cq
)(
ibv_cq
 *
cq
);

1048 
ibv_§q
 * (*
¸óã_§q
)(
ibv_pd
 *
pd
,

1049 
ibv_§q_öô_©å
 *
§q_öô_©å
);

1050 (*
modify_§q
)(
ibv_§q
 *
§q
,

1051 
ibv_§q_©å
 *
§q_©å
,

1052 
§q_©å_mask
);

1053 (*
quîy_§q
)(
ibv_§q
 *
§q
,

1054 
ibv_§q_©å
 *
§q_©å
);

1055 (*
de°roy_§q
)(
ibv_§q
 *
§q
);

1056 (*
po°_§q_ªcv
)(
ibv_§q
 *
§q
,

1057 
ibv_ªcv_wr
 *
ªcv_wr
,

1058 
ibv_ªcv_wr
 **
bad_ªcv_wr
);

1059 
ibv_qp
 * (*
¸óã_qp
)(
ibv_pd
 *
pd
, 
ibv_qp_öô_©å
 *
©å
);

1060 (*
quîy_qp
)(
ibv_qp
 *
qp
, 
ibv_qp_©å
 *
©å
,

1061 
©å_mask
,

1062 
ibv_qp_öô_©å
 *
öô_©å
);

1063 (*
modify_qp
)(
ibv_qp
 *
qp
, 
ibv_qp_©å
 *
©å
,

1064 
©å_mask
);

1065 (*
de°roy_qp
)(
ibv_qp
 *
qp
);

1066 (*
po°_£nd
)(
ibv_qp
 *
qp
, 
ibv_£nd_wr
 *
wr
,

1067 
ibv_£nd_wr
 **
bad_wr
);

1068 (*
po°_ªcv
)(
ibv_qp
 *
qp
, 
ibv_ªcv_wr
 *
wr
,

1069 
ibv_ªcv_wr
 **
bad_wr
);

1070 
ibv_ah
 * (*
¸óã_ah
)(
ibv_pd
 *
pd
, 
ibv_ah_©å
 *
©å
);

1071 (*
de°roy_ah
)(
ibv_ah
 *
ah
);

1072 (*
©èch_mˇ°
)(
ibv_qp
 *
qp
, c⁄° 
ibv_gid
 *
gid
,

1073 
uöt16_t
 
lid
);

1074 (*
dëach_mˇ°
)(
ibv_qp
 *
qp
, c⁄° 
ibv_gid
 *
gid
,

1075 
uöt16_t
 
lid
);

1076 (*
async_evít
)(
ibv_async_evít
 *
evít
);

1079 
	sibv_c⁄ãxt
 {

1080 
ibv_devi˚
 *
devi˚
;

1081 
ibv_c⁄ãxt_›s
 
›s
;

1082 
cmd_fd
;

1083 
async_fd
;

1084 
num_comp_ve˘‹s
;

1085 
±hªad_muãx_t
 
muãx
;

1086 *
abi_com∑t
;

1089 
	evîbs_c⁄ãxt_mask
 {

1090 
VERBS_CONTEXT_XRCD
 = (
uöt64_t
)1 << 0,

1091 
VERBS_CONTEXT_SRQ
 = (
uöt64_t
)1 << 1,

1092 
VERBS_CONTEXT_QP
 = (
uöt64_t
)1 << 2,

1093 
VERBS_CONTEXT_RESERVED
 = (
uöt64_t
)1 << 3,

1094 
VERBS_CONTEXT_EXP
 = (
uöt64_t
)1 << 62

1097 
	svîbs_c⁄ãxt
 {

1098 (*
quîy_devi˚_ex
)(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1099 c⁄° 
ibv_quîy_devi˚_ex_öput
 *
öput
,

1100 
ibv_devi˚_©å_ex
 *
©å
,

1101 
size_t
 
©å_size
);

1103 (*
_ª£rved_2
) ();

1104 (*
de°roy_Êow
Ë(
ibv_Êow
 *
Êow
);

1105 (*
_ª£rved_1
) ();

1106 
ibv_Êow
 * (*
¸óã_Êow
Ë(
ibv_qp
 *
qp
,

1107 
ibv_Êow_©å
 *
Êow_©å
);

1108 
ibv_qp
 * (*
›í_qp
)(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1109 
ibv_qp_›í_©å
 *
©å
);

1110 
ibv_qp
 * (*
¸óã_qp_ex
)(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1111 
ibv_qp_öô_©å_ex
 *
qp_öô_©å_ex
);

1112 (*
gë_§q_num
)(
ibv_§q
 *
§q
, 
uöt32_t
 *
§q_num
);

1113 
ibv_§q
 * (*
¸óã_§q_ex
)(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1114 
ibv_§q_öô_©å_ex
 *
§q_öô_©å_ex
);

1115 
ibv_xrcd
 * (*
›í_xrcd
)(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1116 
ibv_xrcd_öô_©å
 *
xrcd_öô_©å
);

1117 (*
˛o£_xrcd
)(
ibv_xrcd
 *
xrcd
);

1118 
uöt64_t
 
has_comp_mask
;

1119 
size_t
 
sz
;

1120 
ibv_c⁄ãxt
 
c⁄ãxt
;

1123 
ölöe
 
vîbs_c⁄ãxt
 *
	$vîbs_gë_˘x
(
ibv_c⁄ãxt
 *
˘x
)

1125  (!
˘x
 || (˘x->
abi_com∑t
 !
__VERBS_ABI_IS_EXTENDED
)) ?

1126 
NULL
 : 
	`c⁄èöî_of
(
˘x
, 
vîbs_c⁄ãxt
, 
c⁄ãxt
);

1127 
	}
}

1129 
	#vîbs_gë_˘x_›
(
˘x
, 
›
) ({ \

1130 
vîbs_c⁄ãxt
 *
_v˘x
 = 
	`vîbs_gë_˘x
(
˘x
); \

1131 (!
_v˘x
 || (_v˘x->
sz
 < (*_v˘xË- 
	`off£tof
(
vîbs_c⁄ãxt
, 
›
)) || \

1132 !
_v˘x
->
›
Ë? 
NULL
 : _v˘x; })

	)

1134 
	#vîbs_£t_˘x_›
(
_v˘x
, 
›
, 
±r
) ({ \

1135 
vîbs_c⁄ãxt
 *
v˘x
 = 
_v˘x
; \

1136 i‡(
v˘x
 && (v˘x->
sz
 >(*v˘xË- 
	`off£tof
(
vîbs_c⁄ãxt
, 
›
))) \

1137 
v˘x
->
›
 = 
±r
; })

	)

1139 
ölöe
 
vîbs_devi˚
 *
	$vîbs_gë_devi˚
(
ibv_devi˚
 *
dev
)

1141  (
dev
->
›s
.
Æloc_c⁄ãxt
) ?

1142 
NULL
 : 
	`c⁄èöî_of
(
dev
, 
vîbs_devi˚
, 
devi˚
);

1143 
	}
}

1153 
ibv_devi˚
 **
ibv_gë_devi˚_li°
(*
num_devi˚s
);

1163 
ibv_‰ì_devi˚_li°
(
ibv_devi˚
 **
li°
);

1168 c⁄° *
ibv_gë_devi˚_«me
(
ibv_devi˚
 *
devi˚
);

1173 
uöt64_t
 
ibv_gë_devi˚_guid
(
ibv_devi˚
 *
devi˚
);

1178 
ibv_c⁄ãxt
 *
ibv_›í_devi˚
(
ibv_devi˚
 *
devi˚
);

1183 
ibv_˛o£_devi˚
(
ibv_c⁄ãxt
 *
c⁄ãxt
);

1192 
ibv_gë_async_evít
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1193 
ibv_async_evít
 *
evít
);

1205 
ibv_ack_async_evít
(
ibv_async_evít
 *
evít
);

1210 
ibv_quîy_devi˚
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1211 
ibv_devi˚_©å
 *
devi˚_©å
);

1216 
ibv_quîy_p‹t
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
uöt8_t
 
p‹t_num
,

1217 
ibv_p‹t_©å
 *
p‹t_©å
);

1219 
ölöe
 
	$___ibv_quîy_p‹t
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1220 
uöt8_t
 
p‹t_num
,

1221 
ibv_p‹t_©å
 *
p‹t_©å
)

1224 
p‹t_©å
->
lök_œyî
 = 
IBV_LINK_LAYER_UNSPECIFIED
;

1225 
p‹t_©å
->
ª£rved
 = 0;

1227  
	`ibv_quîy_p‹t
(
c⁄ãxt
, 
p‹t_num
, 
p‹t_©å
);

1228 
	}
}

1230 
	#ibv_quîy_p‹t
(
c⁄ãxt
, 
p‹t_num
, 
p‹t_©å
) \

1231 
	`___ibv_quîy_p‹t
(
c⁄ãxt
, 
p‹t_num
, 
p‹t_©å
)

	)

1236 
ibv_quîy_gid
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
uöt8_t
 
p‹t_num
,

1237 
ödex
, 
ibv_gid
 *
gid
);

1242 
ibv_quîy_pkey
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
uöt8_t
 
p‹t_num
,

1243 
ödex
, 
uöt16_t
 *
pkey
);

1248 
ibv_pd
 *
ibv_Æloc_pd
(
ibv_c⁄ãxt
 *
c⁄ãxt
);

1253 
ibv_dóŒoc_pd
(
ibv_pd
 *
pd
);

1255 
ölöe
 
ibv_Êow
 *
	$ibv_¸óã_Êow
(
ibv_qp
 *
qp
,

1256 
ibv_Êow_©å
 *
Êow
)

1258 
vîbs_c⁄ãxt
 *
v˘x
 = 
	`vîbs_gë_˘x_›
(
qp
->
c⁄ãxt
,

1259 
¸óã_Êow
);

1260 i‡(!
v˘x
)

1261  
NULL
;

1263  
v˘x
->
	`¸óã_Êow
(
qp
, 
Êow
);

1264 
	}
}

1266 
ölöe
 
	$ibv_de°roy_Êow
(
ibv_Êow
 *
Êow_id
)

1268 
vîbs_c⁄ãxt
 *
v˘x
 = 
	`vîbs_gë_˘x_›
(
Êow_id
->
c⁄ãxt
,

1269 
de°roy_Êow
);

1270 i‡(!
v˘x
)

1271  -
ENOSYS
;

1272  
v˘x
->
	`de°roy_Êow
(
Êow_id
);

1273 
	}
}

1278 
ölöe
 
ibv_xrcd
 *

1279 
	$ibv_›í_xrcd
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
ibv_xrcd_öô_©å
 *
xrcd_öô_©å
)

1281 
vîbs_c⁄ãxt
 *
v˘x
 = 
	`vîbs_gë_˘x_›
(
c⁄ãxt
, 
›í_xrcd
);

1282 i‡(!
v˘x
) {

1283 
î∫o
 = 
ENOSYS
;

1284  
NULL
;

1286  
v˘x
->
	`›í_xrcd
(
c⁄ãxt
, 
xrcd_öô_©å
);

1287 
	}
}

1292 
ölöe
 
	$ibv_˛o£_xrcd
(
ibv_xrcd
 *
xrcd
)

1294 
vîbs_c⁄ãxt
 *
v˘x
 = 
	`vîbs_gë_˘x
(
xrcd
->
c⁄ãxt
);

1295  
v˘x
->
	`˛o£_xrcd
(
xrcd
);

1296 
	}
}

1301 
ibv_mr
 *
ibv_ªg_mr
(
ibv_pd
 *
pd
, *
addr
,

1302 
size_t
 
Àngth
, 
ac˚ss
);

1305 
	eibv_ªªg_mr_îr_code
 {

1307 
	mIBV_REREG_MR_ERR_INPUT
 = -1,

1309 
	mIBV_REREG_MR_ERR_DONT_FORK_NEW
 = -2,

1311 
	mIBV_REREG_MR_ERR_DO_FORK_OLD
 = -3,

1313 
	mIBV_REREG_MR_ERR_CMD
 = -4,

1315 
	mIBV_REREG_MR_ERR_CMD_AND_DO_FORK_NEW
 = -5,

1321 
ibv_ªªg_mr
(
ibv_mr
 *
mr
, 
Êags
,

1322 
ibv_pd
 *
pd
, *
addr
,

1323 
size_t
 
Àngth
, 
ac˚ss
);

1327 
ibv_dîeg_mr
(
ibv_mr
 *
mr
);

1332 
ölöe
 
ibv_mw
 *
	$ibv_Æloc_mw
(
ibv_pd
 *
pd
,

1333 
ibv_mw_ty≥
 
ty≥
)

1335 
ibv_mw
 *
mw
;

1337 i‡(!
pd
->
c⁄ãxt
->
›s
.
Æloc_mw
) {

1338 
î∫o
 = 
ENOSYS
;

1339  
NULL
;

1342 
mw
 = 
pd
->
c⁄ãxt
->
›s
.
	`Æloc_mw
’d, 
ty≥
);

1343  
mw
;

1344 
	}
}

1349 
ölöe
 
	$ibv_dóŒoc_mw
(
ibv_mw
 *
mw
)

1351  
mw
->
c⁄ãxt
->
›s
.
	`dóŒoc_mw
(mw);

1352 
	}
}

1357 
ölöe
 
uöt32_t
 
	$ibv_öc_rkey
(
uöt32_t
 
rkey
)

1359 c⁄° 
uöt32_t
 
mask
 = 0x000000ff;

1360 
uöt8_t
 
√wèg
 = (uöt8_t)((
rkey
 + 1Ë& 
mask
);

1362  (
rkey
 & ~
mask
Ë| 
√wèg
;

1363 
	}
}

1368 
ölöe
 
	$ibv_böd_mw
(
ibv_qp
 *
qp
, 
ibv_mw
 *
mw
,

1369 
ibv_mw_böd
 *
mw_böd
)

1371 i‡(
mw
->
ty≥
 !
IBV_MW_TYPE_1
)

1372  
EINVAL
;

1374  
mw
->
c⁄ãxt
->
›s
.
	`böd_mw
(
qp
, mw, 
mw_böd
);

1375 
	}
}

1380 
ibv_comp_ch™√l
 *
ibv_¸óã_comp_ch™√l
(
ibv_c⁄ãxt
 *
c⁄ãxt
);

1385 
ibv_de°roy_comp_ch™√l
(
ibv_comp_ch™√l
 *
ch™√l
);

1397 
ibv_cq
 *
ibv_¸óã_cq
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
cqe
,

1398 *
cq_c⁄ãxt
,

1399 
ibv_comp_ch™√l
 *
ch™√l
,

1400 
comp_ve˘‹
);

1409 
ibv_ªsize_cq
(
ibv_cq
 *
cq
, 
cqe
);

1414 
ibv_de°roy_cq
(
ibv_cq
 *
cq
);

1425 
ibv_gë_cq_evít
(
ibv_comp_ch™√l
 *
ch™√l
,

1426 
ibv_cq
 **
cq
, **
cq_c⁄ãxt
);

1441 
ibv_ack_cq_evíts
(
ibv_cq
 *
cq
, 
√víts
);

1456 
ölöe
 
	$ibv_pﬁl_cq
(
ibv_cq
 *
cq
, 
num_íåõs
, 
ibv_wc
 *
wc
)

1458  
cq
->
c⁄ãxt
->
›s
.
	`pﬁl_cq
(cq, 
num_íåõs
, 
wc
);

1459 
	}
}

1470 
ölöe
 
	$ibv_ªq_nŸify_cq
(
ibv_cq
 *
cq
, 
sﬁicôed_⁄ly
)

1472  
cq
->
c⁄ãxt
->
›s
.
	`ªq_nŸify_cq
(cq, 
sﬁicôed_⁄ly
);

1473 
	}
}

1486 
ibv_§q
 *
ibv_¸óã_§q
(
ibv_pd
 *
pd
,

1487 
ibv_§q_öô_©å
 *
§q_öô_©å
);

1489 
ölöe
 
ibv_§q
 *

1490 
	$ibv_¸óã_§q_ex
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1491 
ibv_§q_öô_©å_ex
 *
§q_öô_©å_ex
)

1493 
vîbs_c⁄ãxt
 *
v˘x
;

1494 
uöt32_t
 
mask
 = 
§q_öô_©å_ex
->
comp_mask
;

1496 i‡(!(
mask
 & ~(
IBV_SRQ_INIT_ATTR_PD
 | 
IBV_SRQ_INIT_ATTR_TYPE
)) &&

1497 (
mask
 & 
IBV_SRQ_INIT_ATTR_PD
) &&

1498 (!(
mask
 & 
IBV_SRQ_INIT_ATTR_TYPE
) ||

1499 (
§q_öô_©å_ex
->
§q_ty≥
 =
IBV_SRQT_BASIC
)))

1500  
	`ibv_¸óã_§q
(
§q_öô_©å_ex
->
pd
,

1501 (
ibv_§q_öô_©å
 *Ë
§q_öô_©å_ex
);

1503 
v˘x
 = 
	`vîbs_gë_˘x_›
(
c⁄ãxt
, 
¸óã_§q_ex
);

1504 i‡(!
v˘x
) {

1505 
î∫o
 = 
ENOSYS
;

1506  
NULL
;

1508  
v˘x
->
	`¸óã_§q_ex
(
c⁄ãxt
, 
§q_öô_©å_ex
);

1509 
	}
}

1523 
ibv_modify_§q
(
ibv_§q
 *
§q
,

1524 
ibv_§q_©å
 *
§q_©å
,

1525 
§q_©å_mask
);

1533 
ibv_quîy_§q
(
ibv_§q
 *
§q
, 
ibv_§q_©å
 *
§q_©å
);

1535 
ölöe
 
	$ibv_gë_§q_num
(
ibv_§q
 *
§q
, 
uöt32_t
 *
§q_num
)

1537 
vîbs_c⁄ãxt
 *
v˘x
 = 
	`vîbs_gë_˘x_›
(
§q
->
c⁄ãxt
, 
gë_§q_num
);

1539 i‡(!
v˘x
)

1540  
ENOSYS
;

1542  
v˘x
->
	`gë_§q_num
(
§q
, 
§q_num
);

1543 
	}
}

1549 
ibv_de°roy_§q
(
ibv_§q
 *
§q
);

1558 
ölöe
 
	$ibv_po°_§q_ªcv
(
ibv_§q
 *
§q
,

1559 
ibv_ªcv_wr
 *
ªcv_wr
,

1560 
ibv_ªcv_wr
 **
bad_ªcv_wr
)

1562  
§q
->
c⁄ãxt
->
›s
.
	`po°_§q_ªcv
(§q, 
ªcv_wr
, 
bad_ªcv_wr
);

1563 
	}
}

1568 
ibv_qp
 *
ibv_¸óã_qp
(
ibv_pd
 *
pd
,

1569 
ibv_qp_öô_©å
 *
qp_öô_©å
);

1571 
ölöe
 
ibv_qp
 *

1572 
	$ibv_¸óã_qp_ex
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
ibv_qp_öô_©å_ex
 *
qp_öô_©å_ex
)

1574 
vîbs_c⁄ãxt
 *
v˘x
;

1575 
uöt32_t
 
mask
 = 
qp_öô_©å_ex
->
comp_mask
;

1577 i‡(
mask
 =
IBV_QP_INIT_ATTR_PD
)

1578  
	`ibv_¸óã_qp
(
qp_öô_©å_ex
->
pd
,

1579 (
ibv_qp_öô_©å
 *Ë
qp_öô_©å_ex
);

1581 
v˘x
 = 
	`vîbs_gë_˘x_›
(
c⁄ãxt
, 
¸óã_qp_ex
);

1582 i‡(!
v˘x
) {

1583 
î∫o
 = 
ENOSYS
;

1584  
NULL
;

1586  
v˘x
->
	`¸óã_qp_ex
(
c⁄ãxt
, 
qp_öô_©å_ex
);

1587 
	}
}

1592 
ölöe
 

1593 
	$ibv_quîy_devi˚_ex
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

1594 c⁄° 
ibv_quîy_devi˚_ex_öput
 *
öput
,

1595 
ibv_devi˚_©å_ex
 *
©å
)

1597 
vîbs_c⁄ãxt
 *
v˘x
;

1598 
ªt
;

1600 
v˘x
 = 
	`vîbs_gë_˘x_›
(
c⁄ãxt
, 
quîy_devi˚_ex
);

1601 i‡(!
v˘x
)

1602 
Àgacy
;

1604 
ªt
 = 
v˘x
->
	`quîy_devi˚_ex
(
c⁄ãxt
, 
öput
, 
©å
, (*attr));

1605 i‡(
ªt
 =
ENOSYS
)

1606 
Àgacy
;

1608  
ªt
;

1610 
Àgacy
:

1611 
	`mem£t
(
©å
, 0, (*attr));

1612 
ªt
 = 
	`ibv_quîy_devi˚
(
c⁄ãxt
, &
©å
->
‹ig_©å
);

1613  
ªt
;

1614 
	}
}

1619 
ölöe
 
ibv_qp
 *

1620 
	$ibv_›í_qp
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
ibv_qp_›í_©å
 *
qp_›í_©å
)

1622 
vîbs_c⁄ãxt
 *
v˘x
 = 
	`vîbs_gë_˘x_›
(
c⁄ãxt
, 
›í_qp
);

1623 i‡(!
v˘x
) {

1624 
î∫o
 = 
ENOSYS
;

1625  
NULL
;

1627  
v˘x
->
	`›í_qp
(
c⁄ãxt
, 
qp_›í_©å
);

1628 
	}
}

1633 
ibv_modify_qp
(
ibv_qp
 *
qp
, 
ibv_qp_©å
 *
©å
,

1634 
©å_mask
);

1647 
ibv_quîy_qp
(
ibv_qp
 *
qp
, 
ibv_qp_©å
 *
©å
,

1648 
©å_mask
,

1649 
ibv_qp_öô_©å
 *
öô_©å
);

1654 
ibv_de°roy_qp
(
ibv_qp
 *
qp
);

1662 
ölöe
 
	$ibv_po°_£nd
(
ibv_qp
 *
qp
, 
ibv_£nd_wr
 *
wr
,

1663 
ibv_£nd_wr
 **
bad_wr
)

1665  
qp
->
c⁄ãxt
->
›s
.
	`po°_£nd
(qp, 
wr
, 
bad_wr
);

1666 
	}
}

1671 
ölöe
 
	$ibv_po°_ªcv
(
ibv_qp
 *
qp
, 
ibv_ªcv_wr
 *
wr
,

1672 
ibv_ªcv_wr
 **
bad_wr
)

1674  
qp
->
c⁄ãxt
->
›s
.
	`po°_ªcv
(qp, 
wr
, 
bad_wr
);

1675 
	}
}

1680 
ibv_ah
 *
ibv_¸óã_ah
(
ibv_pd
 *
pd
, 
ibv_ah_©å
 *
©å
);

1693 
ibv_öô_ah_‰om_wc
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
uöt8_t
 
p‹t_num
,

1694 
ibv_wc
 *
wc
, 
ibv_grh
 *
grh
,

1695 
ibv_ah_©å
 *
ah_©å
);

1709 
ibv_ah
 *
ibv_¸óã_ah_‰om_wc
(
ibv_pd
 *
pd
, 
ibv_wc
 *
wc
,

1710 
ibv_grh
 *
grh
, 
uöt8_t
 
p‹t_num
);

1715 
ibv_de°roy_ah
(
ibv_ah
 *
ah
);

1728 
ibv_©èch_mˇ°
(
ibv_qp
 *
qp
, c⁄° 
ibv_gid
 *
gid
, 
uöt16_t
 
lid
);

1736 
ibv_dëach_mˇ°
(
ibv_qp
 *
qp
, c⁄° 
ibv_gid
 *
gid
, 
uöt16_t
 
lid
);

1744 
ibv_f‹k_öô
();

1749 c⁄° *
ibv_node_ty≥_°r
(
ibv_node_ty≥
 
node_ty≥
);

1754 c⁄° *
ibv_p‹t_°©e_°r
(
ibv_p‹t_°©e
 
p‹t_°©e
);

1759 c⁄° *
ibv_evít_ty≥_°r
(
ibv_evít_ty≥
 
evít
);

1761 
	gEND_C_DECLS


1763 #unde‡
__©åibuã_c⁄°


1765 
	~<öföib™d/vîbs_exp.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‚de‡
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‚de‡
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 #ifde‡
__USE_MISC


217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

220 } 
	m__ö6_u
;

221 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

222 #ifde‡
__USE_MISC


223 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

224 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

229 c⁄° 
ö6_addr
 
ö6addr_™y
;

230 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

231 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

232 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

234 
	#INET_ADDRSTRLEN
 16

	)

235 
	#INET6_ADDRSTRLEN
 46

	)

239 
	ssockaddr_ö


241 
__SOCKADDR_COMMON
 (
sö_
);

242 
ö_p‹t_t
 
	msö_p‹t
;

243 
ö_addr
 
	msö_addr
;

246 
	msö_zîo
[ (
sockaddr
) -

247 
__SOCKADDR_COMMON_SIZE
 -

248  (
ö_p‹t_t
) -

249  (
ö_addr
)];

252 #i‚de‡
__USE_KERNEL_IPV6_DEFS


254 
	ssockaddr_ö6


256 
__SOCKADDR_COMMON
 (
sö6_
);

257 
ö_p‹t_t
 
	msö6_p‹t
;

258 
uöt32_t
 
	msö6_Êowöfo
;

259 
ö6_addr
 
	msö6_addr
;

260 
uöt32_t
 
	msö6_sc›e_id
;

264 #ifde‡
__USE_MISC


266 
	sù_mªq


269 
ö_addr
 
	mimr_mu…üddr
;

272 
ö_addr
 
	mimr_öãrÁ˚
;

275 
	sù_mªq_sour˚


278 
ö_addr
 
	mimr_mu…üddr
;

281 
ö_addr
 
	mimr_öãrÁ˚
;

284 
ö_addr
 
	mimr_sour˚addr
;

288 #i‚de‡
__USE_KERNEL_IPV6_DEFS


290 
	sùv6_mªq


293 
ö6_addr
 
	mùv6mr_mu…üddr
;

296 
	mùv6mr_öãrÁ˚
;

300 #ifde‡
__USE_MISC


302 
	sgroup_ªq


305 
uöt32_t
 
	mgr_öãrÁ˚
;

308 
sockaddr_°‹age
 
	mgr_group
;

311 
	sgroup_sour˚_ªq


314 
uöt32_t
 
	mg§_öãrÁ˚
;

317 
sockaddr_°‹age
 
	mg§_group
;

320 
sockaddr_°‹age
 
	mg§_sour˚
;

325 
	sù_msfûãr


328 
ö_addr
 
	mimsf_mu…üddr
;

331 
ö_addr
 
	mimsf_öãrÁ˚
;

334 
uöt32_t
 
	mimsf_fmode
;

337 
uöt32_t
 
	mimsf_num§c
;

339 
ö_addr
 
	mimsf_¶i°
[1];

342 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

343 -  (
ö_addr
) \

344 + (
num§c
Ë*  (
ö_addr
))

	)

346 
	sgroup_fûãr


349 
uöt32_t
 
	mgf_öãrÁ˚
;

352 
sockaddr_°‹age
 
	mgf_group
;

355 
uöt32_t
 
	mgf_fmode
;

358 
uöt32_t
 
	mgf_num§c
;

360 
sockaddr_°‹age
 
	mgf_¶i°
[1];

363 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

364 -  (
sockaddr_°‹age
) \

365 + ((
num§c
) \

366 *  (
sockaddr_°‹age
)))

	)

376 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

381 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

382 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

384 
	~<ídün.h
>

387 
	~<bôs/byãsw≠.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë(x)

	)

397 
	#¡ohs
(
x
Ë(x)

	)

398 
	#ht⁄l
(
x
Ë(x)

	)

399 
	#ht⁄s
(
x
Ë(x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
s6_addr32
[0] == 0 \

415 && 
__a
->
s6_addr32
[1] == 0 \

416 && 
__a
->
s6_addr32
[2] == 0 \

417 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
s6_addr32
[0] == 0 \

423 && 
__a
->
s6_addr32
[1] == 0 \

424 && 
__a
->
s6_addr32
[2] == 0 \

425 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
s6_addr32
[0] == 0 \

441 && 
__a
->
s6_addr32
[1] == 0 \

442 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
s6_addr32
[0] == 0 \

448 && 
__a
->
s6_addr32
[1] == 0 \

449 && 
__a
->
s6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

457 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

458 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

459 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‚de‡
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/infiniband/ofa_verbs.h

1 #i‚de‡
INFINIBAND_OFA_VERBS_H


2 
	#INFINIBAND_OFA_VERBS_H


	)

4 
	gibv_§q_öô_©å
;

5 
	gibv_cq
;

6 
	gibv_pd
;

7 
	gibv_qp_öô_©å
;

8 
	gibv_qp_©å
;

11 #ifde‡
__GNUC__


12 
	#DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

14 
	#DEPRECATED


	)

18 
	#LEGACY_XRC_SRQ_HANDLE
 0xffffffff

	)

20 
	sibv_xrc_domaö
 {

21 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

22 
uöt32_t
 
	mh™dÀ
;

25 
	sibv_§q_Àgacy
 {

26 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

27 *
	m§q_c⁄ãxt
;

28 
ibv_pd
 *
	mpd
;

29 
uöt32_t
 
	mh™dÀ
;

31 
uöt32_t
 
	mevíts_com∂ëed
;

33 
uöt32_t
 
	mxrc_§q_num_bö_com∑t
;

34 
ibv_xrc_domaö
 *
	mxrc_domaö_bö_com∑t
;

35 
ibv_cq
 *
	mxrc_cq_bö_com∑t
;

37 
±hªad_muãx_t
 
	mmuãx
;

38 
±hªad_c⁄d_t
 
	mc⁄d
;

40 *
	mibv_§q
;

44 
uöt32_t
 
	mxrc_§q_num
;

45 
ibv_xrc_domaö
 *
	mxrc_domaö
;

46 
ibv_cq
 *
	mxrc_cq
;

72 
ibv_xrc_domaö
 *
	$ibv_›í_xrc_domaö
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

73 
fd
, 
oÊag
Ë
DEPRECATED
;

89 
ibv_§q
 *
	$ibv_¸óã_xrc_§q
(
ibv_pd
 *
pd
,

90 
ibv_xrc_domaö
 *
xrc_domaö
,

91 
ibv_cq
 *
xrc_cq
,

92 
ibv_§q_öô_©å
 *
§q_öô_©å
Ë
DEPRECATED
;

102 
	$ibv_˛o£_xrc_domaö
(
ibv_xrc_domaö
 *
d
Ë
DEPRECATED
;

126 
	$ibv_¸óã_xrc_rcv_qp
(
ibv_qp_öô_©å
 *
öô_©å
,

127 
uöt32_t
 *
xrc_rcv_q≤
Ë
DEPRECATED
;

152 
	$ibv_modify_xrc_rcv_qp
(
ibv_xrc_domaö
 *
xrc_domaö
,

153 
uöt32_t
 
xrc_qp_num
,

154 
ibv_qp_©å
 *
©å
, 
©å_mask
Ë
DEPRECATED
;

168 
	$ibv_quîy_xrc_rcv_qp
(
ibv_xrc_domaö
 *
xrc_domaö
, 
uöt32_t
 
xrc_qp_num
,

169 
ibv_qp_©å
 *
©å
, 
©å_mask
,

170 
ibv_qp_öô_©å
 *
öô_©å
Ë
DEPRECATED
;

185 
	$ibv_ªg_xrc_rcv_qp
(
ibv_xrc_domaö
 *
xrc_domaö
,

186 
uöt32_t
 
xrc_qp_num
Ë
DEPRECATED
;

204 
	$ibv_uƒeg_xrc_rcv_qp
(
ibv_xrc_domaö
 *
xrc_domaö
,

205 
uöt32_t
 
xrc_qp_num
Ë
DEPRECATED
;

	@/usr/include/infiniband/verbs_exp.h

36 #i‚de‡
INFINIBAND_VERBS_EXP_H


37 
	#INFINIBAND_VERBS_EXP_H


	)

39 
	~<öföib™d/vîbs.h
>

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

43 #i‡
__GNUC__
 >= 3

44 
	#__©åibuã_c⁄°
 
	`__©åibuã__
((c⁄°))

	)

46 
	#__©åibuã_c⁄°


	)

49 
	gBEGIN_C_DECLS


51 
	#IBV_EXP_RET_ON_INVALID_COMP_MASK
(
vÆ
, 
vÆid_mask
, 
ªt
) \

52 i‡((
vÆ
Ë> (
vÆid_mask
)) { \

53 
	`Ârötf
(
°dîr
, "%s: invalid comp_mask !!! (comp_mask = 0x%x valid_mask = 0x%x)\n", \

54 
__FUNCTION__
, 
vÆ
, 
vÆid_mask
); \

55 
î∫o
 = 
EINVAL
; \

56  
ªt
; \

57 }

	)

59 
	#IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
vÆ
, 
vÆid_mask
) \

60 
	`IBV_EXP_RET_ON_INVALID_COMP_MASK
(
vÆ
, 
vÆid_mask
, 
NULL
)

	)

62 
	#IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
vÆ
, 
vÆid_mask
) \

63 
	`IBV_EXP_RET_ON_INVALID_COMP_MASK
(
vÆ
, 
vÆid_mask
, 
EINVAL
)

	)

65 
	#IBV_EXP_RET_ZERO_ON_INVALID_COMP_MASK
(
vÆ
, 
vÆid_mask
) \

66 
	`IBV_EXP_RET_ON_INVALID_COMP_MASK
(
vÆ
, 
vÆid_mask
, 0)

	)

68 
	#IBV_EXP_IMPLICIT_MR_SIZE
 (~((
size_t
)0))

	)

70 
	eibv_exp_func_«me
 {

71 
	mIBV_EXP_POST_SEND_FUNC
,

72 
	mIBV_EXP_POLL_CQ_FUNC
,

73 
	mIBV_POST_SEND_FUNC
,

74 
	mIBV_POLL_CQ_FUNC
,

75 
	mIBV_POST_RECV_FUNC


78 
	eibv_exp_°¨t_vÆues
 {

79 
	mIBV_EXP_START_ENUM
 = 0x40,

80 
	mIBV_EXP_START_FLAG_LOC
 = 0x20,

81 
	mIBV_EXP_START_FLAG
 = (1ULL << 
IBV_EXP_START_FLAG_LOC
),

87 
	eibv_exp_©omic_ˇp
 {

88 
	mIBV_EXP_ATOMIC_NONE
 = 
IBV_ATOMIC_NONE
,

89 
	mIBV_EXP_ATOMIC_HCA
 = 
IBV_ATOMIC_HCA
,

90 
	mIBV_EXP_ATOMIC_GLOB
 = 
IBV_ATOMIC_GLOB
,

92 
	mIBV_EXP_ATOMIC_HCA_REPLY_BE
 = 
IBV_EXP_START_ENUM


98 
	eibv_exp_devi˚_ˇp_Êags
 {

99 
	mIBV_EXP_DEVICE_RESIZE_MAX_WR
 = 
IBV_DEVICE_RESIZE_MAX_WR
,

100 
	mIBV_EXP_DEVICE_BAD_PKEY_CNTR
 = 
IBV_DEVICE_BAD_PKEY_CNTR
,

101 
	mIBV_EXP_DEVICE_BAD_QKEY_CNTR
 = 
IBV_DEVICE_BAD_QKEY_CNTR
,

102 
	mIBV_EXP_DEVICE_RAW_MULTI
 = 
IBV_DEVICE_RAW_MULTI
,

103 
	mIBV_EXP_DEVICE_AUTO_PATH_MIG
 = 
IBV_DEVICE_AUTO_PATH_MIG
,

104 
	mIBV_EXP_DEVICE_CHANGE_PHY_PORT
 = 
IBV_DEVICE_CHANGE_PHY_PORT
,

105 
	mIBV_EXP_DEVICE_UD_AV_PORT_ENFORCE
 = 
IBV_DEVICE_UD_AV_PORT_ENFORCE
,

106 
	mIBV_EXP_DEVICE_CURR_QP_STATE_MOD
 = 
IBV_DEVICE_CURR_QP_STATE_MOD
,

107 
	mIBV_EXP_DEVICE_SHUTDOWN_PORT
 = 
IBV_DEVICE_SHUTDOWN_PORT
,

108 
	mIBV_EXP_DEVICE_INIT_TYPE
 = 
IBV_DEVICE_INIT_TYPE
,

109 
	mIBV_EXP_DEVICE_PORT_ACTIVE_EVENT
 = 
IBV_DEVICE_PORT_ACTIVE_EVENT
,

110 
	mIBV_EXP_DEVICE_SYS_IMAGE_GUID
 = 
IBV_DEVICE_SYS_IMAGE_GUID
,

111 
	mIBV_EXP_DEVICE_RC_RNR_NAK_GEN
 = 
IBV_DEVICE_RC_RNR_NAK_GEN
,

112 
	mIBV_EXP_DEVICE_SRQ_RESIZE
 = 
IBV_DEVICE_SRQ_RESIZE
,

113 
	mIBV_EXP_DEVICE_N_NOTIFY_CQ
 = 
IBV_DEVICE_N_NOTIFY_CQ
,

114 
	mIBV_EXP_DEVICE_XRC
 = 
IBV_DEVICE_XRC
,

116 
	mIBV_EXP_DEVICE_DC_TRANSPORT
 = (
IBV_EXP_START_FLAG
 << 0),

117 
	mIBV_EXP_DEVICE_QPG
 = (
IBV_EXP_START_FLAG
 << 1),

118 
	mIBV_EXP_DEVICE_UD_RSS
 = (
IBV_EXP_START_FLAG
 << 2),

119 
	mIBV_EXP_DEVICE_UD_TSS
 = (
IBV_EXP_START_FLAG
 << 3),

120 
	mIBV_EXP_DEVICE_EXT_ATOMICS
 = (
IBV_EXP_START_FLAG
 << 4),

121 
	mIBV_EXP_DEVICE_NOP
 = (
IBV_EXP_START_FLAG
 << 5),

122 
	mIBV_EXP_DEVICE_UMR
 = (
IBV_EXP_START_FLAG
 << 6),

123 
	mIBV_EXP_DEVICE_ODP
 = (
IBV_EXP_START_FLAG
 << 7),

124 
	mIBV_EXP_DEVICE_VXLAN_SUPPORT
 = (
IBV_EXP_START_FLAG
 << 10),

125 
	mIBV_EXP_DEVICE_RX_CSUM_TCP_UDP_PKT
 = (
IBV_EXP_START_FLAG
 << 11),

126 
	mIBV_EXP_DEVICE_RX_CSUM_IP_PKT
 = (
IBV_EXP_START_FLAG
 << 12),

127 
	mIBV_EXP_DEVICE_EC_OFFLOAD
 = (
IBV_EXP_START_FLAG
 << 13),

128 
	mIBV_EXP_DEVICE_EXT_MASKED_ATOMICS
 = (
IBV_EXP_START_FLAG
 << 14),

129 
	mIBV_EXP_DEVICE_RX_TCP_UDP_PKT_TYPE
 = (
IBV_EXP_START_FLAG
 << 15),

130 
	mIBV_EXP_DEVICE_SCATTER_FCS
 = (
IBV_EXP_START_FLAG
 << 16),

131 
	mIBV_EXP_DEVICE_MEM_WINDOW
 = (
IBV_EXP_START_FLAG
 << 17),

132 
	mIBV_EXP_DEVICE_WQ_DELAY_DROP
 = (
IBV_EXP_START_FLAG
 << 18),

133 
	mIBV_EXP_DEVICE_MEM_MGT_EXTENSIONS
 = (
IBV_EXP_START_FLAG
 << 21),

134 
	mIBV_EXP_DEVICE_DC_INFO
 = (
IBV_EXP_START_FLAG
 << 22),

136 
	mIBV_EXP_DEVICE_MW_TYPE_2A
 = (
IBV_EXP_START_FLAG
 << 23),

137 
	mIBV_EXP_DEVICE_MW_TYPE_2B
 = (
IBV_EXP_START_FLAG
 << 24),

138 
	mIBV_EXP_DEVICE_CROSS_CHANNEL
 = (
IBV_EXP_START_FLAG
 << 28),

139 
	mIBV_EXP_DEVICE_MANAGED_FLOW_STEERING
 = (
IBV_EXP_START_FLAG
 << 29),

140 
	mIBV_EXP_DEVICE_MR_ALLOCATE
 = (
IBV_EXP_START_FLAG
 << 30),

141 
	mIBV_EXP_DEVICE_SHARED_MR
 = (
IBV_EXP_START_FLAG
 << 31),

147 
	eibv_exp_devi˚_©å_comp_mask
 {

148 
	mIBV_EXP_DEVICE_ATTR_CALC_CAP
 = (1 << 0),

149 
	mIBV_EXP_DEVICE_ATTR_WITH_TIMESTAMP_MASK
 = (1 << 1),

150 
	mIBV_EXP_DEVICE_ATTR_WITH_HCA_CORE_CLOCK
 = (1 << 2),

151 
	mIBV_EXP_DEVICE_ATTR_EXP_CAP_FLAGS
 = (1 << 3),

152 
	mIBV_EXP_DEVICE_DC_RD_REQ
 = (1 << 4),

153 
	mIBV_EXP_DEVICE_DC_RD_RES
 = (1 << 5),

154 
	mIBV_EXP_DEVICE_ATTR_INLINE_RECV_SZ
 = (1 << 6),

155 
	mIBV_EXP_DEVICE_ATTR_RSS_TBL_SZ
 = (1 << 7),

156 
	mIBV_EXP_DEVICE_ATTR_EXT_ATOMIC_ARGS
 = (1 << 8),

157 
	mIBV_EXP_DEVICE_ATTR_UMR
 = (1 << 9),

158 
	mIBV_EXP_DEVICE_ATTR_ODP
 = (1 << 10),

159 
	mIBV_EXP_DEVICE_ATTR_MAX_DCT
 = (1 << 11),

160 
	mIBV_EXP_DEVICE_ATTR_MAX_CTX_RES_DOMAIN
 = (1 << 12),

161 
	mIBV_EXP_DEVICE_ATTR_RX_HASH
 = (1 << 13),

162 
	mIBV_EXP_DEVICE_ATTR_MAX_WQ_TYPE_RQ
 = (1 << 14),

163 
	mIBV_EXP_DEVICE_ATTR_MAX_DEVICE_CTX
 = (1 << 15),

164 
	mIBV_EXP_DEVICE_ATTR_MP_RQ
 = (1 << 16),

165 
	mIBV_EXP_DEVICE_ATTR_VLAN_OFFLOADS
 = (1 << 17),

166 
	mIBV_EXP_DEVICE_ATTR_EC_CAPS
 = (1 << 18),

167 
	mIBV_EXP_DEVICE_ATTR_MASKED_ATOMICS
 = (1 << 19),

168 
	mIBV_EXP_DEVICE_ATTR_RX_PAD_END_ALIGN
 = (1 << 20),

169 
	mIBV_EXP_DEVICE_ATTR_TSO_CAPS
 = (1 << 21),

170 
	mIBV_EXP_DEVICE_ATTR_PACKET_PACING_CAPS
 = (1 << 22),

171 
	mIBV_EXP_DEVICE_ATTR_EC_GF_BASE
 = (1 << 23),

172 
	mIBV_EXP_DEVICE_ATTR_OOO_CAPS
 = (1 << 24),

173 
	mIBV_EXP_DEVICE_ATTR_SW_PARSING_CAPS
 = (1 << 25),

174 
	mIBV_EXP_DEVICE_ATTR_ODP_MAX_SIZE
 = (1 << 26),

175 
	mIBV_EXP_DEVICE_ATTR_TM_CAPS
 = (1 << 27),

177 
	mIBV_EXP_DEVICE_ATTR_RESERVED
 = (1 << 28),

180 
	sibv_exp_devi˚_ˇlc_ˇp
 {

181 
uöt64_t
 
	md©a_ty≥s
;

182 
uöt64_t
 
	md©a_sizes
;

183 
uöt64_t
 
	möt_›s
;

184 
uöt64_t
 
	muöt_›s
;

185 
uöt64_t
 
	mÂ_›s
;

188 
	sibv_exp_ext_©omics_∑øms
 {

192 
uöt64_t
 
	mlog_©omic_¨g_sizes
;

193 
uöt32_t
 
	mmax_Á_bô_bound¨y
;

194 
uöt32_t
 
	mlog_max_©omic_ölöe
;

197 
	sibv_exp_masked_©omic_∑øms
 {

198 
uöt32_t
 
	mmax_Á_bô_bound¨y
;

199 
uöt32_t
 
	mlog_max_©omic_ölöe
;

200 
uöt64_t
 
	mmasked_log_©omic_¨g_sizes
;

201 
uöt64_t
 
	mmasked_log_©omic_¨g_sizes_√tw‹k_ídü¬ess
;

204 
	eibv_odp_gíîÆ_ˇp_bôs
 {

205 
	mIBV_EXP_ODP_SUPPORT
 = 1 << 0,

206 
	mIBV_EXP_ODP_SUPPORT_IMPLICIT
 = 1 << 1,

209 
	eibv_exp_odp_å™•‹t_ˇp_bôs
 {

210 
	mIBV_EXP_ODP_SUPPORT_SEND
 = 1 << 0,

211 
	mIBV_EXP_ODP_SUPPORT_RECV
 = 1 << 1,

212 
	mIBV_EXP_ODP_SUPPORT_WRITE
 = 1 << 2,

213 
	mIBV_EXP_ODP_SUPPORT_READ
 = 1 << 3,

214 
	mIBV_EXP_ODP_SUPPORT_ATOMIC
 = 1 << 4,

215 
	mIBV_EXP_ODP_SUPPORT_SRQ_RECV
 = 1 << 5,

218 
	sibv_exp_umr_ˇps
 {

219 
uöt32_t
 
	mmax_klm_li°_size
;

220 
uöt32_t
 
	mmax_£nd_wqe_ölöe_klms
;

221 
uöt32_t
 
	mmax_umr_ªcursi⁄_dïth
;

222 
uöt32_t
 
	mmax_umr_°ride_dimísi⁄
;

225 
	sibv_exp_odp_ˇps
 {

226 
uöt64_t
 
	mgíîÆ_odp_ˇps
;

228 
uöt32_t
 
	mrc_odp_ˇps
;

229 
uöt32_t
 
	muc_odp_ˇps
;

230 
uöt32_t
 
	mud_odp_ˇps
;

231 
uöt32_t
 
	mdc_odp_ˇps
;

232 
uöt32_t
 
	mxrc_odp_ˇps
;

233 
uöt32_t
 
	møw_ëh_odp_ˇps
;

234 } 
	m≥r_å™•‹t_ˇps
;

237 
	eibv_exp_suµ‹ãd_qp_ty≥s
 {

238 
	mIBV_EXP_QPT_RC
 = 1ULL << 0,

239 
	mIBV_EXP_QPT_UC
 = 1ULL << 1,

240 
	mIBV_EXP_QPT_UD
 = 1ULL << 2,

241 
	mIBV_EXP_QPT_XRC_INIT
 = 1ULL << 3,

242 
	mIBV_EXP_QPT_XRC_TGT
 = 1ULL << 4,

243 
	mIBV_EXP_QPT_RAW_PACKET
 = 1ULL << 5,

244 
	mIBV_EXP_QPT_RESERVED
 = 1ULL << 6

247 
	sibv_exp_rx_hash_ˇps
 {

248 
uöt32_t
 
	mmax_rwq_ödúe˘i⁄_èbÀs
;

249 
uöt32_t
 
	mmax_rwq_ödúe˘i⁄_èbÀ_size
;

250 
uöt8_t
 
	msuµ‹ãd_hash_fun˘i⁄s
;

251 
uöt64_t
 
	msuµ‹ãd_∑ckë_fõlds
;

252 
uöt32_t
 
	msuµ‹ãd_qps
;

255 
	eibv_exp_mp_rq_shi·s
 {

256 
	mIBV_EXP_MP_RQ_NO_SHIFT
 = 0,

257 
	mIBV_EXP_MP_RQ_2BYTES_SHIFT
 = 1 << 0

260 
	sibv_exp_›í_devi˚_©å
 {

261 
uöt32_t
 
	mcomp_mask
;

263 
uöt64_t
 
	m≥î_id
;

264 *
	m≥î_«me
;

265 } 
	m≥î_öfo
;

268 
	eibv_exp_£t_c⁄ãxt_©å
 {

269 
	mIBV_EXP_SET_ATTR_PEER_INFO
 = (1 << 0),

270 
	mIBV_EXP_SET_CONTEXT_ATTR_RESERVED
 = (1 << 1),

273 
	sibv_exp_mp_rq_ˇps
 {

274 
uöt32_t
 
	msuµ‹ãd_qps
;

275 
uöt32_t
 
	mÆlowed_shi·s
;

276 
uöt8_t
 
	mmö_sögÀ_wqe_log_num_of_°rides
;

277 
uöt8_t
 
	mmax_sögÀ_wqe_log_num_of_°rides
;

278 
uöt8_t
 
	mmö_sögÀ_°ride_log_num_of_byãs
;

279 
uöt8_t
 
	mmax_sögÀ_°ride_log_num_of_byãs
;

282 
	sibv_exp_ec_ˇps
 {

283 
uöt32_t
 
	mmax_ec_d©a_ve˘‹_cou¡
;

284 
uöt32_t
 
	mmax_ec_ˇlc_öÊight_ˇlcs
;

287 
	#ibv_is_q±_suµ‹ãd
(
ˇps
, 
q±
Ë((ˇpsË& (1 << (q±)))

	)

289 
	sibv_exp_tso_ˇps
 {

290 
uöt32_t
 
	mmax_tso
;

291 
uöt32_t
 
	msuµ‹ãd_q±s
;

294 
	sibv_exp_∑ckë_∑cög_ˇps
 {

295 
uöt32_t
 
	mqp_øã_limô_mö
;

296 
uöt32_t
 
	mqp_øã_limô_max
;

297 
uöt32_t
 
	msuµ‹ãd_q±s
;

298 
uöt32_t
 
	mª£rved
;

301 
	eibv_exp_ooo_å™•‹t_ˇp_bôs
 {

302 
	mIBV_EXP_OOO_SUPPORT_RW_DATA_PLACEMENT
 = (1 << 0),

305 
	sibv_exp_ooo_ˇps
 {

306 
uöt32_t
 
	mrc_ˇps
;

307 
uöt32_t
 
	mxrc_ˇps
;

308 
uöt32_t
 
	mdc_ˇps
;

309 
uöt32_t
 
	mud_ˇps
;

312 
	eibv_exp_sw_∑rsög_ofÊﬂds
 {

313 
	mIBV_EXP_SW_PARSING
 = (1 << 0),

314 
	mIBV_EXP_SW_PARSING_CSUM
 = (1 << 1),

315 
	mIBV_EXP_SW_PARSING_LSO
 = (1 << 2),

318 
	sibv_exp_sw_∑rsög_ˇps
 {

319 
uöt32_t
 
	msw_∑rsög_ofÊﬂds
;

320 
uöt32_t
 
	msuµ‹ãd_q±s
;

323 
	eibv_exp_tm_ˇp_Êags
 {

324 
	mIBV_EXP_TM_CAP_RC
 = 1 << 0

327 
	sibv_exp_tm_ˇps
 {

329 
uöt32_t
 
	mmax_∫dv_hdr_size
;

331 
uöt32_t
 
	mmax_num_ègs
;

333 
uöt32_t
 
	mˇ∑bûôy_Êags
;

335 
uöt32_t
 
	mmax_›s
;

337 
uöt32_t
 
	mmax_sge
;

340 
	sibv_exp_devi˚_©å
 {

341 
	mfw_vî
[64];

342 
uöt64_t
 
	mnode_guid
;

343 
uöt64_t
 
	msys_image_guid
;

344 
uöt64_t
 
	mmax_mr_size
;

345 
uöt64_t
 
	m∑ge_size_ˇp
;

346 
uöt32_t
 
	mvíd‹_id
;

347 
uöt32_t
 
	mvíd‹_∑π_id
;

348 
uöt32_t
 
	mhw_vî
;

349 
	mmax_qp
;

350 
	mmax_qp_wr
;

351 
	mª£rved
;

352 
	mmax_sge
;

353 
	mmax_sge_rd
;

354 
	mmax_cq
;

355 
	mmax_cqe
;

356 
	mmax_mr
;

357 
	mmax_pd
;

358 
	mmax_qp_rd_©om
;

359 
	mmax_ì_rd_©om
;

360 
	mmax_ªs_rd_©om
;

361 
	mmax_qp_öô_rd_©om
;

362 
	mmax_ì_öô_rd_©om
;

363 
ibv_exp_©omic_ˇp
 
	mexp_©omic_ˇp
;

364 
	mmax_ì
;

365 
	mmax_rdd
;

366 
	mmax_mw
;

367 
	mmax_øw_ùv6_qp
;

368 
	mmax_øw_ëhy_qp
;

369 
	mmax_mˇ°_gΩ
;

370 
	mmax_mˇ°_qp_©èch
;

371 
	mmax_tŸÆ_mˇ°_qp_©èch
;

372 
	mmax_ah
;

373 
	mmax_fmr
;

374 
	mmax_m≠_≥r_fmr
;

375 
	mmax_§q
;

376 
	mmax_§q_wr
;

377 
	mmax_§q_sge
;

378 
uöt16_t
 
	mmax_pkeys
;

379 
uöt8_t
 
	mloˇl_ˇ_ack_dñay
;

380 
uöt8_t
 
	mphys_p‹t_˙t
;

381 
uöt32_t
 
	mcomp_mask
;

382 
ibv_exp_devi˚_ˇlc_ˇp
 
	mˇlc_ˇp
;

383 
uöt64_t
 
	mtime°amp_mask
;

384 
uöt64_t
 
	mhˇ_c‹e_˛ock
;

385 
uöt64_t
 
	mexp_devi˚_ˇp_Êags
;

386 
	mmax_dc_ªq_rd_©om
;

387 
	mmax_dc_ªs_rd_©om
;

388 
	mölöe_ªcv_sz
;

389 
uöt32_t
 
	mmax_rss_tbl_sz
;

390 
ibv_exp_ext_©omics_∑øms
 
	mext_©om
;

391 
ibv_exp_umr_ˇps
 
	mumr_ˇps
;

392 
ibv_exp_odp_ˇps
 
	modp_ˇps
;

393 
	mmax_d˘
;

394 
	mmax_˘x_ªs_domaö
;

395 
ibv_exp_rx_hash_ˇps
 
	mrx_hash_ˇps
;

396 
uöt32_t
 
	mmax_wq_ty≥_rq
;

397 
	mmax_devi˚_˘x
;

398 
ibv_exp_mp_rq_ˇps
 
	mmp_rq_ˇps
;

399 
uöt16_t
 
	mwq_vœn_ofÊﬂds_ˇp
;

400 
ibv_exp_ec_ˇps
 
	mec_ˇps
;

401 
ibv_exp_masked_©omic_∑øms
 
	mmasked_©omic
;

410 
	mrx_∑d_íd_addr_Æign
;

411 
ibv_exp_tso_ˇps
 
	mtso_ˇps
;

412 
ibv_exp_∑ckë_∑cög_ˇps
 
	m∑ckë_∑cög_ˇps
;

413 
uöt32_t
 
	mec_w_mask
;

414 
ibv_exp_ooo_ˇps
 
	mooo_ˇps
;

415 
ibv_exp_sw_∑rsög_ˇps
 
	msw_∑rsög_ˇps
;

416 
uöt64_t
 
	modp_mr_max_size
;

417 
ibv_exp_tm_ˇps
 
	mtm_ˇps
;

421 
	mIBV_EXP_ACCESS_FLAGS_SHIFT
 = 0x0F

424 
	eibv_exp_ac˚ss_Êags
 {

425 
	mIBV_EXP_ACCESS_LOCAL_WRITE
 = 
IBV_ACCESS_LOCAL_WRITE
,

426 
	mIBV_EXP_ACCESS_REMOTE_WRITE
 = 
IBV_ACCESS_REMOTE_WRITE
,

427 
	mIBV_EXP_ACCESS_REMOTE_READ
 = 
IBV_ACCESS_REMOTE_READ
,

428 
	mIBV_EXP_ACCESS_REMOTE_ATOMIC
 = 
IBV_ACCESS_REMOTE_ATOMIC
,

429 
	mIBV_EXP_ACCESS_MW_BIND
 = 
IBV_ACCESS_MW_BIND
,

431 
	mIBV_EXP_ACCESS_ALLOCATE_MR
 = (
IBV_EXP_START_FLAG
 << 5),

432 
	mIBV_EXP_ACCESS_SHARED_MR_USER_READ
 = (
IBV_EXP_START_FLAG
 << 6),

433 
	mIBV_EXP_ACCESS_SHARED_MR_USER_WRITE
 = (
IBV_EXP_START_FLAG
 << 7),

434 
	mIBV_EXP_ACCESS_SHARED_MR_GROUP_READ
 = (
IBV_EXP_START_FLAG
 << 8),

435 
	mIBV_EXP_ACCESS_SHARED_MR_GROUP_WRITE
 = (
IBV_EXP_START_FLAG
 << 9),

436 
	mIBV_EXP_ACCESS_SHARED_MR_OTHER_READ
 = (
IBV_EXP_START_FLAG
 << 10),

437 
	mIBV_EXP_ACCESS_SHARED_MR_OTHER_WRITE
 = (
IBV_EXP_START_FLAG
 << 11),

438 
	mIBV_EXP_ACCESS_NO_RDMA
 = (
IBV_EXP_START_FLAG
 << 12),

439 
	mIBV_EXP_ACCESS_MW_ZERO_BASED
 = (
IBV_EXP_START_FLAG
 << 13),

440 
	mIBV_EXP_ACCESS_ON_DEMAND
 = (
IBV_EXP_START_FLAG
 << 14),

441 
	mIBV_EXP_ACCESS_RELAXED
 = (
IBV_EXP_START_FLAG
 << 15),

442 
	mIBV_EXP_ACCESS_PHYSICAL_ADDR
 = (
IBV_EXP_START_FLAG
 << 16),

444 
	mIBV_EXP_ACCESS_RESERVED
 = (
IBV_EXP_START_FLAG
 << 17)

448 
	sibv_exp_mw_böd_öfo
 {

449 
ibv_mr
 *
	mmr
;

450 
uöt64_t
 
	maddr
;

451 
uöt64_t
 
	mÀngth
;

452 
uöt64_t
 
	mexp_mw_ac˚ss_Êags
;

458 
	eibv_exp_böd_mw_comp_mask
 {

459 
	mIBV_EXP_BIND_MW_RESERVED
 = (1 << 0)

463 
	sibv_exp_mw_böd
 {

464 
ibv_qp
 *
	mqp
;

465 
ibv_mw
 *
	mmw
;

466 
uöt64_t
 
	mwr_id
;

467 
uöt64_t
 
	mexp_£nd_Êags
;

468 
ibv_exp_mw_böd_öfo
 
	mböd_öfo
;

469 
uöt32_t
 
	mcomp_mask
;

472 
	eibv_exp_ˇlc_›
 {

473 
	mIBV_EXP_CALC_OP_ADD
 = 0,

474 
	mIBV_EXP_CALC_OP_MAXLOC
,

475 
	mIBV_EXP_CALC_OP_BAND
,

476 
	mIBV_EXP_CALC_OP_BXOR
,

477 
	mIBV_EXP_CALC_OP_BOR
,

478 
	mIBV_EXP_CALC_OP_NUMBER


481 
	eibv_exp_ˇlc_d©a_ty≥
 {

482 
	mIBV_EXP_CALC_DATA_TYPE_INT
 = 0,

483 
	mIBV_EXP_CALC_DATA_TYPE_UINT
,

484 
	mIBV_EXP_CALC_DATA_TYPE_FLOAT
,

485 
	mIBV_EXP_CALC_DATA_TYPE_NUMBER


488 
	eibv_exp_ˇlc_d©a_size
 {

489 
	mIBV_EXP_CALC_DATA_SIZE_64_BIT
 = 0,

490 
	mIBV_EXP_CALC_DATA_SIZE_NUMBER


493 
	eibv_exp_wr_›code
 {

494 
	mIBV_EXP_WR_RDMA_WRITE
 = 
IBV_WR_RDMA_WRITE
,

495 
	mIBV_EXP_WR_RDMA_WRITE_WITH_IMM
 = 
IBV_WR_RDMA_WRITE_WITH_IMM
,

496 
	mIBV_EXP_WR_SEND
 = 
IBV_WR_SEND
,

497 
	mIBV_EXP_WR_SEND_WITH_IMM
 = 
IBV_WR_SEND_WITH_IMM
,

498 
	mIBV_EXP_WR_RDMA_READ
 = 
IBV_WR_RDMA_READ
,

499 
	mIBV_EXP_WR_ATOMIC_CMP_AND_SWP
 = 
IBV_WR_ATOMIC_CMP_AND_SWP
,

500 
	mIBV_EXP_WR_ATOMIC_FETCH_AND_ADD
 = 
IBV_WR_ATOMIC_FETCH_AND_ADD
,

501 
	mIBV_EXP_WR_LOCAL_INV
 = 
IBV_WR_LOCAL_INV
,

502 
	mIBV_EXP_WR_BIND_MW
 = 
IBV_WR_BIND_MW
,

503 
	mIBV_EXP_WR_SEND_WITH_INV
 = 
IBV_WR_SEND_WITH_INV
,

505 
	mIBV_EXP_WR_TSO
 = 15 + 
IBV_EXP_START_ENUM
,

506 
	mIBV_EXP_WR_SEND_ENABLE
 = 0x20 + 
IBV_EXP_START_ENUM
,

507 
	mIBV_EXP_WR_RECV_ENABLE
,

508 
	mIBV_EXP_WR_CQE_WAIT
,

509 
	mIBV_EXP_WR_EXT_MASKED_ATOMIC_CMP_AND_SWP
,

510 
	mIBV_EXP_WR_EXT_MASKED_ATOMIC_FETCH_AND_ADD
,

511 
	mIBV_EXP_WR_NOP
,

512 
	mIBV_EXP_WR_UMR_FILL
,

513 
	mIBV_EXP_WR_UMR_INVALIDATE
,

516 
	eibv_exp_£nd_Êags
 {

517 
	mIBV_EXP_SEND_FENCE
 = 
IBV_SEND_FENCE
,

518 
	mIBV_EXP_SEND_SIGNALED
 = 
IBV_SEND_SIGNALED
,

519 
	mIBV_EXP_SEND_SOLICITED
 = 
IBV_SEND_SOLICITED
,

520 
	mIBV_EXP_SEND_INLINE
 = 
IBV_SEND_INLINE
,

522 
	mIBV_EXP_SEND_IP_CSUM
 = (
IBV_EXP_START_FLAG
 << 0),

523 
	mIBV_EXP_SEND_WITH_CALC
 = (
IBV_EXP_START_FLAG
 << 1),

524 
	mIBV_EXP_SEND_WAIT_EN_LAST
 = (
IBV_EXP_START_FLAG
 << 2),

525 
	mIBV_EXP_SEND_EXT_ATOMIC_INLINE
 = (
IBV_EXP_START_FLAG
 << 3),

528 
	sibv_exp_cmp_sw≠
 {

529 
uöt64_t
 
	mcom∑ª_mask
;

530 
uöt64_t
 
	mcom∑ª_vÆ
;

531 
uöt64_t
 
	msw≠_vÆ
;

532 
uöt64_t
 
	msw≠_mask
;

535 
	sibv_exp_„tch_add
 {

536 
uöt64_t
 
	madd_vÆ
;

537 
uöt64_t
 
	mfõld_bound¨y
;

543 
	eibv_exp_£nd_wr_comp_mask
 {

544 
	mIBV_EXP_SEND_WR_ATTR_RESERVED
 = 1 << 0

547 
	sibv_exp_mem_ªgi⁄
 {

548 
uöt64_t
 
	mba£_addr
;

549 
ibv_mr
 *
	mmr
;

550 
size_t
 
	mÀngth
;

553 
	sibv_exp_mem_ª≥©_block
 {

554 
uöt64_t
 
	mba£_addr
;

555 
ibv_mr
 *
	mmr
;

556 
size_t
 *
	mbyã_cou¡
;

557 
size_t
 *
	m°ride
;

560 
	eibv_exp_umr_wr_ty≥
 {

561 
	mIBV_EXP_UMR_MR_LIST
,

562 
	mIBV_EXP_UMR_REPEAT


565 
	sibv_exp_£nd_wr
 {

566 
uöt64_t
 
	mwr_id
;

567 
ibv_exp_£nd_wr
 *
	m√xt
;

568 
ibv_sge
 *
	msg_li°
;

569 
	mnum_sge
;

570 
ibv_exp_wr_›code
 
	mexp_›code
;

571 
	mª£rved
;

573 
uöt32_t
 
	mimm_d©a
;

574 
uöt32_t
 
	mövÆid©e_rkey
;

575 } 
	mex
;

578 
uöt64_t
 
	mªmŸe_addr
;

579 
uöt32_t
 
	mrkey
;

580 } 
	mrdma
;

582 
uöt64_t
 
	mªmŸe_addr
;

583 
uöt64_t
 
	mcom∑ª_add
;

584 
uöt64_t
 
	msw≠
;

585 
uöt32_t
 
	mrkey
;

586 } 
	m©omic
;

588 
ibv_ah
 *
	mah
;

589 
uöt32_t
 
	mªmŸe_q≤
;

590 
uöt32_t
 
	mªmŸe_qkey
;

591 } 
	mud
;

592 } 
	mwr
;

596 
uöt32_t
 
	mªmŸe_§qn
;

597 } 
	mxrc
;

598 } 
	mqp_ty≥
;

600 
uöt32_t
 
	mxrc_ªmŸe_§q_num
;

604 
uöt64_t
 
	mªmŸe_addr
;

605 
uöt32_t
 
	mrkey
;

606 } 
	mrdma
;

608 
uöt64_t
 
	mªmŸe_addr
;

609 
uöt64_t
 
	mcom∑ª_add
;

610 
uöt64_t
 
	msw≠
;

611 
uöt32_t
 
	mrkey
;

612 } 
	m©omic
;

614 
ibv_cq
 *
	mcq
;

615 
öt32_t
 
	mcq_cou¡
;

616 } 
	mcqe_waô
;

618 
ibv_qp
 *
	mqp
;

619 
öt32_t
 
	mwqe_cou¡
;

620 } 
	mwqe_íabÀ
;

621 } 
	mèsk
;

624 
ibv_exp_ˇlc_›
 
	mˇlc_›
;

625 
ibv_exp_ˇlc_d©a_ty≥
 
	md©a_ty≥
;

626 
ibv_exp_ˇlc_d©a_size
 
	md©a_size
;

627 } 
	mˇlc
;

628 } 
	m›
;

630 
ibv_ah
 *
	mah
;

631 
uöt64_t
 
	md˘_ac˚ss_key
;

632 
uöt32_t
 
	md˘_numbî
;

633 } 
	mdc
;

636 
ibv_mw
 *
	mmw
;

637 
uöt32_t
 
	mrkey
;

638 
ibv_exp_mw_böd_öfo
 
	mböd_öfo
;

639 } 
	mböd_mw
;

641 *
	mhdr
;

642 
uöt16_t
 
	mhdr_sz
;

643 
uöt16_t
 
	mmss
;

644 } 
	mtso
;

646 
uöt64_t
 
	mexp_£nd_Êags
;

647 
uöt32_t
 
	mcomp_mask
;

650 
uöt32_t
 
	mumr_ty≥
;

651 
ibv_exp_mkey_li°_c⁄èöî
 *
	mmem‹y_obje˘s
;

652 
uöt64_t
 
	mexp_ac˚ss
;

653 
ibv_mr
 *
	mmodifõd_mr
;

654 
uöt64_t
 
	mba£_addr
;

655 
uöt32_t
 
	mnum_mrs
;

657 
ibv_exp_mem_ªgi⁄
 *
	mmem_ªg_li°
;

659 
ibv_exp_mem_ª≥©_block
 *
	mmem_ª≥©_block_li°
;

660 
size_t
 *
	mª≥©_cou¡
;

661 
uöt32_t
 
	m°ride_dim
;

662 } 
	mrb
;

663 } 
	mmem_li°
;

664 } 
	mumr
;

666 
uöt32_t
 
	mlog_¨g_sz
;

667 
uöt64_t
 
	mªmŸe_addr
;

668 
uöt32_t
 
	mrkey
;

679 
ibv_exp_cmp_sw≠
 
	mcmp_sw≠
;

680 
ibv_exp_„tch_add
 
	m„tch_add
;

681 } 
	m›
;

682 } 
	mölöe_d©a
;

684 } 
	mwr_d©a
;

685 } 
	mmasked_©omics
;

686 } 
	mext_›
;

693 
	eibv_exp_˛ock_öfo_comp_mask
 {

694 
	mIBV_EXP_CLOCK_INFO_RESERVED
 = 1 << 0,

697 
	sibv_exp_˛ock_öfo
 {

698 
uöt64_t
 
	mcy˛es
;

699 
uöt64_t
 
	mn£c
;

700 
uöt64_t
 
	m‰ac
;

701 
uöt64_t
 
	mmask
;

702 
uöt32_t
 
	mshi·
;

703 
uöt32_t
 
	mmu…
;

704 
uöt32_t
 
	mcomp_mask
;

710 
	eibv_exp_vÆues_comp_mask
 {

711 
	mIBV_EXP_VALUES_HW_CLOCK_NS
 = 1 << 0,

712 
	mIBV_EXP_VALUES_HW_CLOCK
 = 1 << 1,

713 
	mIBV_EXP_VALUES_CLOCK_INFO
 = 1 << 2,

714 
	mIBV_EXP_VALUES_RESERVED
 = 1 << 3,

717 
	sibv_exp_vÆues
 {

718 
uöt32_t
 
	mcomp_mask
;

719 
uöt64_t
 
	mhw˛ock_ns
;

720 
uöt64_t
 
	mhw˛ock
;

722 
ibv_exp_˛ock_öfo
 
	m˛ock_öfo
;

728 
	eibv_exp_cq_¸óã_Êags
 {

729 
	mIBV_EXP_CQ_CREATE_CROSS_CHANNEL
 = 1 << 0,

730 
	mIBV_EXP_CQ_TIMESTAMP
 = 1 << 1,

731 
	mIBV_EXP_CQ_TIMESTAMP_TO_SYS_TIME
 = 1 << 2,

732 
	mIBV_EXP_CQ_COMPRESSED_CQE
 = 1 << 3,

739 
	mIBV_EXP_CQ_CREATE_FLAGS_MASK
 = 
IBV_EXP_CQ_CREATE_CROSS_CHANNEL
 |

740 
IBV_EXP_CQ_TIMESTAMP
 |

741 
IBV_EXP_CQ_TIMESTAMP_TO_SYS_TIME
 |

742 
IBV_EXP_CQ_COMPRESSED_CQE
,

749 
	eibv_exp_cq_öô_©å_mask
 {

750 
	mIBV_EXP_CQ_INIT_ATTR_FLAGS
 = 1 << 0,

751 
	mIBV_EXP_CQ_INIT_ATTR_RESERVED
 = 1 << 1,

759 
	mIBV_EXP_CQ_INIT_ATTR_RES_DOMAIN
 = 1 << 1,

760 
	mIBV_EXP_CQ_INIT_ATTR_PEER_DIRECT
 = 1 << 2,

761 
	mIBV_EXP_CQ_INIT_ATTR_RESERVED1
 = 1 << 3,

764 
	sibv_exp_ªs_domaö
 {

765 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

768 
	sibv_exp_cq_öô_©å
 {

769 
uöt32_t
 
	mcomp_mask
;

770 
uöt32_t
 
	mÊags
;

771 
ibv_exp_ªs_domaö
 *
	mªs_domaö
;

772 
ibv_exp_≥î_dúe˘_©å
 *
	m≥î_dúe˘_©ås
;

778 
	eibv_exp_ah_©å_©å_comp_mask
 {

779 
	mIBV_EXP_AH_ATTR_LL
 = 1 << 0,

780 
	mIBV_EXP_AH_ATTR_VID
 = 1 << 1,

781 
	mIBV_EXP_AH_ATTR_RESERVED
 = 1 << 2

784 
	eŒ_addªss_ty≥
 {

785 
	mLL_ADDRESS_UNKNOWN
,

786 
	mLL_ADDRESS_IB
,

787 
	mLL_ADDRESS_ETH
,

788 
	mLL_ADDRESS_SIZE


791 
	sibv_exp_ah_©å
 {

792 
ibv_globÆ_rouã
 
	mgrh
;

793 
uöt16_t
 
	mdlid
;

794 
uöt8_t
 
	m¶
;

795 
uöt8_t
 
	m§c_∑th_bôs
;

796 
uöt8_t
 
	m°©ic_øã
;

797 
uöt8_t
 
	mis_globÆ
;

798 
uöt8_t
 
	mp‹t_num
;

799 
uöt32_t
 
	mcomp_mask
;

801 
Œ_addªss_ty≥
 
	mty≥
;

802 
uöt32_t
 
	mÀn
;

803 *
	maddªss
;

804 } 
	mŒ_addªss
;

805 
uöt16_t
 
	mvid
;

811 
	eibv_exp_qp_©å_mask
 {

812 
	mIBV_EXP_QP_STATE
 = 
IBV_QP_STATE
,

813 
	mIBV_EXP_QP_CUR_STATE
 = 
IBV_QP_CUR_STATE
,

814 
	mIBV_EXP_QP_EN_SQD_ASYNC_NOTIFY
 = 
IBV_QP_EN_SQD_ASYNC_NOTIFY
,

815 
	mIBV_EXP_QP_ACCESS_FLAGS
 = 
IBV_QP_ACCESS_FLAGS
,

816 
	mIBV_EXP_QP_PKEY_INDEX
 = 
IBV_QP_PKEY_INDEX
,

817 
	mIBV_EXP_QP_PORT
 = 
IBV_QP_PORT
,

818 
	mIBV_EXP_QP_QKEY
 = 
IBV_QP_QKEY
,

819 
	mIBV_EXP_QP_AV
 = 
IBV_QP_AV
,

820 
	mIBV_EXP_QP_PATH_MTU
 = 
IBV_QP_PATH_MTU
,

821 
	mIBV_EXP_QP_TIMEOUT
 = 
IBV_QP_TIMEOUT
,

822 
	mIBV_EXP_QP_RETRY_CNT
 = 
IBV_QP_RETRY_CNT
,

823 
	mIBV_EXP_QP_RNR_RETRY
 = 
IBV_QP_RNR_RETRY
,

824 
	mIBV_EXP_QP_RQ_PSN
 = 
IBV_QP_RQ_PSN
,

825 
	mIBV_EXP_QP_MAX_QP_RD_ATOMIC
 = 
IBV_QP_MAX_QP_RD_ATOMIC
,

826 
	mIBV_EXP_QP_ALT_PATH
 = 
IBV_QP_ALT_PATH
,

827 
	mIBV_EXP_QP_MIN_RNR_TIMER
 = 
IBV_QP_MIN_RNR_TIMER
,

828 
	mIBV_EXP_QP_SQ_PSN
 = 
IBV_QP_SQ_PSN
,

829 
	mIBV_EXP_QP_MAX_DEST_RD_ATOMIC
 = 
IBV_QP_MAX_DEST_RD_ATOMIC
,

830 
	mIBV_EXP_QP_PATH_MIG_STATE
 = 
IBV_QP_PATH_MIG_STATE
,

831 
	mIBV_EXP_QP_CAP
 = 
IBV_QP_CAP
,

832 
	mIBV_EXP_QP_DEST_QPN
 = 
IBV_QP_DEST_QPN
,

834 
	mIBV_EXP_QP_GROUP_RSS
 = 
IBV_EXP_START_FLAG
 << 21,

835 
	mIBV_EXP_QP_DC_KEY
 = 
IBV_EXP_START_FLAG
 << 22,

836 
	mIBV_EXP_QP_FLOW_ENTROPY
 = 
IBV_EXP_START_FLAG
 << 23,

837 
	mIBV_EXP_QP_OOO_RW_DATA_PLACEMENT
 = 
IBV_EXP_START_FLAG
 << 24,

838 
	mIBV_EXP_QP_RATE_LIMIT
 = 
IBV_EXP_START_FLAG
 << 25,

845 
	eibv_exp_qp_©å_comp_mask
 {

846 
	mIBV_EXP_QP_ATTR_FLOW_ENTROPY
 = 1UL << 0,

847 
	mIBV_EXP_QP_ATTR_RESERVED
 = 1UL << 1

850 
	sibv_exp_qp_©å
 {

851 
ibv_qp_°©e
 
	mqp_°©e
;

852 
ibv_qp_°©e
 
	mcur_qp_°©e
;

853 
ibv_mtu
 
	m∑th_mtu
;

854 
ibv_mig_°©e
 
	m∑th_mig_°©e
;

855 
uöt32_t
 
	mqkey
;

856 
uöt32_t
 
	mrq_p¢
;

857 
uöt32_t
 
	msq_p¢
;

858 
uöt32_t
 
	mde°_qp_num
;

859 
	mqp_ac˚ss_Êags
;

860 
ibv_qp_ˇp
 
	mˇp
;

861 
ibv_ah_©å
 
	mah_©å
;

862 
ibv_ah_©å
 
	mÆt_ah_©å
;

863 
uöt16_t
 
	mpkey_ödex
;

864 
uöt16_t
 
	mÆt_pkey_ödex
;

865 
uöt8_t
 
	mí_sqd_async_nŸify
;

866 
uöt8_t
 
	msq_døöög
;

867 
uöt8_t
 
	mmax_rd_©omic
;

868 
uöt8_t
 
	mmax_de°_rd_©omic
;

869 
uöt8_t
 
	mmö_∫r_timî
;

870 
uöt8_t
 
	mp‹t_num
;

871 
uöt8_t
 
	mtimeout
;

872 
uöt8_t
 
	mªåy_˙t
;

873 
uöt8_t
 
	m∫r_ªåy
;

874 
uöt8_t
 
	mÆt_p‹t_num
;

875 
uöt8_t
 
	mÆt_timeout
;

876 
uöt64_t
 
	md˘_key
;

877 
uöt32_t
 
	mcomp_mask
;

878 
uöt32_t
 
	mÊow_íå›y
;

879 
uöt32_t
 
	møã_limô
;

886 
	eibv_exp_qp_öô_©å_comp_mask
 {

887 
	mIBV_EXP_QP_INIT_ATTR_PD
 = 1 << 0,

888 
	mIBV_EXP_QP_INIT_ATTR_XRCD
 = 1 << 1,

889 
	mIBV_EXP_QP_INIT_ATTR_CREATE_FLAGS
 = 1 << 2,

890 
	mIBV_EXP_QP_INIT_ATTR_INL_RECV
 = 1 << 3,

891 
	mIBV_EXP_QP_INIT_ATTR_QPG
 = 1 << 4,

892 
	mIBV_EXP_QP_INIT_ATTR_ATOMICS_ARG
 = 1 << 5,

893 
	mIBV_EXP_QP_INIT_ATTR_MAX_INL_KLMS
 = 1 << 6,

894 
	mIBV_EXP_QP_INIT_ATTR_RESERVED
 = 1 << 7,

902 
	mIBV_EXP_QP_INIT_ATTR_RES_DOMAIN
 = 1 << 7,

903 
	mIBV_EXP_QP_INIT_ATTR_RX_HASH
 = 1 << 8,

904 
	mIBV_EXP_QP_INIT_ATTR_PORT
 = 1 << 9,

905 
	mIBV_EXP_QP_INIT_ATTR_PEER_DIRECT
 = 1 << 10,

906 
	mIBV_EXP_QP_INIT_ATTR_MAX_TSO_HEADER
 = 1 << 11,

907 
	mIBV_EXP_QP_INIT_ATTR_ASSOCIATED_QPN
 = 1 << 12,

908 
	mIBV_EXP_QP_INIT_ATTR_RESERVED1
 = 1 << 13,

911 
	eibv_exp_qpg_ty≥
 {

912 
	mIBV_EXP_QPG_NONE
 = 0,

913 
	mIBV_EXP_QPG_PARENT
 = (1<<0),

914 
	mIBV_EXP_QPG_CHILD_RX
 = (1<<1),

915 
	mIBV_EXP_QPG_CHILD_TX
 = (1<<2)

918 
	sibv_exp_qpg_öô_©åib
 {

919 
uöt32_t
 
	mtss_chûd_cou¡
;

920 
uöt32_t
 
	mrss_chûd_cou¡
;

923 
	sibv_exp_qpg
 {

924 
uöt32_t
 
	mqpg_ty≥
;

926 
ibv_qp
 *
	mqpg_∑ª¡
;

927 
ibv_exp_qpg_öô_©åib
 
	m∑ª¡_©åib
;

934 
	eibv_exp_rx_hash_fun˘i⁄_Êags
 {

935 
	mIBV_EXP_RX_HASH_FUNC_TOEPLITZ
 = 1 << 0,

936 
	mIBV_EXP_RX_HASH_FUNC_XOR
 = 1 << 1

947 
	eibv_exp_rx_hash_fõlds
 {

948 
	mIBV_EXP_RX_HASH_SRC_IPV4
 = 1 << 0,

949 
	mIBV_EXP_RX_HASH_DST_IPV4
 = 1 << 1,

950 
	mIBV_EXP_RX_HASH_SRC_IPV6
 = 1 << 2,

951 
	mIBV_EXP_RX_HASH_DST_IPV6
 = 1 << 3,

952 
	mIBV_EXP_RX_HASH_SRC_PORT_TCP
 = 1 << 4,

953 
	mIBV_EXP_RX_HASH_DST_PORT_TCP
 = 1 << 5,

954 
	mIBV_EXP_RX_HASH_SRC_PORT_UDP
 = 1 << 6,

955 
	mIBV_EXP_RX_HASH_DST_PORT_UDP
 = 1 << 7

962 
	sibv_exp_rx_hash_c⁄f
 {

964 
uöt8_t
 
	mrx_hash_fun˘i⁄
;

966 
uöt8_t
 
	mrx_hash_key_Àn
;

967 
uöt8_t
 *
	mrx_hash_key
;

969 
uöt64_t
 
	mrx_hash_fõlds_mask
;

970 
ibv_exp_rwq_öd_èbÀ
 *
	mrwq_öd_tbl
;

976 
	eibv_exp_qp_¸óã_Êags
 {

977 
	mIBV_EXP_QP_CREATE_CROSS_CHANNEL
 = (1 << 2),

978 
	mIBV_EXP_QP_CREATE_MANAGED_SEND
 = (1 << 3),

979 
	mIBV_EXP_QP_CREATE_MANAGED_RECV
 = (1 << 4),

980 
	mIBV_EXP_QP_CREATE_IGNORE_SQ_OVERFLOW
 = (1 << 6),

981 
	mIBV_EXP_QP_CREATE_IGNORE_RQ_OVERFLOW
 = (1 << 7),

982 
	mIBV_EXP_QP_CREATE_ATOMIC_BE_REPLY
 = (1 << 8),

983 
	mIBV_EXP_QP_CREATE_UMR
 = (1 << 9),

984 
	mIBV_EXP_QP_CREATE_EC_PARITY_EN
 = (1 << 10),

985 
	mIBV_EXP_QP_CREATE_RX_END_PADDING
 = (1 << 11),

986 
	mIBV_EXP_QP_CREATE_SCATTER_FCS
 = (1 << 12),

987 
	mIBV_EXP_QP_CREATE_INTERNAL_USE
 = (1 << 15),

989 
	mIBV_EXP_QP_CREATE_MASK
 = (0x00001FDC)

992 
	sibv_exp_qp_öô_©å
 {

993 *
	mqp_c⁄ãxt
;

994 
ibv_cq
 *
	m£nd_cq
;

995 
ibv_cq
 *
	mªcv_cq
;

996 
ibv_§q
 *
	m§q
;

997 
ibv_qp_ˇp
 
	mˇp
;

998 
ibv_qp_ty≥
 
	mqp_ty≥
;

999 
	msq_sig_Æl
;

1001 
uöt32_t
 
	mcomp_mask
;

1002 
ibv_pd
 *
	mpd
;

1003 
ibv_xrcd
 *
	mxrcd
;

1004 
uöt32_t
 
	mexp_¸óã_Êags
;

1006 
uöt32_t
 
	mmax_öl_ªcv
;

1007 
ibv_exp_qpg
 
	mqpg
;

1008 
uöt32_t
 
	mmax_©omic_¨g
;

1009 
uöt32_t
 
	mmax_öl_£nd_klms
;

1010 
ibv_exp_ªs_domaö
 *
	mªs_domaö
;

1011 
ibv_exp_rx_hash_c⁄f
 *
	mrx_hash_c⁄f
;

1012 
uöt8_t
 
	mp‹t_num
;

1013 
ibv_exp_≥î_dúe˘_©å
 *
	m≥î_dúe˘_©ås
;

1014 
uöt16_t
 
	mmax_tso_hódî
;

1015 
uöt32_t
 
	massocüãd_q≤
;

1021 
	eibv_exp_d˘_öô_©å_comp_mask
 {

1022 
	mIBV_EXP_DCT_INIT_ATTR_RESERVED
 = 1 << 0

1025 
	eibv_exp_d˘_¸óã_Êags
 {

1027 
	mIBV_EXP_DCT_OOO_RW_DATA_PLACEMENT
 = 1 << 0,

1028 
	mIBV_EXP_DCT_CREATE_FLAGS_MASK
 = 
IBV_EXP_DCT_OOO_RW_DATA_PLACEMENT
,

1031 
	sibv_exp_d˘_öô_©å
 {

1032 
ibv_pd
 *
	mpd
;

1033 
ibv_cq
 *
	mcq
;

1034 
ibv_§q
 *
	m§q
;

1035 
uöt64_t
 
	mdc_key
;

1036 
uöt8_t
 
	mp‹t
;

1037 
uöt32_t
 
	mac˚ss_Êags
;

1038 
uöt8_t
 
	mmö_∫r_timî
;

1039 
uöt8_t
 
	mt˛ass
;

1040 
uöt32_t
 
	mÊow_œbñ
;

1041 
ibv_mtu
 
	mmtu
;

1042 
uöt8_t
 
	mpkey_ödex
;

1043 
uöt8_t
 
	mgid_ödex
;

1044 
uöt8_t
 
	mh›_limô
;

1045 
uöt32_t
 
	mölöe_size
;

1046 
uöt32_t
 
	m¸óã_Êags
;

1047 
uöt32_t
 
	mcomp_mask
;

1051 
	mIBV_EXP_DCT_STATE_ACTIVE
 = 0,

1052 
	mIBV_EXP_DCT_STATE_DRAINING
 = 1,

1053 
	mIBV_EXP_DCT_STATE_DRAINED
 = 2

1059 
	eibv_exp_d˘_©å_comp_mask
 {

1060 
	mIBV_EXP_DCT_ATTR_RESERVED
 = 1 << 0

1063 
	sibv_exp_d˘_©å
 {

1064 
uöt64_t
 
	mdc_key
;

1065 
uöt8_t
 
	mp‹t
;

1066 
uöt32_t
 
	mac˚ss_Êags
;

1067 
uöt8_t
 
	mmö_∫r_timî
;

1068 
uöt8_t
 
	mt˛ass
;

1069 
uöt32_t
 
	mÊow_œbñ
;

1070 
ibv_mtu
 
	mmtu
;

1071 
uöt8_t
 
	mpkey_ödex
;

1072 
uöt8_t
 
	mgid_ödex
;

1073 
uöt8_t
 
	mh›_limô
;

1074 
uöt32_t
 
	mkey_viﬁ©i⁄s
;

1075 
uöt8_t
 
	m°©e
;

1076 
ibv_§q
 *
	m§q
;

1077 
ibv_cq
 *
	mcq
;

1078 
ibv_pd
 *
	mpd
;

1079 
uöt32_t
 
	mcomp_mask
;

1083 
	mIBV_EXP_QUERY_PORT_STATE
 = 1 << 0,

1084 
	mIBV_EXP_QUERY_PORT_MAX_MTU
 = 1 << 1,

1085 
	mIBV_EXP_QUERY_PORT_ACTIVE_MTU
 = 1 << 2,

1086 
	mIBV_EXP_QUERY_PORT_GID_TBL_LEN
 = 1 << 3,

1087 
	mIBV_EXP_QUERY_PORT_CAP_FLAGS
 = 1 << 4,

1088 
	mIBV_EXP_QUERY_PORT_MAX_MSG_SZ
 = 1 << 5,

1089 
	mIBV_EXP_QUERY_PORT_BAD_PKEY_CNTR
 = 1 << 6,

1090 
	mIBV_EXP_QUERY_PORT_QKEY_VIOL_CNTR
 = 1 << 7,

1091 
	mIBV_EXP_QUERY_PORT_PKEY_TBL_LEN
 = 1 << 8,

1092 
	mIBV_EXP_QUERY_PORT_LID
 = 1 << 9,

1093 
	mIBV_EXP_QUERY_PORT_SM_LID
 = 1 << 10,

1094 
	mIBV_EXP_QUERY_PORT_LMC
 = 1 << 11,

1095 
	mIBV_EXP_QUERY_PORT_MAX_VL_NUM
 = 1 << 12,

1096 
	mIBV_EXP_QUERY_PORT_SM_SL
 = 1 << 13,

1097 
	mIBV_EXP_QUERY_PORT_SUBNET_TIMEOUT
 = 1 << 14,

1098 
	mIBV_EXP_QUERY_PORT_INIT_TYPE_REPLY
 = 1 << 15,

1099 
	mIBV_EXP_QUERY_PORT_ACTIVE_WIDTH
 = 1 << 16,

1100 
	mIBV_EXP_QUERY_PORT_ACTIVE_SPEED
 = 1 << 17,

1101 
	mIBV_EXP_QUERY_PORT_PHYS_STATE
 = 1 << 18,

1102 
	mIBV_EXP_QUERY_PORT_LINK_LAYER
 = 1 << 19,

1104 
	mIBV_EXP_QUERY_PORT_STD_MASK
 = (1 << 20) - 1,

1106 
	mIBV_EXP_QUERY_PORT_MASK
 = 
IBV_EXP_QUERY_PORT_STD_MASK
,

1113 
	eibv_exp_quîy_p‹t_©å_comp_mask
 {

1114 
	mIBV_EXP_QUERY_PORT_ATTR_MASK1
 = 1 << 0,

1115 
	mIBV_EXP_QUERY_PORT_ATTR_RESERVED
 = 1 << 1,

1117 
	mIBV_EXP_QUERY_PORT_ATTR_MASKS
 = 
IBV_EXP_QUERY_PORT_ATTR_RESERVED
 - 1

1120 
	sibv_exp_p‹t_©å
 {

1123 
ibv_p‹t_°©e
 
	m°©e
;

1124 
ibv_mtu
 
	mmax_mtu
;

1125 
ibv_mtu
 
	ma˘ive_mtu
;

1126 
	mgid_tbl_Àn
;

1127 
uöt32_t
 
	mp‹t_ˇp_Êags
;

1128 
uöt32_t
 
	mmax_msg_sz
;

1129 
uöt32_t
 
	mbad_pkey_˙å
;

1130 
uöt32_t
 
	mqkey_viﬁ_˙å
;

1131 
uöt16_t
 
	mpkey_tbl_Àn
;

1132 
uöt16_t
 
	mlid
;

1133 
uöt16_t
 
	msm_lid
;

1134 
uöt8_t
 
	mlmc
;

1135 
uöt8_t
 
	mmax_vl_num
;

1136 
uöt8_t
 
	msm_¶
;

1137 
uöt8_t
 
	msub√t_timeout
;

1138 
uöt8_t
 
	möô_ty≥_ª∂y
;

1139 
uöt8_t
 
	ma˘ive_width
;

1140 
uöt8_t
 
	ma˘ive_•ìd
;

1141 
uöt8_t
 
	mphys_°©e
;

1142 
uöt8_t
 
	mlök_œyî
;

1143 
uöt8_t
 
	mª£rved
;

1145 
ibv_p‹t_©å
 
	mp‹t_©å
;

1147 
uöt32_t
 
	mcomp_mask
;

1148 
uöt32_t
 
	mmask1
;

1151 
	eibv_exp_cq_©å_mask
 {

1152 
	mIBV_EXP_CQ_MODERATION
 = 1 << 0,

1153 
	mIBV_EXP_CQ_CAP_FLAGS
 = 1 << 1

1156 
	eibv_exp_cq_ˇp_Êags
 {

1157 
	mIBV_EXP_CQ_IGNORE_OVERRUN
 = (1 << 0),

1159 
	mIBV_EXP_CQ_CAP_MASK
 = (0x00000001)

1166 
	eibv_exp_cq_©å_comp_mask
 {

1167 
	mIBV_EXP_CQ_ATTR_MODERATION
 = (1 << 0),

1168 
	mIBV_EXP_CQ_ATTR_CQ_CAP_FLAGS
 = (1 << 1),

1170 
	mIBV_EXP_CQ_ATTR_RESERVED
 = (1 << 2)

1173 
	sibv_exp_cq_©å
 {

1174 
uöt32_t
 
	mcomp_mask
;

1176 
uöt16_t
 
	mcq_cou¡
;

1177 
uöt16_t
 
	mcq_≥riod
;

1178 } 
	mmodî©i⁄
;

1179 
uöt32_t
 
	mcq_ˇp_Êags
;

1185 
	eibv_exp_ªg_sh¨ed_mr_comp_mask
 {

1186 
	mIBV_EXP_REG_SHARED_MR_RESERVED
 = (1 << 0)

1189 
	sibv_exp_ªg_sh¨ed_mr_ö
 {

1190 
uöt32_t
 
	mmr_h™dÀ
;

1191 
ibv_pd
 *
	mpd
;

1192 *
	maddr
;

1193 
uöt64_t
 
	mexp_ac˚ss
;

1194 
uöt32_t
 
	mcomp_mask
;

1197 
	eibv_exp_Êow_Êags
 {

1198 
	mIBV_EXP_FLOW_ATTR_FLAGS_ALLOW_LOOP_BACK
 = 1,

1201 
	eibv_exp_Êow_©å_ty≥
 {

1203 
	mIBV_EXP_FLOW_ATTR_NORMAL
 = 0x0,

1207 
	mIBV_EXP_FLOW_ATTR_ALL_DEFAULT
 = 0x1,

1211 
	mIBV_EXP_FLOW_ATTR_MC_DEFAULT
 = 0x2,

1213 
	mIBV_EXP_FLOW_ATTR_SNIFFER
 = 0x3,

1216 
	eibv_exp_Êow_•ec_ty≥
 {

1217 
	mIBV_EXP_FLOW_SPEC_ETH
 = 0x20,

1218 
	mIBV_EXP_FLOW_SPEC_IB
 = 0x21,

1219 
	mIBV_EXP_FLOW_SPEC_IPV4
 = 0x30,

1220 
	mIBV_EXP_FLOW_SPEC_IPV6
 = 0x31,

1221 
	mIBV_EXP_FLOW_SPEC_IPV4_EXT
 = 0x32,

1222 
	mIBV_EXP_FLOW_SPEC_IPV6_EXT
 = 0x33,

1223 
	mIBV_EXP_FLOW_SPEC_TCP
 = 0x40,

1224 
	mIBV_EXP_FLOW_SPEC_UDP
 = 0x41,

1225 
	mIBV_EXP_FLOW_SPEC_VXLAN_TUNNEL
 = 0x50,

1226 
	mIBV_EXP_FLOW_SPEC_INNER
 = 0x100,

1227 
	mIBV_EXP_FLOW_SPEC_ACTION_TAG
 = 0x1000,

1228 
	mIBV_EXP_FLOW_SPEC_ACTION_DROP
 = 0x1001,

1231 
	sibv_exp_Êow_ëh_fûãr
 {

1232 
uöt8_t
 
	md°_mac
[6];

1233 
uöt8_t
 
	m§c_mac
[6];

1234 
uöt16_t
 
	mëhî_ty≥
;

1238 
uöt16_t
 
	mvœn_èg
;

1241 
	sibv_exp_Êow_•ec_ëh
 {

1242 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1243 
uöt16_t
 
	msize
;

1244 
ibv_exp_Êow_ëh_fûãr
 
	mvÆ
;

1245 
ibv_exp_Êow_ëh_fûãr
 
	mmask
;

1248 
	sibv_exp_Êow_ib_fûãr
 {

1249 
uöt32_t
 
	mq≤
;

1250 
uöt8_t
 
	md°_gid
[16];

1253 
	sibv_exp_Êow_•ec_ib
 {

1254 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1255 
uöt16_t
 
	msize
;

1256 
ibv_exp_Êow_ib_fûãr
 
	mvÆ
;

1257 
ibv_exp_Êow_ib_fûãr
 
	mmask
;

1260 
	sibv_exp_Êow_ùv4_fûãr
 {

1261 
uöt32_t
 
	m§c_ù
;

1262 
uöt32_t
 
	md°_ù
;

1265 
	sibv_exp_Êow_•ec_ùv4
 {

1266 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1267 
uöt16_t
 
	msize
;

1268 
ibv_exp_Êow_ùv4_fûãr
 
	mvÆ
;

1269 
ibv_exp_Êow_ùv4_fûãr
 
	mmask
;

1272 
	sibv_exp_Êow_ùv6_fûãr
 {

1273 
uöt8_t
 
	m§c_ù
[16];

1274 
uöt8_t
 
	md°_ù
[16];

1277 
	sibv_exp_Êow_•ec_ùv6
 {

1278 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1279 
uöt16_t
 
	msize
;

1280 
ibv_exp_Êow_ùv6_fûãr
 
	mvÆ
;

1281 
ibv_exp_Êow_ùv6_fûãr
 
	mmask
;

1284 
	sibv_exp_Êow_•ec_a˘i⁄_èg
 {

1285 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1286 
uöt16_t
 
	msize
;

1287 
uöt32_t
 
	mèg_id
;

1290 
	sibv_exp_Êow_•ec_a˘i⁄_dr›
 {

1291 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1292 
uöt16_t
 
	msize
;

1295 
	sibv_exp_Êow_ùv6_ext_fûãr
 {

1296 
uöt8_t
 
	m§c_ù
[16];

1297 
uöt8_t
 
	md°_ù
[16];

1298 
uöt32_t
 
	mÊow_œbñ
;

1299 
uöt8_t
 
	m√xt_hdr
;

1300 
uöt8_t
 
	måaffic_˛ass
;

1301 
uöt8_t
 
	mh›_limô
;

1304 
	sibv_exp_Êow_•ec_ùv6_ext
 {

1305 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1306 
uöt16_t
 
	msize
;

1307 
ibv_exp_Êow_ùv6_ext_fûãr
 
	mvÆ
;

1308 
ibv_exp_Êow_ùv6_ext_fûãr
 
	mmask
;

1311 
	sibv_exp_Êow_ùv4_ext_fûãr
 {

1312 
uöt32_t
 
	m§c_ù
;

1313 
uöt32_t
 
	md°_ù
;

1314 
uöt8_t
 
	m¥Ÿo
;

1315 
uöt8_t
 
	mtos
;

1316 
uöt8_t
 
	mâl
;

1317 
uöt8_t
 
	mÊags
;

1320 
	sibv_exp_Êow_•ec_ùv4_ext
 {

1321 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1322 
uöt16_t
 
	msize
;

1323 
ibv_exp_Êow_ùv4_ext_fûãr
 
	mvÆ
;

1324 
ibv_exp_Êow_ùv4_ext_fûãr
 
	mmask
;

1327 
	sibv_exp_Êow_t˝_udp_fûãr
 {

1328 
uöt16_t
 
	md°_p‹t
;

1329 
uöt16_t
 
	m§c_p‹t
;

1332 
	sibv_exp_Êow_•ec_t˝_udp
 {

1333 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1334 
uöt16_t
 
	msize
;

1335 
ibv_exp_Êow_t˝_udp_fûãr
 
	mvÆ
;

1336 
ibv_exp_Êow_t˝_udp_fûãr
 
	mmask
;

1339 
	sibv_exp_Êow_tu¬ñ_fûãr
 {

1340 
uöt32_t
 
	mtu¬ñ_id
;

1343 
	sibv_exp_Êow_•ec_tu¬ñ
 {

1344 
ibv_exp_Êow_•ec_ty≥
 
	mty≥
;

1345 
uöt16_t
 
	msize
;

1346 
ibv_exp_Êow_tu¬ñ_fûãr
 
	mvÆ
;

1347 
ibv_exp_Êow_tu¬ñ_fûãr
 
	mmask
;

1350 
	sibv_exp_Êow_•ec
 {

1353 
uöt32_t
 
	mty≥
;

1354 
uöt16_t
 
	msize
;

1355 } 
	mhdr
;

1356 
ibv_exp_Êow_•ec_ib
 
	mib
;

1357 
ibv_exp_Êow_•ec_ëh
 
	mëh
;

1358 
ibv_exp_Êow_•ec_ùv4
 
	mùv4
;

1359 
ibv_exp_Êow_•ec_ùv4_ext
 
	mùv4_ext
;

1360 
ibv_exp_Êow_•ec_t˝_udp
 
	mt˝_udp
;

1361 
ibv_exp_Êow_•ec_ùv6
 
	mùv6
;

1362 
ibv_exp_Êow_•ec_ùv6_ext
 
	mùv6_ext
;

1363 
ibv_exp_Êow_•ec_tu¬ñ
 
	mtu¬ñ
;

1364 
ibv_exp_Êow_•ec_a˘i⁄_èg
 
	mÊow_èg
;

1365 
ibv_exp_Êow_•ec_a˘i⁄_dr›
 
	mdr›
;

1369 
	sibv_exp_Êow_©å
 {

1370 
ibv_exp_Êow_©å_ty≥
 
	mty≥
;

1371 
uöt16_t
 
	msize
;

1372 
uöt16_t
 
	m¥i‹ôy
;

1373 
uöt8_t
 
	mnum_of_•ecs
;

1374 
uöt8_t
 
	mp‹t
;

1375 
uöt32_t
 
	mÊags
;

1380 
uöt64_t
 
	mª£rved
;

1383 
	sibv_exp_Êow
 {

1384 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

1385 
uöt32_t
 
	mh™dÀ
;

1388 
	sibv_exp_d˘
 {

1389 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

1390 
uöt32_t
 
	mh™dÀ
;

1391 
uöt32_t
 
	md˘_num
;

1392 
ibv_pd
 *
	mpd
;

1393 
ibv_§q
 *
	m§q
;

1394 
ibv_cq
 *
	mcq
;

1395 
±hªad_muãx_t
 
	mmuãx
;

1396 
±hªad_c⁄d_t
 
	mc⁄d
;

1397 
uöt32_t
 
	mevíts_com∂ëed
;

1400 
	eibv_exp_wc_›code
 {

1401 
	mIBV_EXP_WC_SEND
,

1402 
	mIBV_EXP_WC_RDMA_WRITE
,

1403 
	mIBV_EXP_WC_RDMA_READ
,

1404 
	mIBV_EXP_WC_COMP_SWAP
,

1405 
	mIBV_EXP_WC_FETCH_ADD
,

1406 
	mIBV_EXP_WC_BIND_MW
,

1407 
	mIBV_EXP_WC_LOCAL_INV
,

1408 
	mIBV_EXP_WC_MASKED_COMP_SWAP
 = 9,

1409 
	mIBV_EXP_WC_MASKED_FETCH_ADD
 = 10,

1410 
	mIBV_EXP_WC_TSO
,

1411 
	mIBV_EXP_WC_UMR
 = 0x100,

1416 
	mIBV_EXP_WC_RECV
 = 1 << 7,

1417 
	mIBV_EXP_WC_RECV_RDMA_WITH_IMM
,

1419 
	mIBV_EXP_WC_TM_ADD
 = 
IBV_EXP_WC_RECV
 + 
IBV_EXP_START_ENUM
,

1420 
	mIBV_EXP_WC_TM_DEL
,

1421 
	mIBV_EXP_WC_TM_SYNC
,

1422 
	mIBV_EXP_WC_TM_RECV
,

1423 
	mIBV_EXP_WC_TM_NO_TAG


1426 
	eibv_exp_wc_Êags
 {

1427 
	mIBV_EXP_WC_GRH
 = 
IBV_WC_GRH
,

1428 
	mIBV_EXP_WC_WITH_IMM
 = 
IBV_WC_WITH_IMM
,

1429 
	mIBV_EXP_WC_WITH_INV
 = 
IBV_WC_WITH_INV
,

1431 
	mIBV_EXP_WC_WITH_SL
 = 
IBV_EXP_START_FLAG
 << 4,

1432 
	mIBV_EXP_WC_WITH_SLID
 = 
IBV_EXP_START_FLAG
 << 5,

1433 
	mIBV_EXP_WC_WITH_TIMESTAMP
 = 
IBV_EXP_START_FLAG
 << 6,

1434 
	mIBV_EXP_WC_QP
 = 
IBV_EXP_START_FLAG
 << 7,

1435 
	mIBV_EXP_WC_SRQ
 = 
IBV_EXP_START_FLAG
 << 8,

1436 
	mIBV_EXP_WC_DCT
 = 
IBV_EXP_START_FLAG
 << 9,

1437 
	mIBV_EXP_WC_RX_IP_CSUM_OK
 = 
IBV_EXP_START_FLAG
 << 10,

1438 
	mIBV_EXP_WC_RX_TCP_UDP_CSUM_OK
 = 
IBV_EXP_START_FLAG
 << 11,

1439 
	mIBV_EXP_WC_RX_IPV4_PACKET
 = 
IBV_EXP_START_FLAG
 << 12,

1440 
	mIBV_EXP_WC_RX_IPV6_PACKET
 = 
IBV_EXP_START_FLAG
 << 13,

1441 
	mIBV_EXP_WC_RX_TUNNEL_PACKET
 = 
IBV_EXP_START_FLAG
 << 14,

1442 
	mIBV_EXP_WC_RX_OUTER_IP_CSUM_OK
 = 
IBV_EXP_START_FLAG
 << 15,

1443 
	mIBV_EXP_WC_RX_OUTER_TCP_UDP_CSUM_OK
 = 
IBV_EXP_START_FLAG
 << 16,

1444 
	mIBV_EXP_WC_RX_OUTER_IPV4_PACKET
 = 
IBV_EXP_START_FLAG
 << 17,

1445 
	mIBV_EXP_WC_RX_OUTER_IPV6_PACKET
 = 
IBV_EXP_START_FLAG
 << 18,

1446 
	mIBV_EXP_WC_TM_SYNC_REQ
 = 
IBV_EXP_START_FLAG
 << 19,

1447 
	mIBV_EXP_WC_TM_DEL_FAILED
 = 
IBV_EXP_START_FLAG
 << 20,

1448 
	mIBV_EXP_WC_TM_MATCH
 = 
IBV_EXP_START_FLAG
 << 21,

1449 
	mIBV_EXP_WC_TM_DATA_VALID
 = 
IBV_EXP_START_FLAG
 << 22,

1450 
	mIBV_EXP_WC_TM_RNDV_INCOMPLETE
 = 
IBV_EXP_START_FLAG
 << 23

1453 
	sibv_exp_wc
 {

1454 
uöt64_t
 
	mwr_id
;

1455 
ibv_wc_°©us
 
	m°©us
;

1456 
ibv_exp_wc_›code
 
	mexp_›code
;

1457 
uöt32_t
 
	mvíd‹_îr
;

1458 
uöt32_t
 
	mbyã_Àn
;

1459 
uöt32_t
 
	mimm_d©a
;

1460 
uöt32_t
 
	mqp_num
;

1461 
uöt32_t
 
	m§c_qp
;

1462 
	mª£rved
;

1463 
uöt16_t
 
	mpkey_ödex
;

1464 
uöt16_t
 
	m¶id
;

1465 
uöt8_t
 
	m¶
;

1466 
uöt8_t
 
	mdlid_∑th_bôs
;

1467 
uöt64_t
 
	mtime°amp
;

1468 
ibv_qp
 *
	mqp
;

1469 
ibv_§q
 *
	m§q
;

1470 
ibv_exp_d˘
 *
	md˘
;

1471 
uöt64_t
 
	mexp_wc_Êags
;

1474 
uöt64_t
 
	mèg
;

1475 
uöt32_t
 
	m¥iv
;

1476 } 
	mtm_öfo
;

1482 
	eibv_exp_¥e„tch_©å_comp_mask
 {

1483 
	mIBV_EXP_PREFETCH_MR_RESERVED
 = (1 << 0),

1489 
	eibv_exp_¥e„tch_©å_Êags
 {

1491 
	mIBV_EXP_PREFETCH_WRITE_ACCESS
 = (1 << 0),

1494 
	sibv_exp_¥e„tch_©å
 {

1496 
uöt32_t
 
	mÊags
;

1498 *
	maddr
;

1500 
size_t
 
	mÀngth
;

1501 
uöt32_t
 
	mcomp_mask
;

1507 
	eibv_exp_ªg_mr_ö_comp_mask
 {

1509 
	mIBV_EXP_REG_MR_CREATE_FLAGS
 = (1 << 0),

1510 
	mIBV_EXP_REG_MR_RESERVED
 = (1 << 1)

1513 
	eibv_exp_ªg_mr_¸óã_Êags
 {

1514 
	mIBV_EXP_REG_MR_CREATE_CONTIG
 = (1 << 0)

1517 
	sibv_exp_ªg_mr_ö
 {

1518 
ibv_pd
 *
	mpd
;

1519 *
	maddr
;

1520 
size_t
 
	mÀngth
;

1521 
uöt64_t
 
	mexp_ac˚ss
;

1522 
uöt32_t
 
	mcomp_mask
;

1523 
uöt32_t
 
	m¸óã_Êags
;

1527 
	eibv_exp_èsk_ty≥
 {

1528 
	mIBV_EXP_TASK_SEND
 = 0,

1529 
	mIBV_EXP_TASK_RECV
 = 1

1535 
	eibv_exp_èsk_comp_mask
 {

1536 
	mIBV_EXP_TASK_RESERVED
 = (1 << 0)

1539 
	sibv_exp_èsk
 {

1540 
ibv_exp_èsk_ty≥
 
	mèsk_ty≥
;

1542 
ibv_qp
 *
	mqp
;

1544 
ibv_exp_£nd_wr
 *
	m£nd_wr
;

1545 
ibv_ªcv_wr
 *
	mªcv_wr
;

1547 } 
	môem
;

1548 
ibv_exp_èsk
 *
	m√xt
;

1549 
uöt32_t
 
	mcomp_mask
;

1555 
	eibv_exp_¨m_©å_comp_mask
 {

1556 
	mIBV_EXP_ARM_ATTR_RESERVED
 = (1 << 0)

1558 
	sibv_exp_¨m_©å
 {

1559 
uöt32_t
 
	mcomp_mask
;

1562 
	eibv_exp_mr_¸óã_Êags
 {

1563 
	mIBV_EXP_MR_SIGNATURE_EN
 = (1 << 0),

1564 
	mIBV_EXP_MR_INDIRECT_KLMS
 = (1 << 1)

1567 
	sibv_exp_mr_öô_©å
 {

1568 
uöt32_t
 
	mmax_klm_li°_size
;

1569 
uöt32_t
 
	m¸óã_Êags
;

1570 
uöt64_t
 
	mexp_ac˚ss_Êags
;

1576 
	eibv_exp_¸óã_mr_ö_comp_mask
 {

1577 
	mIBV_EXP_CREATE_MR_IN_RESERVED
 = (1 << 0)

1580 
	sibv_exp_¸óã_mr_ö
 {

1581 
ibv_pd
 *
	mpd
;

1582 
ibv_exp_mr_öô_©å
 
	m©å
;

1583 
uöt32_t
 
	mcomp_mask
;

1589 
	eibv_exp_mkey_©å_comp_mask
 {

1590 
	mIBV_EXP_MKEY_ATTR_RESERVED
 = (1 << 0)

1593 
	sibv_exp_mkey_©å
 {

1594 
uöt32_t
 
	mmax_klm_li°_size
;

1595 
uöt32_t
 
	mcomp_mask
;

1598 
	sibv_exp_mkey_li°_c⁄èöî
 {

1599 
uöt32_t
 
	mmax_klm_li°_size
;

1600 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

1603 
	eibv_exp_mkey_li°_ty≥
 {

1604 
	mIBV_EXP_MKEY_LIST_TYPE_INDIRECT_MR


1610 
	eibv_exp_Æloc_mkey_li°_comp_mask
 {

1611 
	mIBV_EXP_MKEY_LIST_CONTAINER_RESERVED
 = (1 << 0)

1614 
	sibv_exp_mkey_li°_c⁄èöî_©å
 {

1615 
ibv_pd
 *
	mpd
;

1616 
uöt32_t
 
	mmkey_li°_ty≥
;

1617 
uöt32_t
 
	mmax_klm_li°_size
;

1618 
uöt32_t
 
	mcomp_mask
;

1624 
	eibv_exp_dîeg_mr_comp_mask
 {

1625 
	mIBV_EXP_DEREG_MR_RESERVED
 = (1 << 0)

1628 
	sibv_exp_dîeg_out
 {

1629 
	m√ed_dof‹k
;

1630 
uöt32_t
 
	mcomp_mask
;

1633 
	svîbs_ív_ôem
 {

1634 *
	m«me
;

1635 *
	mvÆue
;

1636 
vîbs_ív_ôem
 *
	m√xt
;

1639 
	svîbs_ívú⁄mít
 {

1640 
vîbs_ív_ôem
 *
	mhód
;

1641 
±hªad_muãx_t
 
	mmtx
;

1646 
	eibv_exp_wq_ty≥
 {

1647 
	mIBV_EXP_WQT_RQ
,

1648 
	mIBV_EXP_WQT_SRQ


1651 
	eibv_exp_wq_°©e
 {

1652 
	mIBV_EXP_WQS_RESET
,

1653 
	mIBV_EXP_WQS_RDY
,

1654 
	mIBV_EXP_WQS_ERR
,

1655 
	mIBV_EXP_WQS_UNKNOWN


1659 
	eibv_exp_vœn_ofÊﬂds
 {

1661 
	mIBV_EXP_RECEIVE_WQ_CVLAN_STRIP
 = (1 << 0),

1663 
	mIBV_EXP_RECEIVE_WQ_CVLAN_INSERTION
 = (1 << 1),

1664 
	mIBV_EXP_RECEIVE_WQ_VLAN_OFFLOADS_RESERVED
 = (1 << 2),

1679 
	sibv_exp_wq
 {

1680 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

1681 *
	mwq_c⁄ãxt
;

1682 
uöt32_t
 
	mh™dÀ
;

1684 
ibv_pd
 *
	mpd
;

1686 
ibv_cq
 *
	mcq
;

1688 
ibv_§q
 *
	m§q
;

1689 
uöt32_t
 
	mwq_num
;

1690 
ibv_exp_wq_°©e
 
	m°©e
;

1691 
ibv_exp_wq_ty≥
 
	mwq_ty≥
;

1692 
uöt32_t
 
	mcomp_mask
;

1695 
	eibv_exp_wq_öô_©å_mask
 {

1696 
	mIBV_EXP_CREATE_WQ_RES_DOMAIN
 = (1 << 0),

1697 
	mIBV_EXP_CREATE_WQ_MP_RQ
 = (1 << 1),

1698 
	mIBV_EXP_CREATE_WQ_VLAN_OFFLOADS
 = (1 << 2),

1699 
	mIBV_EXP_CREATE_WQ_FLAGS
 = (1 << 3),

1700 
	mIBV_EXP_CREATE_WQ_RESERVED
 = (1 << 4)

1703 
	sibv_exp_wq_mp_rq
 {

1704 
ibv_exp_mp_rq_shi·s
 
	mu£_shi·
;

1705 
uöt8_t
 
	msögÀ_wqe_log_num_of_°rides
;

1706 
uöt8_t
 
	msögÀ_°ride_log_num_of_byãs
;

1709 
	eibv_exp_wq_öô_©å_Êags
 {

1710 
	mIBV_EXP_CREATE_WQ_FLAG_RX_END_PADDING
 = (1ULL << 0),

1711 
	mIBV_EXP_CREATE_WQ_FLAG_SCATTER_FCS
 = (1ULL << 1),

1712 
	mIBV_EXP_CREATE_WQ_FLAG_DELAY_DROP
 = (1ULL << 2),

1713 
	mIBV_EXP_CREATE_WQ_FLAG_RESERVED
 = (1ULL << 3)

1716 
	sibv_exp_wq_öô_©å
 {

1718 *
	mwq_c⁄ãxt
;

1719 
ibv_exp_wq_ty≥
 
	mwq_ty≥
;

1721 
uöt32_t
 
	mmax_ªcv_wr
;

1723 
uöt32_t
 
	mmax_ªcv_sge
;

1725 
ibv_pd
 *
	mpd
;

1727 
ibv_cq
 *
	mcq
;

1729 
ibv_§q
 *
	m§q
;

1731 
uöt32_t
 
	mcomp_mask
;

1732 
ibv_exp_ªs_domaö
 *
	mªs_domaö
;

1733 
ibv_exp_wq_mp_rq
 
	mmp_rq
;

1734 
uöt16_t
 
	mvœn_ofÊﬂds
;

1735 
uöt64_t
 
	mÊags
;

1738 
	eibv_exp_wq_©å_mask
 {

1739 
	mIBV_EXP_WQ_ATTR_STATE
 = 1 << 0,

1740 
	mIBV_EXP_WQ_ATTR_CURR_STATE
 = 1 << 1,

1741 
	mIBV_EXP_WQ_ATTR_VLAN_OFFLOADS
 = 1 << 2,

1742 
	mIBV_EXP_WQ_ATTR_RESERVED
 = 1 << 3

1745 
	sibv_exp_wq_©å
 {

1747 
uöt32_t
 
	m©å_mask
;

1749 
ibv_exp_wq_°©e
 
	mwq_°©e
;

1751 
ibv_exp_wq_°©e
 
	mcuº_wq_°©e
;

1752 
uöt16_t
 
	mvœn_ofÊﬂds
;

1762 
	sibv_exp_rwq_öd_èbÀ
 {

1763 
ibv_c⁄ãxt
 *
	mc⁄ãxt
;

1764 
ibv_pd
 *
	mpd
;

1765 
	möd_tbl_h™dÀ
;

1766 
	möd_tbl_num
;

1767 
uöt32_t
 
	mcomp_mask
;

1770 
	eibv_exp_öd_èbÀ_öô_©å_mask
 {

1771 
	mIBV_EXP_CREATE_IND_TABLE_RESERVED
 = (1 << 0)

1777 
	sibv_exp_rwq_öd_èbÀ_öô_©å
 {

1778 
ibv_pd
 *
	mpd
;

1780 
uöt32_t
 
	mlog_öd_tbl_size
;

1782 
ibv_exp_wq
 **
	möd_tbl
;

1783 
uöt32_t
 
	mcomp_mask
;

1787 
	eibv_exp_thªad_modñ
 {

1788 
	mIBV_EXP_THREAD_SAFE
,

1789 
	mIBV_EXP_THREAD_UNSAFE
,

1790 
	mIBV_EXP_THREAD_SINGLE


1793 
	eibv_exp_msg_modñ
 {

1794 
	mIBV_EXP_MSG_DEFAULT
,

1795 
	mIBV_EXP_MSG_LOW_LATENCY
,

1796 
	mIBV_EXP_MSG_HIGH_BW
,

1797 
	mIBV_EXP_MSG_FORCE_LOW_LATENCY
,

1803 
	eibv_exp_ªs_domaö_öô_©å_comp_mask
 {

1804 
	mIBV_EXP_RES_DOMAIN_THREAD_MODEL
 = (1 << 0),

1805 
	mIBV_EXP_RES_DOMAIN_MSG_MODEL
 = (1 << 1),

1806 
	mIBV_EXP_RES_DOMAIN_RESERVED
 = (1 << 2),

1809 
	sibv_exp_ªs_domaö_öô_©å
 {

1810 
uöt32_t
 
	mcomp_mask
;

1811 
ibv_exp_thªad_modñ
 
	mthªad_modñ
;

1812 
ibv_exp_msg_modñ
 
	mmsg_modñ
;

1815 
	eibv_exp_de°roy_ªs_domaö_comp_mask
 {

1816 
	mIBV_EXP_DESTROY_RES_DOMAIN_RESERVED
 = (1 << 0),

1819 
	sibv_exp_de°roy_ªs_domaö_©å
 {

1820 
uöt32_t
 
	mcomp_mask
;

1827 
	eibv_exp_quîy_ötf_Êags
 {

1829 
	mIBV_EXP_QUERY_INTF_FLAG_ENABLE_CHECKS
 = (1 << 0),

1832 
	eibv_exp_ötf_Ámûy
 {

1833 
	mIBV_EXP_INTF_QP_BURST
,

1834 
	mIBV_EXP_INTF_CQ
,

1835 
	mIBV_EXP_INTF_WQ
,

1836 
	mIBV_EXP_INTF_RESERVED
,

1839 
	eibv_exp_ex≥rimíèl_ötf_Ámûy
 {

1840 
	mIBV_EXP_EXPERIMENTAL_INTF_RESERVED
,

1843 
	eibv_exp_ötf_sc›e
 {

1844 
	mIBV_EXP_INTF_GLOBAL
,

1847 
	mIBV_EXP_INTF_EXPERIMENTAL
,

1852 
	mIBV_EXP_INTF_VENDOR
,

1855 
	mIBV_EXP_INTF_VENDOR_EXPERIMENTAL
,

1862 
	eibv_exp_quîy_ötf_°©us
 {

1863 
	mIBV_EXP_INTF_STAT_OK
,

1864 
	mIBV_EXP_INTF_STAT_VENDOR_NOT_SUPPORTED
,

1865 
	mIBV_EXP_INTF_STAT_INTF_NOT_SUPPORTED
,

1866 
	mIBV_EXP_INTF_STAT_VERSION_NOT_SUPPORTED
,

1867 
	mIBV_EXP_INTF_STAT_INVAL_PARARM
,

1868 
	mIBV_EXP_INTF_STAT_INVAL_OBJ_STATE
,

1869 
	mIBV_EXP_INTF_STAT_INVAL_OBJ
,

1870 
	mIBV_EXP_INTF_STAT_FLAGS_NOT_SUPPORTED
,

1871 
	mIBV_EXP_INTF_STAT_FAMILY_FLAGS_NOT_SUPPORTED
,

1874 
	eibv_exp_quîy_ötf_comp_mask
 {

1875 
	mIBV_EXP_QUERY_INTF_RESERVED
 = (1 << 0),

1878 
	sibv_exp_quîy_ötf_∑øms
 {

1879 
uöt32_t
 
	mÊags
;

1880 
ibv_exp_ötf_sc›e
 
	mötf_sc›e
;

1881 
uöt64_t
 
	mvíd‹_guid
;

1882 
uöt32_t
 
	mötf
;

1883 
uöt32_t
 
	mötf_vîsi⁄
;

1884 *
	mobj
;

1885 *
	mÁmûy_∑øms
;

1886 
uöt32_t
 
	mÁmûy_Êags
;

1887 
uöt32_t
 
	mcomp_mask
;

1890 
	eibv_exp_ªÀa£_ötf_comp_mask
 {

1891 
	mIBV_EXP_RELEASE_INTF_RESERVED
 = (1 << 0),

1894 
	sibv_exp_ªÀa£_ötf_∑øms
 {

1895 
uöt32_t
 
	mcomp_mask
;

1905 
	eibv_exp_qp_bur°_Ámûy_¸óã_Êags
 {

1907 
	mIBV_EXP_QP_BURST_CREATE_DISABLE_ETH_LOOPBACK
 = (1 << 0),

1909 
	mIBV_EXP_QP_BURST_CREATE_ENABLE_MULTI_PACKET_SEND_WR
 = (1 << 1),

1913 
	eibv_exp_qp_bur°_Ámûy_Êags
 {

1914 
	mIBV_EXP_QP_BURST_SIGNALED
 = 1 << 0,

1915 
	mIBV_EXP_QP_BURST_SOLICITED
 = 1 << 1,

1916 
	mIBV_EXP_QP_BURST_IP_CSUM
 = 1 << 2,

1917 
	mIBV_EXP_QP_BURST_TUNNEL
 = 1 << 3,

1918 
	mIBV_EXP_QP_BURST_FENCE
 = 1 << 4,

1922 
	sibv_exp_qp_bur°_Ámûy
 {

1923 (*
	m£nd_≥ndög
)(
ibv_qp
 *
	mqp
, 
uöt64_t
 
	maddr
, 
uöt32_t
 
	mÀngth
, uöt32_à
	mlkey
, uöt32_à
	mÊags
);

1924 (*
	m£nd_≥ndög_ölöe
)(
ibv_qp
 *
	mqp
, *
	maddr
, 
uöt32_t
 
	mÀngth
, uöt32_à
	mÊags
);

1925 (*
	m£nd_≥ndög_sg_li°
)(
ibv_qp
 *
	mqp
, 
ibv_sge
 *
	msg_li°
, 
uöt32_t
 
	mnum
, uöt32_à
	mÊags
);

1926 (*
	m£nd_Êush
)(
ibv_qp
 *
	mqp
);

1927 (*
	m£nd_bur°
)(
ibv_qp
 *
	mqp
, 
ibv_sge
 *
	mmsg_li°
, 
uöt32_t
 
	mnum
, uöt32_à
	mÊags
);

1928 (*
	mªcv_bur°
)(
ibv_qp
 *
	mqp
, 
ibv_sge
 *
	mmsg_li°
, 
uöt32_t
 
	mnum
);

1931 
	sibv_exp_qp_bur°_Ámûy_v1
 {

1940 (*
	m£nd_≥ndög
)(
ibv_qp
 *
	mqp
, 
uöt64_t
 
	maddr
, 
uöt32_t
 
	mÀngth
, uöt32_à
	mlkey
, uöt32_à
	mÊags
);

1951 (*
	m£nd_≥ndög_ölöe
)(
ibv_qp
 *
	mqp
, *
	maddr
, 
uöt32_t
 
	mÀngth
, uöt32_à
	mÊags
);

1962 (*
	m£nd_≥ndög_sg_li°
)(
ibv_qp
 *
	mqp
, 
ibv_sge
 *
	msg_li°
, 
uöt32_t
 
	mnum
, uöt32_à
	mÊags
);

1968 (*
	m£nd_Êush
)(
ibv_qp
 *
	mqp
);

1972 (*
	m£nd_bur°
)(
ibv_qp
 *
	mqp
, 
ibv_sge
 *
	mmsg_li°
, 
uöt32_t
 
	mnum
, uöt32_à
	mÊags
);

1978 (*
	mªcv_bur°
)(
ibv_qp
 *
	mqp
, 
ibv_sge
 *
	mmsg_li°
, 
uöt32_t
 
	mnum
);

1988 (*
	m£nd_≥ndög_vœn
)(
ibv_qp
 *
	mqp
, 
uöt64_t
 
	maddr
, 
uöt32_t
 
	mÀngth
,

1989 
uöt32_t
 
	mlkey
, uöt32_à
	mÊags
, 
uöt16_t
 *
	mvœn_tci
);

1999 (*
	m£nd_≥ndög_ölöe_vœn
)(
ibv_qp
 *
	mqp
, *
	maddr
, 
uöt32_t
 
	mÀngth
,

2000 
uöt32_t
 
	mÊags
, 
uöt16_t
 *
	mvœn_tci
);

2010 (*
	m£nd_≥ndög_sg_li°_vœn
)(
ibv_qp
 *
	mqp
, 
ibv_sge
 *
	msg_li°
, 
uöt32_t
 
	mnum
,

2011 
uöt32_t
 
	mÊags
, 
uöt16_t
 *
	mvœn_tci
);

2015 
	sibv_exp_wq_Ámûy
 {

2024 (*
	mªcv_sg_li°
)(
ibv_exp_wq
 *
	mwq
, 
ibv_sge
 *
	msg_li°
, 
uöt32_t
 
	mnum_sg
);

2030 (*
	mªcv_bur°
)(
ibv_exp_wq
 *
	mwq
, 
ibv_sge
 *
	mmsg_li°
, 
uöt32_t
 
	mnum
);

2034 
	eibv_exp_cq_Ámûy_Êags
 {

2039 
	mIBV_EXP_CQ_RX_IP_CSUM_OK
 = 1 << 0,

2040 
	mIBV_EXP_CQ_RX_TCP_UDP_CSUM_OK
 = 1 << 1,

2041 
	mIBV_EXP_CQ_RX_IPV4_PACKET
 = 1 << 2,

2042 
	mIBV_EXP_CQ_RX_IPV6_PACKET
 = 1 << 3,

2043 
	mIBV_EXP_CQ_RX_TUNNEL_PACKET
 = 1 << 4,

2044 
	mIBV_EXP_CQ_RX_OUTER_IP_CSUM_OK
 = 1 << 5,

2045 
	mIBV_EXP_CQ_RX_OUTER_TCP_UDP_CSUM_OK
 = 1 << 6,

2046 
	mIBV_EXP_CQ_RX_OUTER_IPV4_PACKET
 = 1 << 7,

2047 
	mIBV_EXP_CQ_RX_OUTER_IPV6_PACKET
 = 1 << 8,

2051 
	mIBV_EXP_CQ_RX_MULTI_PACKET_LAST_V1
 = 1 << 9,

2053 
	mIBV_EXP_CQ_RX_CVLAN_STRIPPED_V1
 = 1 << 10,

2063 
	mIBV_EXP_CQ_RX_TCP_PACKET
 = 1 << 11,

2064 
	mIBV_EXP_CQ_RX_UDP_PACKET
 = 1 << 12,

2068 
	sibv_exp_cq_Ámûy
 {

2069 
öt32_t
 (*
pﬁl_˙t
)(
ibv_cq
 *
	mcq
, 
uöt32_t
 
	mmax
);

2070 
öt32_t
 (*
pﬁl_Àngth
)(
ibv_cq
 *
	mcq
, *
	mbuf
, 
uöt32_t
 *
	möl
);

2071 
öt32_t
 (*
pﬁl_Àngth_Êags
)(
ibv_cq
 *
	mcq
, *
	mbuf
, 
uöt32_t
 *
	möl
, uöt32_à*
	mÊags
);

2074 
	sibv_exp_cq_Ámûy_v1
 {

2093 
öt32_t
 (*
pﬁl_˙t
)(
ibv_cq
 *
	mcq
, 
uöt32_t
 
	mmax
);

2117 
öt32_t
 (*
pﬁl_Àngth
)(
ibv_cq
 *
	mcq
, *
	mbuf
, 
uöt32_t
 *
	möl
);

2125 
öt32_t
 (*
pﬁl_Àngth_Êags
)(
ibv_cq
 *
	mcq
, *
	mbuf
, 
uöt32_t
 *
	möl
, uöt32_à*
	mÊags
);

2135 
öt32_t
 (*
pﬁl_Àngth_Êags_mp_rq
)(
ibv_cq
 *
	mcq
, 
uöt32_t
 *
	moff£t
, uöt32_à*
	mÊags
);

2147 
öt32_t
 (*
pﬁl_Àngth_Êags_cvœn
)(
ibv_cq
 *
	mcq
, *
	mbuf
,

2148 
uöt32_t
 *
	möl
, uöt32_à*
	mÊags
,

2149 
uöt16_t
 *
	mvœn_tci
);

2162 
öt32_t
 (*
pﬁl_Àngth_Êags_mp_rq_cvœn
)(
ibv_cq
 *
	mcq
,

2163 
uöt32_t
 *
	moff£t
,

2164 
uöt32_t
 *
	mÊags
,

2165 
uöt16_t
 *
	mvœn_tci
);

2169 
	mIBV_EXP_NUM_DC_INFO_LIDS
 = 30

2172 
	sibv_exp_dc_öfo_ít
 {

2173 
uöt16_t
 
	mlid
[
IBV_EXP_NUM_DC_INFO_LIDS
];

2174 
uöt32_t
 
	m£qnum
;

2177 
	eibv_exp_ro˚_gid_ty≥
 {

2178 
	mIBV_EXP_IB_ROCE_V1_GID_TYPE
,

2179 
	mIBV_EXP_ROCE_V2_GID_TYPE
,

2180 
	mIBV_EXP_ROCE_V1_5_GID_TYPE
,

2183 
	eibv_exp_quîy_gid_©å
 {

2184 
	mIBV_EXP_QUERY_GID_ATTR_TYPE
 = (1 << 0),

2185 
	mIBV_EXP_QUERY_GID_ATTR_GID
 = (1 << 1),

2186 
	mIBV_EXP_QUERY_GID_ATTR_RESERVED
 = (1 << 2),

2189 
	sibv_exp_gid_©å
 {

2190 
uöt32_t
 
	mcomp_mask
;

2191 
ibv_exp_ro˚_gid_ty≥
 
	mty≥
;

2192 
ibv_gid
 
	mgid
;

2199 
	eibv_exp_ec_ˇlc_©å_comp_mask
 {

2200 
	mIBV_EXP_EC_CALC_ATTR_MAX_INFLIGHT
 = (1 << 0),

2201 
	mIBV_EXP_EC_CALC_ATTR_K
 = (1 << 1),

2202 
	mIBV_EXP_EC_CALC_ATTR_M
 = (1 << 2),

2203 
	mIBV_EXP_EC_CALC_ATTR_W
 = (1 << 3),

2204 
	mIBV_EXP_EC_CALC_ATTR_MAX_DATA_SGE
 = (1 << 4),

2205 
	mIBV_EXP_EC_CALC_ATTR_MAX_CODE_SGE
 = (1 << 5),

2206 
	mIBV_EXP_EC_CALC_ATTR_ENCODE_MAT
 = (1 << 6),

2207 
	mIBV_EXP_EC_CALC_ATTR_AFFINITY
 = (1 << 7),

2208 
	mIBV_EXP_EC_CALC_ATTR_POLLING
 = (1 << 8),

2209 
	mIBV_EXP_EC_CALC_INIT_ATTR_RESERVED
 = (1 << 9),

2229 
	sibv_exp_ec_ˇlc_öô_©å
 {

2230 
uöt32_t
 
	mcomp_mask
;

2231 
uöt32_t
 
	mmax_öÊight_ˇlcs
;

2232 
	mk
;

2233 
	mm
;

2234 
	mw
;

2235 
	mmax_d©a_sge
;

2236 
	mmax_code_sge
;

2237 
uöt8_t
 *
	mícode_m©rix
;

2238 
	mafföôy_höt
;

2239 
	mpﬁlög
;

2248 
	eibv_exp_ec_°©us
 {

2249 
	mIBV_EXP_EC_CALC_SUCCESS
,

2250 
	mIBV_EXP_EC_CALC_FAIL
,

2262 
	sibv_exp_ec_comp
 {

2263 (*
	md⁄e
)(
ibv_exp_ec_comp
 *
	mcomp
);

2264 
ibv_exp_ec_°©us
 
	m°©us
;

2272 
	sibv_exp_ec_ˇlc
 {

2273 
ibv_pd
 *
	mpd
;

2285 
	sibv_exp_ec_mem
 {

2286 
ibv_sge
 *
	md©a_blocks
;

2287 
	mnum_d©a_sge
;

2288 
ibv_sge
 *
	mcode_blocks
;

2289 
	mnum_code_sge
;

2290 
	mblock_size
;

2299 
	sibv_exp_ec_°rùe
 {

2300 
ibv_qp
 *
	mqp
;

2301 
ibv_£nd_wr
 *
	mwr
;

2304 
	gibv_exp_≥î_commô
;

2305 
	gibv_exp_rﬁlback_˘x
;

2308 
	gibv_exp_≥î_≥ek
;

2309 
	gibv_exp_≥î_ab‹t_≥ek
;

2311 
	eibv_exp_§q_ty≥
 {

2312 
	mIBV_EXP_SRQT_BASIC
 = 
IBV_SRQT_BASIC
,

2313 
	mIBV_EXP_SRQT_XRC
 = 
IBV_SRQT_XRC
,

2314 
	mIBV_EXP_SRQT_TAG_MATCHING
 = 32

2317 
	eibv_exp_¸óã_§q_comp_mask
 {

2318 
	mIBV_EXP_CREATE_SRQ_CQ
 = (1 << 0),

2319 
	mIBV_EXP_CREATE_SRQ_XRCD
 = (1 << 1),

2320 
	mIBV_EXP_CREATE_SRQ_TM
 = (1 << 2),

2321 
	mIBV_EXP_CREATE_SRQ_RESERVED
 = (1 << 3)

2324 
	sibv_exp_tm_ˇp
 {

2325 
uöt32_t
 
	mmax_num_ègs
;

2326 
uöt32_t
 
	mmax_›s
;

2329 
	sibv_exp_¸óã_§q_©å
 {

2330 
ibv_§q_öô_©å
 
	mba£
;

2331 
ibv_exp_§q_ty≥
 
	m§q_ty≥
;

2332 
ibv_pd
 *
	mpd
;

2333 
uöt32_t
 
	mcomp_mask
;

2334 
ibv_cq
 *
	mcq
;

2335 
ibv_xrcd
 *
	mxrcd
;

2336 
ibv_exp_tm_ˇp
 
	mtm_ˇp
;

2339 
	eibv_exp_›s_wr_›code
 {

2340 
	mIBV_EXP_WR_TAG_ADD
,

2341 
	mIBV_EXP_WR_TAG_DEL
,

2342 
	mIBV_EXP_WR_TAG_SYNC


2345 
	eibv_exp_›s_Êags
 {

2346 
	mIBV_EXP_OPS_SIGNALED
 = 1 << 0,

2347 
	mIBV_EXP_OPS_TM_SYNC
 = 1 << 1

2350 
	sibv_exp_›s_wr
 {

2351 
uöt64_t
 
	mwr_id
;

2352 
ibv_exp_›s_wr
 *
	m√xt
;

2353 
ibv_exp_›s_wr_›code
 
	m›code
;

2354 
	mÊags
;

2356 
uöt32_t
 
	mu√x≥˘ed_˙t
;

2357 
uöt32_t
 
	mh™dÀ
;

2359 
uöt64_t
 
	mªcv_wr_id
;

2360 
ibv_sge
 *
	msg_li°
;

2361 
	mnum_sge
;

2362 
uöt64_t
 
	mèg
;

2363 
uöt64_t
 
	mmask
;

2364 } 
	madd
;

2365 } 
	mtm
;

2368 
	svîbs_c⁄ãxt_exp
 {

2370 (*
	mexp_po°_§q_›s
)(
ibv_§q
 *
	m§q
,

2371 
ibv_exp_›s_wr
 *
	m›
,

2372 
ibv_exp_›s_wr
 **
	mbad_›
);

2373 
	mibv_§q
 *(*
	mexp_¸óã_§q
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2374 
ibv_exp_¸óã_§q_©å
 *
	m©å
);

2375 (*
	mdrv_exp_£t_c⁄ãxt_©å
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2376 
ibv_exp_›í_devi˚_©å
 *
	m©å
);

2377 
	mibv_ah
 * (*
	mdrv_exp_ibv_¸óã_kah
)(
ibv_pd
 *
	mpd
,

2378 
ibv_exp_ah_©å
 *
	m©å_exp
);

2379 (*
	mexp_≥î_≥ek_cq
)(
ibv_cq
 *
	mibcq
,

2380 
ibv_exp_≥î_≥ek
 *
	m≥ek_˘x
);

2381 (*
	mexp_≥î_ab‹t_≥ek_cq
)(
ibv_cq
 *
	mibcq
,

2382 
ibv_exp_≥î_ab‹t_≥ek
 *
	mack_˘x
);

2383 (*
	mexp_≥î_commô_qp
)(
ibv_qp
 *
	mqp
,

2384 
ibv_exp_≥î_commô
 *
	m≥î
);

2385 (*
	mexp_rﬁlback_£nd
)(
ibv_qp
 *
	mqp
,

2386 
ibv_exp_rﬁlback_˘x
 *
	mrﬁlback
);

2387 (*
	mec_upd©e_sync
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
,

2388 
ibv_exp_ec_mem
 *
	mec_mem
,

2389 
uöt8_t
 *
	md©a_upd©es
,

2390 
uöt8_t
 *
	mcode_upd©es
);

2391 (*
	mec_upd©e_async
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
,

2392 
ibv_exp_ec_mem
 *
	mec_mem
,

2393 
uöt8_t
 *
	md©a_upd©es
,

2394 
uöt8_t
 *
	mcode_upd©es
,

2395 
ibv_exp_ec_comp
 *
	mec_comp
);

2396 
	mibv_exp_ec_ˇlc
 *(*
	mÆloc_ec_ˇlc
)(
ibv_pd
 *
	mpd
,

2397 
ibv_exp_ec_ˇlc_öô_©å
 *
	m©å
);

2398 (*
	mdóŒoc_ec_ˇlc
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
);

2399 (*
	mec_ícode_async
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
,

2400 
ibv_exp_ec_mem
 *
	mec_mem
,

2401 
ibv_exp_ec_comp
 *
	mec_comp
);

2402 (*
	mec_ícode_sync
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
,

2403 
ibv_exp_ec_mem
 *
	mec_mem
);

2404 (*
	mec_decode_async
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
,

2405 
ibv_exp_ec_mem
 *
	mec_mem
,

2406 
uöt8_t
 *
	mîasuªs
,

2407 
uöt8_t
 *
	mdecode_m©rix
,

2408 
ibv_exp_ec_comp
 *
	mec_comp
);

2409 (*
	mec_decode_sync
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
,

2410 
ibv_exp_ec_mem
 *
	mec_mem
,

2411 
uöt8_t
 *
	mîasuªs
,

2412 
uöt8_t
 *
	mdecode_m©rix
);

2413 (*
	mec_pﬁl
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
, 
	mn
);

2414 (*
	mec_ícode_£nd
)(
ibv_exp_ec_ˇlc
 *
	mˇlc
,

2415 
ibv_exp_ec_mem
 *
	mec_mem
,

2416 
ibv_exp_ec_°rùe
 *
	md©a_°rùes
,

2417 
ibv_exp_ec_°rùe
 *
	mcode_°rùes
);

2418 (*
	mexp_quîy_gid_©å
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
, 
uöt8_t
 
	mp‹t_num
,

2419 
	mödex
,

2420 
ibv_exp_gid_©å
 *
	m©å
);

2421 (*
	mexp_de°roy_rwq_öd_èbÀ
)(
ibv_exp_rwq_öd_èbÀ
 *
	mrwq_öd_èbÀ
);

2422 
	mibv_exp_rwq_öd_èbÀ
 *(*
	mexp_¸óã_rwq_öd_èbÀ
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2423 
ibv_exp_rwq_öd_èbÀ_öô_©å
 *
	möô_©å
);

2424 (*
	mexp_de°roy_wq
)(
ibv_exp_wq
 *
	mwq
);

2425 (*
	mexp_modify_wq
)(
ibv_exp_wq
 *
	mwq
,

2426 
ibv_exp_wq_©å
 *
	mwq_©å
);

2427 
	mibv_exp_wq
 * (*
	mexp_¸óã_wq
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2428 
ibv_exp_wq_öô_©å
 *
	mwq_öô_©å
);

2429 (*
	mdrv_exp_pﬁl_dc_öfo
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2430 
ibv_exp_dc_öfo_ít
 *
	míts
,

2431 
	m√¡
, 
	mp‹t
);

2432 *(*
	mexp_quîy_ötf
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
, 
ibv_exp_quîy_ötf_∑øms
 *
	m∑øms
,

2433 
ibv_exp_quîy_ötf_°©us
 *
	m°©us
);

2434 (*
	mexp_ªÀa£_ötf
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
, *
	mötf
,

2435 
ibv_exp_ªÀa£_ötf_∑øms
 *
	m∑øms
);

2436 
	mibv_exp_ªs_domaö
 *(*
	mexp_¸óã_ªs_domaö
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2437 
ibv_exp_ªs_domaö_öô_©å
 *
	m©å
);

2438 (*
	mexp_de°roy_ªs_domaö
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2439 
ibv_exp_ªs_domaö
 *
	mªs_dom
,

2440 
ibv_exp_de°roy_ªs_domaö_©å
 *
	m©å
);

2441 (*
	mlib_exp_u£_¥iv_ív
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
);

2442 (*
	mlib_exp_£ãnv
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
, c⁄° *
	m«me
,

2443 c⁄° *
	mvÆue
, 
	movîwrôe
);

2444 
vîbs_ívú⁄mít
 *
	mvív
;

2445 (*
	mdrv_exp_dîeg_mr
)(
ibv_mr
 *
	mmr
, 
ibv_exp_dîeg_out
 *
	mout
);

2446 (*
	mABI_∂a˚hﬁdî2
)();

2447 (*
	mABI_∂a˚hﬁdî1
)();

2448 (*
	mdrv_exp_¥e„tch_mr
)(
ibv_mr
 *
	mmr
,

2449 
ibv_exp_¥e„tch_©å
 *
	m©å
);

2450 (*
	mlib_exp_¥e„tch_mr
)(
ibv_mr
 *
	mmr
,

2451 
ibv_exp_¥e„tch_©å
 *
	m©å
);

2452 
	mibv_exp_mkey_li°_c⁄èöî
 * (*
	mdrv_exp_Æloc_mkey_li°_mem‹y
)(
ibv_exp_mkey_li°_c⁄èöî_©å
 *
	m©å
);

2453 
	mibv_exp_mkey_li°_c⁄èöî
 * (*
	mlib_exp_Æloc_mkey_li°_mem‹y
)(
ibv_exp_mkey_li°_c⁄èöî_©å
 *
	m©å
);

2454 (*
	mdrv_exp_dóŒoc_mkey_li°_mem‹y
)(
ibv_exp_mkey_li°_c⁄èöî
 *
	mmem
);

2455 (*
	mlib_exp_dóŒoc_mkey_li°_mem‹y
)(
ibv_exp_mkey_li°_c⁄èöî
 *
	mmem
);

2456 (*
	mdrv_exp_quîy_mkey
)(
ibv_mr
 *
	mmr
, 
ibv_exp_mkey_©å
 *
	mmkey_©å
);

2457 (*
	mlib_exp_quîy_mkey
)(
ibv_mr
 *
	mmr
, 
ibv_exp_mkey_©å
 *
	mmkey_©å
);

2458 
	mibv_mr
 * (*
	mdrv_exp_¸óã_mr
)(
ibv_exp_¸óã_mr_ö
 *
	mö
);

2459 
	mibv_mr
 * (*
	mlib_exp_¸óã_mr
)(
ibv_exp_¸óã_mr_ö
 *
	mö
);

2460 (*
	mdrv_exp_¨m_d˘
)(
ibv_exp_d˘
 *
	md˘
, 
ibv_exp_¨m_©å
 *
	m©å
);

2461 (*
	mlib_exp_¨m_d˘
)(
ibv_exp_d˘
 *
	md˘
, 
ibv_exp_¨m_©å
 *
	m©å
);

2462 (*
	mdrv_exp_böd_mw
)(
ibv_exp_mw_böd
 *
	mmw_böd
);

2463 (*
	mlib_exp_böd_mw
)(
ibv_exp_mw_böd
 *
	mmw_böd
);

2464 (*
	mdrv_exp_po°_£nd
)(
ibv_qp
 *
	mqp
,

2465 
ibv_exp_£nd_wr
 *
	mwr
,

2466 
ibv_exp_£nd_wr
 **
	mbad_wr
);

2467 
	mibv_mr
 * (*
	mdrv_exp_ªg_mr
)(
ibv_exp_ªg_mr_ö
 *
	mö
);

2468 
	mibv_mr
 * (*
	mlib_exp_ªg_mr
)(
ibv_exp_ªg_mr_ö
 *
	mö
);

2469 
	mibv_ah
 * (*
	mdrv_exp_ibv_¸óã_ah
)(
ibv_pd
 *
	mpd
,

2470 
ibv_exp_ah_©å
 *
	m©å_exp
);

2471 (*
	mdrv_exp_quîy_vÆues
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
, 
	mq_vÆues
,

2472 
ibv_exp_vÆues
 *
	mvÆues
);

2473 
	mibv_cq
 * (*
	mexp_¸óã_cq
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
, 
	mcqe
,

2474 
ibv_comp_ch™√l
 *
	mch™√l
,

2475 
	mcomp_ve˘‹
, 
ibv_exp_cq_öô_©å
 *
	m©å
);

2476 (*
	mdrv_exp_ibv_pﬁl_cq
)(
ibv_cq
 *
	mibcq
, 
	mnum_íåõs
,

2477 
ibv_exp_wc
 *
	mwc
, 
uöt32_t
 
	mwc_size
);

2478 * (*
	mdrv_exp_gë_Àgacy_xrc
Ë(
ibv_§q
 *
	mibv_§q
);

2479 (*
	mdrv_exp_£t_Àgacy_xrc
Ë(
ibv_§q
 *
	mibv_§q
, *
	mÀgacy_xrc
);

2480 
	mibv_mr
 * (*
	mdrv_exp_ibv_ªg_sh¨ed_mr
)(
ibv_exp_ªg_sh¨ed_mr_ö
 *
	mö
);

2481 
	mibv_mr
 * (*
	mlib_exp_ibv_ªg_sh¨ed_mr
)(
ibv_exp_ªg_sh¨ed_mr_ö
 *
	mö
);

2482 (*
	mdrv_exp_modify_qp
)(
ibv_qp
 *
	mqp
, 
ibv_exp_qp_©å
 *
	m©å
,

2483 
uöt64_t
 
	mexp_©å_mask
);

2484 (*
	mlib_exp_modify_qp
)(
ibv_qp
 *
	mqp
, 
ibv_exp_qp_©å
 *
	m©å
,

2485 
uöt64_t
 
	mexp_©å_mask
);

2486 (*
	mdrv_exp_po°_èsk
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2487 
ibv_exp_èsk
 *
	mèsk
,

2488 
ibv_exp_èsk
 **
	mbad_èsk
);

2489 (*
	mlib_exp_po°_èsk
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2490 
ibv_exp_èsk
 *
	mèsk
,

2491 
ibv_exp_èsk
 **
	mbad_èsk
);

2492 (*
	mdrv_exp_modify_cq
)(
ibv_cq
 *
	mcq
,

2493 
ibv_exp_cq_©å
 *
	m©å
, 
	m©å_mask
);

2494 (*
	mlib_exp_modify_cq
)(
ibv_cq
 *
	mcq
,

2495 
ibv_exp_cq_©å
 *
	m©å
, 
	m©å_mask
);

2496 (*
	mdrv_exp_ibv_de°roy_Êow
Ë(
ibv_exp_Êow
 *
	mÊow
);

2497 (*
	mlib_exp_ibv_de°roy_Êow
Ë(
ibv_exp_Êow
 *
	mÊow
);

2498 
	mibv_exp_Êow
 * (*
	mdrv_exp_ibv_¸óã_Êow
Ë(
ibv_qp
 *
	mqp
,

2499 
ibv_exp_Êow_©å


2500 *
	mÊow_©å
);

2501 
	mibv_exp_Êow
 * (*
	mlib_exp_ibv_¸óã_Êow
Ë(
ibv_qp
 *
	mqp
,

2502 
ibv_exp_Êow_©å


2503 *
	mÊow_©å
);

2505 (*
	mdrv_exp_quîy_p‹t
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
, 
uöt8_t
 
	mp‹t_num
,

2506 
ibv_exp_p‹t_©å
 *
	mp‹t_©å
);

2507 (*
	mlib_exp_quîy_p‹t
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
, 
uöt8_t
 
	mp‹t_num
,

2508 
ibv_exp_p‹t_©å
 *
	mp‹t_©å
);

2509 
	mibv_exp_d˘
 *(*
	m¸óã_d˘
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2510 
ibv_exp_d˘_öô_©å
 *
	m©å
);

2511 (*
	mde°roy_d˘
)(
ibv_exp_d˘
 *
	md˘
);

2512 (*
	mquîy_d˘
)(
ibv_exp_d˘
 *
	md˘
, 
ibv_exp_d˘_©å
 *
	m©å
);

2513 (*
	mdrv_exp_quîy_devi˚
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2514 
ibv_exp_devi˚_©å
 *
	m©å
);

2515 (*
	mlib_exp_quîy_devi˚
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2516 
ibv_exp_devi˚_©å
 *
	m©å
);

2517 
	mibv_qp
 *(*
	mdrv_exp_¸óã_qp
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2518 
ibv_exp_qp_öô_©å
 *
	möô_©å
);

2519 
	mibv_qp
 *(*
	mlib_exp_¸óã_qp
)(
ibv_c⁄ãxt
 *
	mc⁄ãxt
,

2520 
ibv_exp_qp_öô_©å
 *
	möô_©å
);

2521 
size_t
 
	msz
;

2525 
	#ETHERNET_LL_SIZE
 6

	)

2527 
ölöe
 
vîbs_c⁄ãxt_exp
 *
	$vîbs_gë_exp_˘x
(
ibv_c⁄ãxt
 *
˘x
)

2529 
vîbs_c⁄ãxt
 *
≠p_ex_˘x
 = 
	`vîbs_gë_˘x
(
˘x
);

2530 *
a˘uÆ_ex_˘x
;

2532 i‡(!
≠p_ex_˘x
 || !◊µ_ex_˘x->
has_comp_mask
 & 
VERBS_CONTEXT_EXP
))

2533  
NULL
;

2535 
a˘uÆ_ex_˘x
 = ((*)
˘x
Ë- (
≠p_ex_˘x
->
sz
 - (
ibv_c⁄ãxt
));

2537  (
vîbs_c⁄ãxt_exp
 *)(
a˘uÆ_ex_˘x
 - (verbs_context_exp));

2538 
	}
}

2540 
	#vîbs_gë_exp_˘x_›
(
˘x
, 
›
) ({ \

2541 
vîbs_c⁄ãxt_exp
 *
_v˘x
 = 
	`vîbs_gë_exp_˘x
(
˘x
); \

2542 (!
_v˘x
 || (_v˘x->
sz
 < (*_v˘xË- 
	`off£tof
(
vîbs_c⁄ãxt_exp
, 
›
)) || \

2543 !
_v˘x
->
›
Ë? 
NULL
 : _v˘x; })

	)

2545 
	#vîbs_£t_exp_˘x_›
(
_v˘x
, 
›
, 
±r
) ({ \

2546 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
_v˘x
; \

2547 i‡(
v˘x
 && (v˘x->
sz
 >(*v˘xË- 
	`off£tof
(
vîbs_c⁄ãxt_exp
, 
›
))) \

2548 
v˘x
->
›
 = 
±r
; })

	)

2558 
ibv_devi˚
 **
ibv_exp_gë_devi˚_li°
(*
num_devi˚s
);

2568 
ölöe
 
ibv_exp_ec_ˇlc
 *

2569 
	$ibv_exp_Æloc_ec_ˇlc
(
ibv_pd
 *
pd
,

2570 
ibv_exp_ec_ˇlc_öô_©å
 *
©å
)

2572 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2574 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
pd
->
c⁄ãxt
, 
Æloc_ec_ˇlc
);

2575 i‡(!
v˘x
) {

2576 
î∫o
 = 
ENOSYS
;

2577  
NULL
;

2579 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

2580 
IBV_EXP_EC_CALC_INIT_ATTR_RESERVED
 - 1);

2582  
v˘x
->
	`Æloc_ec_ˇlc
(
pd
, 
©å
);

2583 
	}
}

2590 
ölöe
 
	$ibv_exp_dóŒoc_ec_ˇlc
(
ibv_exp_ec_ˇlc
 *
ˇlc
)

2592 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2594 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
dóŒoc_ec_ˇlc
);

2595 i‡(!
v˘x
) {

2596 
î∫o
 = 
ENOSYS
;

2600 
v˘x
->
	`dóŒoc_ec_ˇlc
(
ˇlc
);

2601 
	}
}

2626 
ölöe
 

2627 
	$ibv_exp_ec_ícode_async
(
ibv_exp_ec_ˇlc
 *
ˇlc
,

2628 
ibv_exp_ec_mem
 *
ec_mem
,

2629 
ibv_exp_ec_comp
 *
ec_comp
)

2631 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2633 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
ec_ícode_async
);

2634 i‡(!
v˘x
)

2635  
ENOSYS
;

2637  
v˘x
->
	`ec_ícode_async
(
ˇlc
, 
ec_mem
, 
ec_comp
);

2638 
	}
}

2660 
ölöe
 

2661 
	$ibv_exp_ec_ícode_sync
(
ibv_exp_ec_ˇlc
 *
ˇlc
,

2662 
ibv_exp_ec_mem
 *
ec_mem
)

2664 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2666 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
ec_ícode_sync
);

2667 i‡(!
v˘x
)

2668  
ENOSYS
;

2670  
v˘x
->
	`ec_ícode_sync
(
ˇlc
, 
ec_mem
);

2671 
	}
}

2705 
ölöe
 

2706 
	$ibv_exp_ec_decode_async
(
ibv_exp_ec_ˇlc
 *
ˇlc
,

2707 
ibv_exp_ec_mem
 *
ec_mem
,

2708 
uöt8_t
 *
îasuªs
,

2709 
uöt8_t
 *
decode_m©rix
,

2710 
ibv_exp_ec_comp
 *
ec_comp
)

2712 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2714 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
ec_decode_async
);

2715 i‡(!
v˘x
)

2716  
ENOSYS
;

2718  
v˘x
->
	`ec_decode_async
(
ˇlc
, 
ec_mem
, 
îasuªs
,

2719 
decode_m©rix
, 
ec_comp
);

2720 
	}
}

2748 
ölöe
 

2749 
	$ibv_exp_ec_decode_sync
(
ibv_exp_ec_ˇlc
 *
ˇlc
,

2750 
ibv_exp_ec_mem
 *
ec_mem
,

2751 
uöt8_t
 *
îasuªs
,

2752 
uöt8_t
 *
decode_m©rix
)

2754 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2756 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
ec_decode_sync
);

2757 i‡(!
v˘x
)

2758  
ENOSYS
;

2760  
v˘x
->
	`ec_decode_sync
(
ˇlc
, 
ec_mem
, 
îasuªs
, 
decode_m©rix
);

2761 
	}
}

2801 
ölöe
 

2802 
	$ibv_exp_ec_upd©e_async
(
ibv_exp_ec_ˇlc
 *
ˇlc
,

2803 
ibv_exp_ec_mem
 *
ec_mem
,

2804 
uöt8_t
 *
d©a_upd©es
,

2805 
uöt8_t
 *
code_upd©es
,

2806 
ibv_exp_ec_comp
 *
ec_comp
)

2808 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2810 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
ec_upd©e_async
);

2811 i‡(!
v˘x
)

2812  -
ENOSYS
;

2814  
v˘x
->
	`ec_upd©e_async
(
ˇlc
, 
ec_mem
, 
d©a_upd©es
,

2815 
code_upd©es
, 
ec_comp
);

2816 
	}
}

2855 
ölöe
 

2856 
	$ibv_exp_ec_upd©e_sync
(
ibv_exp_ec_ˇlc
 *
ˇlc
,

2857 
ibv_exp_ec_mem
 *
ec_mem
,

2858 
uöt8_t
 *
d©a_upd©es
,

2859 
uöt8_t
 *
code_upd©es
)

2861 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2863 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
ec_upd©e_sync
);

2864 i‡(!
v˘x
)

2865  -
ENOSYS
;

2867  
v˘x
->
	`ec_upd©e_sync
(
ˇlc
, 
ec_mem
, 
d©a_upd©es
, 
code_upd©es
);

2868 
	}
}

2879 
ölöe
 

2880 
	$ibv_exp_ec_pﬁl
(
ibv_exp_ec_ˇlc
 *
ˇlc
, 
n
)

2882 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2884 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
ec_pﬁl
);

2885 i‡(!
v˘x
)

2886  
ENOSYS
;

2888  
v˘x
->
	`ec_pﬁl
(
ˇlc
, 
n
);

2889 
	}
}

2913 
ölöe
 

2914 
	$ibv_exp_ec_ícode_£nd
(
ibv_exp_ec_ˇlc
 *
ˇlc
,

2915 
ibv_exp_ec_mem
 *
ec_mem
,

2916 
ibv_exp_ec_°rùe
 *
d©a_°rùes
,

2917 
ibv_exp_ec_°rùe
 *
code_°rùes
)

2919 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2921 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ˇlc
->
pd
->
c⁄ãxt
, 
ec_ícode_£nd
);

2922 i‡(!
v˘x
)

2923  -
ENOSYS
;

2925  
v˘x
->
	`ec_ícode_£nd
(
ˇlc
, 
ec_mem
, 
d©a_°rùes
, 
code_°rùes
);

2926 
	}
}

2928 
ölöe
 
ibv_qp
 *

2929 
	$ibv_exp_¸óã_qp
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
ibv_exp_qp_öô_©å
 *
qp_öô_©å
)

2931 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2932 
uöt32_t
 
mask
 = 
qp_öô_©å
->
comp_mask
;

2934 i‡(
mask
 =
IBV_EXP_QP_INIT_ATTR_PD
)

2935  
	`ibv_¸óã_qp
(
qp_öô_©å
->
pd
,

2936 (
ibv_qp_öô_©å
 *Ë
qp_öô_©å
);

2938 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
lib_exp_¸óã_qp
);

2939 i‡(!
v˘x
) {

2940 
î∫o
 = 
ENOSYS
;

2941  
NULL
;

2943 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
qp_öô_©å
->
comp_mask
,

2944 
IBV_EXP_QP_INIT_ATTR_RESERVED1
 - 1);

2946  
v˘x
->
	`lib_exp_¸óã_qp
(
c⁄ãxt
, 
qp_öô_©å
);

2947 
	}
}

2954 
ölöe
 
	$ibv_exp_u£_¥iv_ív
(
ibv_c⁄ãxt
 *
c⁄ãxt
)

2956 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2958 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
lib_exp_u£_¥iv_ív
);

2959 i‡(!
v˘x
) {

2960 
î∫o
 = 
ENOSYS
;

2964  
v˘x
->
	`lib_exp_u£_¥iv_ív
(
c⁄ãxt
);

2965 
	}
}

2976 
ölöe
 
	$ibv_exp_pﬁl_dc_öfo
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

2977 
ibv_exp_dc_öfo_ít
 *
íts
,

2978 
√¡
, 
p‹t
)

2980 
vîbs_c⁄ãxt_exp
 *
v˘x
;

2982 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
drv_exp_pﬁl_dc_öfo
);

2983 i‡(!
v˘x
) {

2984 
î∫o
 = 
ENOSYS
;

2988  
v˘x
->
	`drv_exp_pﬁl_dc_öfo
(
c⁄ãxt
, 
íts
, 
√¡
, 
p‹t
);

2989 
	}
}

2996 
ölöe
 
	$ibv_exp_£ãnv
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

2997 c⁄° *
«me
,

2998 c⁄° *
vÆue
,

2999 
ovîwrôe
)

3001 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3003 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
lib_exp_£ãnv
);

3004 i‡(!
v˘x
)

3005  
	`£ãnv
(
«me
, 
vÆue
, 
ovîwrôe
);

3007  
v˘x
->
	`lib_exp_£ãnv
(
c⁄ãxt
, 
«me
, 
vÆue
, 
ovîwrôe
);

3008 
	}
}

3010 
ölöe
 
	$ibv_exp_quîy_devi˚
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3011 
ibv_exp_devi˚_©å
 *
©å
)

3013 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
,

3014 
lib_exp_quîy_devi˚
);

3015 i‡(!
v˘x
)

3016  
ENOSYS
;

3018 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3019 
IBV_EXP_DEVICE_ATTR_RESERVED
 - 1);

3020  
v˘x
->
	`lib_exp_quîy_devi˚
(
c⁄ãxt
, 
©å
);

3021 
	}
}

3023 
ölöe
 
ibv_exp_d˘
 *

3024 
	$ibv_exp_¸óã_d˘
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3025 
ibv_exp_d˘_öô_©å
 *
©å
)

3027 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3028 
ibv_exp_d˘
 *
d˘
;

3030 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
¸óã_d˘
);

3031 i‡(!
v˘x
) {

3032 
î∫o
 = 
ENOSYS
;

3033  
NULL
;

3036 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3037 
IBV_EXP_DCT_INIT_ATTR_RESERVED
 - 1);

3038 
	`±hªad_muãx_lock
(&
c⁄ãxt
->
muãx
);

3039 
d˘
 = 
v˘x
->
	`¸óã_d˘
(
c⁄ãxt
, 
©å
);

3040 i‡(
d˘
)

3041 
d˘
->
c⁄ãxt
 = context;

3043 
	`±hªad_muãx_u∆ock
(&
c⁄ãxt
->
muãx
);

3045  
d˘
;

3046 
	}
}

3048 
ölöe
 
	$ibv_exp_de°roy_d˘
(
ibv_exp_d˘
 *
d˘
)

3050 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3051 
ibv_c⁄ãxt
 *
c⁄ãxt
 = 
d˘
->context;

3052 
îr
;

3054 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
de°roy_d˘
);

3055 i‡(!
v˘x
) {

3056 
î∫o
 = 
ENOSYS
;

3057  
î∫o
;

3060 
	`±hªad_muãx_lock
(&
c⁄ãxt
->
muãx
);

3061 
îr
 = 
v˘x
->
	`de°roy_d˘
(
d˘
);

3062 
	`±hªad_muãx_u∆ock
(&
c⁄ãxt
->
muãx
);

3064  
îr
;

3065 
	}
}

3067 
ölöe
 
	$ibv_exp_quîy_d˘
(
ibv_exp_d˘
 *
d˘
,

3068 
ibv_exp_d˘_©å
 *
©å
)

3070 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3071 
ibv_c⁄ãxt
 *
c⁄ãxt
 = 
d˘
->context;

3072 
îr
;

3074 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
quîy_d˘
);

3075 i‡(!
v˘x
) {

3076 
î∫o
 = 
ENOSYS
;

3077  
î∫o
;

3080 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3081 
IBV_EXP_DCT_ATTR_RESERVED
 - 1);

3082 
	`±hªad_muãx_lock
(&
c⁄ãxt
->
muãx
);

3083 
îr
 = 
v˘x
->
	`quîy_d˘
(
d˘
, 
©å
);

3084 
	`±hªad_muãx_u∆ock
(&
c⁄ãxt
->
muãx
);

3086  
îr
;

3087 
	}
}

3089 
ölöe
 
	$ibv_exp_¨m_d˘
(
ibv_exp_d˘
 *
d˘
,

3090 
ibv_exp_¨m_©å
 *
©å
)

3092 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3093 
ibv_c⁄ãxt
 *
c⁄ãxt
 = 
d˘
->context;

3094 
îr
;

3096 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
lib_exp_¨m_d˘
);

3097 i‡(!
v˘x
) {

3098 
î∫o
 = 
ENOSYS
;

3099  
î∫o
;

3102 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3103 
IBV_EXP_ARM_ATTR_RESERVED
 - 1);

3104 
	`±hªad_muãx_lock
(&
c⁄ãxt
->
muãx
);

3105 
îr
 = 
v˘x
->
	`lib_exp_¨m_d˘
(
d˘
, 
©å
);

3106 
	`±hªad_muãx_u∆ock
(&
c⁄ãxt
->
muãx
);

3108  
îr
;

3109 
	}
}

3111 
ölöe
 
	$ibv_exp_quîy_p‹t
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3112 
uöt8_t
 
p‹t_num
,

3113 
ibv_exp_p‹t_©å
 *
p‹t_©å
)

3115 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3117 i‡(0 =
p‹t_©å
->
comp_mask
)

3118  
	`ibv_quîy_p‹t
(
c⁄ãxt
, 
p‹t_num
,

3119 &
p‹t_©å
->port_attr);

3122 i‡(!(
p‹t_©å
->
comp_mask
 & 
IBV_EXP_QUERY_PORT_ATTR_MASK1
) ||

3123 (
p‹t_©å
->
comp_mask
 & ~
IBV_EXP_QUERY_PORT_ATTR_MASKS
) ||

3124 (
p‹t_©å
->
mask1
 & ~
IBV_EXP_QUERY_PORT_MASK
)) {

3125 
î∫o
 = 
EINVAL
;

3126  -
î∫o
;

3129 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
lib_exp_quîy_p‹t
);

3131 i‡(!
v˘x
) {

3133 i‡(
p‹t_©å
->
comp_mask
 =
IBV_EXP_QUERY_PORT_ATTR_MASK1
 &&

3134 !(
p‹t_©å
->
mask1
 & ~
IBV_EXP_QUERY_PORT_STD_MASK
))

3135  
	`ibv_quîy_p‹t
(
c⁄ãxt
, 
p‹t_num
,

3136 &
p‹t_©å
->port_attr);

3139 
î∫o
 = 
ENOSYS
;

3140  -
î∫o
;

3142 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
p‹t_©å
->
comp_mask
,

3143 
IBV_EXP_QUERY_PORT_ATTR_RESERVED
 - 1);

3145  
v˘x
->
	`lib_exp_quîy_p‹t
(
c⁄ãxt
, 
p‹t_num
, 
p‹t_©å
);

3146 
	}
}

3151 
ölöe
 
	$ibv_exp_po°_èsk
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3152 
ibv_exp_èsk
 *
èsk
,

3153 
ibv_exp_èsk
 **
bad_èsk
)

3155 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
,

3156 
lib_exp_po°_èsk
);

3157 i‡(!
v˘x
)

3158  
ENOSYS
;

3160 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
èsk
->
comp_mask
,

3161 
IBV_EXP_TASK_RESERVED
 - 1);

3163  
v˘x
->
	`lib_exp_po°_èsk
(
c⁄ãxt
, 
èsk
, 
bad_èsk
);

3164 
	}
}

3166 
ölöe
 
	$ibv_exp_quîy_vÆues
(
ibv_c⁄ãxt
 *
c⁄ãxt
, 
q_vÆues
,

3167 
ibv_exp_vÆues
 *
vÆues
)

3169 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
,

3170 
drv_exp_quîy_vÆues
);

3171 i‡(!
v˘x
) {

3172 
î∫o
 = 
ENOSYS
;

3173  -
î∫o
;

3175 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
vÆues
->
comp_mask
,

3176 
IBV_EXP_VALUES_RESERVED
 - 1);

3178  
v˘x
->
	`drv_exp_quîy_vÆues
(
c⁄ãxt
, 
q_vÆues
, 
vÆues
);

3179 
	}
}

3181 
ölöe
 
uöt64_t
 
	$ibv_exp_cqe_ts_to_ns
(
ibv_exp_˛ock_öfo
 *
˛ock_öfo
,

3182 
uöt64_t
 
ts
)

3184 
uöt64_t
 
dñè
, 
n£c
;

3186 
	`IBV_EXP_RET_ZERO_ON_INVALID_COMP_MASK
(
˛ock_öfo
->
comp_mask
,

3187 
IBV_EXP_CLOCK_INFO_RESERVED
 - 1);

3189 
dñè
 = (
ts
 & 
˛ock_öfo
->
mask
Ë- clock_öfo->
cy˛es
;

3190 
n£c
 = 
˛ock_öfo
->nsec;

3196 i‡(
dñè
 > 
˛ock_öfo
->
mask
 / 2) {

3197 
dñè
 = (
˛ock_öfo
->
cy˛es
 - 
ts
Ë& clock_öfo->
mask
;

3198 
n£c
 -((
dñè
 * 
˛ock_öfo
->
mu…
Ë- clock_öfo->
‰ac
Ë>> clock_öfo->
shi·
;

3200 
n£c
 +((
dñè
 * 
˛ock_öfo
->
mu…
Ë+ clock_öfo->
‰ac
Ë>> clock_öfo->
shi·
;

3203  
n£c
;

3204 
	}
}

3206 
ölöe
 
ibv_exp_Êow
 *
	$ibv_exp_¸óã_Êow
(
ibv_qp
 *
qp
,

3207 
ibv_exp_Êow_©å
 *
Êow
)

3209 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
qp
->
c⁄ãxt
,

3210 
lib_exp_ibv_¸óã_Êow
);

3211 i‡(!
v˘x
 || !v˘x->
lib_exp_ibv_¸óã_Êow
)

3212  
NULL
;

3214 i‡(
Êow
->
ª£rved
 != 0L) {

3215 
	`Ârötf
(
°dîr
, "%s:%d: flow->ª£rved mu° bê0\n", 
__FUNCTION__
, 
__LINE__
);

3216 
Êow
->
ª£rved
 = 0L;

3219  
v˘x
->
	`lib_exp_ibv_¸óã_Êow
(
qp
, 
Êow
);

3220 
	}
}

3222 
ölöe
 
	$ibv_exp_de°roy_Êow
(
ibv_exp_Êow
 *
Êow_id
)

3224 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
Êow_id
->
c⁄ãxt
,

3225 
lib_exp_ibv_de°roy_Êow
);

3226 i‡(!
v˘x
 || !v˘x->
lib_exp_ibv_de°roy_Êow
)

3227  -
ENOSYS
;

3229  
v˘x
->
	`lib_exp_ibv_de°roy_Êow
(
Êow_id
);

3230 
	}
}

3232 
ölöe
 
	$ibv_exp_pﬁl_cq
(
ibv_cq
 *
ibcq
, 
num_íåõs
,

3233 
ibv_exp_wc
 *
wc
, 
uöt32_t
 
wc_size
)

3235 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ibcq
->
c⁄ãxt
,

3236 
drv_exp_ibv_pﬁl_cq
);

3237 i‡(!
v˘x
)

3238  -
ENOSYS
;

3240  
v˘x
->
	`drv_exp_ibv_pﬁl_cq
(
ibcq
, 
num_íåõs
, 
wc
, 
wc_size
);

3241 
	}
}

3246 
ölöe
 
	$ibv_exp_po°_£nd
(
ibv_qp
 *
qp
,

3247 
ibv_exp_£nd_wr
 *
wr
,

3248 
ibv_exp_£nd_wr
 **
bad_wr
)

3250 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
qp
->
c⁄ãxt
,

3251 
drv_exp_po°_£nd
);

3252 i‡(!
v˘x
)

3253  -
ENOSYS
;

3255  
v˘x
->
	`drv_exp_po°_£nd
(
qp
, 
wr
, 
bad_wr
);

3256 
	}
}

3262 
ölöe
 
ibv_mr
 *
	$ibv_exp_ªg_sh¨ed_mr
(
ibv_exp_ªg_sh¨ed_mr_ö
 *
mr_ö
)

3264 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
mr_ö
->
pd
->
c⁄ãxt
,

3265 
lib_exp_ibv_ªg_sh¨ed_mr
);

3266 i‡(!
v˘x
) {

3267 
î∫o
 = 
ENOSYS
;

3268  
NULL
;

3270 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
mr_ö
->
comp_mask
,

3271 
IBV_EXP_REG_SHARED_MR_RESERVED
 - 1);

3273  
v˘x
->
	`lib_exp_ibv_ªg_sh¨ed_mr
(
mr_ö
);

3274 
	}
}

3283 
ölöe
 
	$ibv_exp_modify_cq
(
ibv_cq
 *
cq
,

3284 
ibv_exp_cq_©å
 *
cq_©å
,

3285 
cq_©å_mask
)

3287 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
cq
->
c⁄ãxt
,

3288 
lib_exp_modify_cq
);

3289 i‡(!
v˘x
)

3290  
ENOSYS
;

3292 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
cq_©å
->
comp_mask
,

3293 
IBV_EXP_CQ_ATTR_RESERVED
 - 1);

3295  
v˘x
->
	`lib_exp_modify_cq
(
cq
, 
cq_©å
, 
cq_©å_mask
);

3296 
	}
}

3298 
ölöe
 
ibv_cq
 *
	$ibv_exp_¸óã_cq
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3299 
cqe
,

3300 *
cq_c⁄ãxt
,

3301 
ibv_comp_ch™√l
 *
ch™√l
,

3302 
comp_ve˘‹
,

3303 
ibv_exp_cq_öô_©å
 *
©å
)

3305 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3306 
ibv_cq
 *
cq
;

3308 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_¸óã_cq
);

3309 i‡(!
v˘x
) {

3310 
î∫o
 = 
ENOSYS
;

3311  
NULL
;

3314 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3315 
IBV_EXP_CQ_INIT_ATTR_RESERVED1
 - 1);

3316 
	`±hªad_muãx_lock
(&
c⁄ãxt
->
muãx
);

3317 
cq
 = 
v˘x
->
	`exp_¸óã_cq
(
c⁄ãxt
, 
cqe
, 
ch™√l
, 
comp_ve˘‹
, 
©å
);

3318 i‡(
cq
) {

3319 
cq
->
c⁄ãxt
 = context;

3320 
cq
->
ch™√l
 = channel;

3321 i‡(
ch™√l
)

3322 ++
ch™√l
->
ªf˙t
;

3323 
cq
->
cq_c⁄ãxt
 = cq_context;

3324 
cq
->
comp_evíts_com∂ëed
 = 0;

3325 
cq
->
async_evíts_com∂ëed
 = 0;

3326 
	`±hªad_muãx_öô
(&
cq
->
muãx
, 
NULL
);

3327 
	`±hªad_c⁄d_öô
(&
cq
->
c⁄d
, 
NULL
);

3330 
	`±hªad_muãx_u∆ock
(&
c⁄ãxt
->
muãx
);

3332  
cq
;

3333 
	}
}

3340 
ölöe
 

3341 
	$ibv_exp_modify_qp
(
ibv_qp
 *
qp
, 
ibv_exp_qp_©å
 *
©å
, 
uöt64_t
 
exp_©å_mask
)

3343 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3345 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
qp
->
c⁄ãxt
, 
lib_exp_modify_qp
);

3346 i‡(!
v˘x
) {

3347 
î∫o
 = 
ENOSYS
;

3348  
î∫o
;

3350 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3351 
IBV_EXP_QP_ATTR_RESERVED
 - 1);

3353  
v˘x
->
	`lib_exp_modify_qp
(
qp
, 
©å
, 
exp_©å_mask
);

3354 
	}
}

3359 
ölöe
 
ibv_mr
 *
	$ibv_exp_ªg_mr
(
ibv_exp_ªg_mr_ö
 *
ö
)

3361 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3363 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ö
->
pd
->
c⁄ãxt
, 
lib_exp_ªg_mr
);

3364 i‡(!
v˘x
) {

3365 
î∫o
 = 
ENOSYS
;

3366  
NULL
;

3368 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
ö
->
comp_mask
,

3369 
IBV_EXP_REG_MR_RESERVED
 - 1);

3371  
v˘x
->
	`lib_exp_ªg_mr
(
ö
);

3372 
	}
}

3378 
ölöe
 
	$ibv_exp_böd_mw
(
ibv_exp_mw_böd
 *
mw_böd
)

3380 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3382 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
mw_böd
->
mw
->
c⁄ãxt
, 
lib_exp_böd_mw
);

3383 i‡(!
v˘x
) {

3384 
î∫o
 = 
ENOSYS
;

3385  
î∫o
;

3387 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
mw_böd
->
comp_mask
,

3388 
IBV_EXP_BIND_MW_RESERVED
 - 1);

3390  
v˘x
->
	`lib_exp_böd_mw
(
mw_böd
);

3391 
	}
}

3404 
ölöe
 
	$ibv_exp_¥e„tch_mr
(

3405 
ibv_mr
 *
mr
,

3406 
ibv_exp_¥e„tch_©å
 *
©å
)

3408 
vîbs_c⁄ãxt_exp
 *
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
mr
->
c⁄ãxt
,

3409 
lib_exp_¥e„tch_mr
);

3411 i‡(!
v˘x
) {

3412 
î∫o
 = 
ENOSYS
;

3413  
î∫o
;

3415 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3416 
IBV_EXP_PREFETCH_MR_RESERVED
 - 1);

3418  
v˘x
->
	`lib_exp_¥e„tch_mr
(
mr
, 
©å
);

3419 
	}
}

3421 (*
	tdrv_exp_po°_£nd_func
)(
	tibv_qp
 *
	tqp
,

3422 
	tibv_exp_£nd_wr
 *
	twr
,

3423 
	tibv_exp_£nd_wr
 **
	tbad_wr
);

3424 (*
	tdrv_po°_£nd_func
)(
	tibv_qp
 *
	tqp
, 
	tibv_£nd_wr
 *
	twr
,

3425 
	tibv_£nd_wr
 **
	tbad_wr
);

3426 (*
	tdrv_exp_pﬁl_cq_func
)(
	tibv_cq
 *
	tibcq
, 
	tnum_íåõs
,

3427 
	tibv_exp_wc
 *
	twc
, 
	tuöt32_t
 
	twc_size
);

3428 (*
	tdrv_pﬁl_cq_func
)(
	tibv_cq
 *
	tcq
, 
	tnum_íåõs
, 
	tibv_wc
 *
	twc
);

3429 (*
	tdrv_po°_ªcv_func
)(
	tibv_qp
 *
	tqp
, 
	tibv_ªcv_wr
 *
	twr
,

3430 
	tibv_ªcv_wr
 **
	tbad_wr
);

3432 
ölöe
 *
	$ibv_exp_gë_¥ovidî_func
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3433 
ibv_exp_func_«me
 
«me
)

3435 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3437 
«me
) {

3438 
IBV_EXP_POST_SEND_FUNC
:

3439 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
drv_exp_po°_£nd
);

3440 i‡(!
v˘x
)

3441 
îr‹
;

3443  (*)
v˘x
->
drv_exp_po°_£nd
;

3445 
IBV_EXP_POLL_CQ_FUNC
:

3446 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
drv_exp_ibv_pﬁl_cq
);

3447 i‡(!
v˘x
)

3448 
îr‹
;

3450  (*)
v˘x
->
drv_exp_ibv_pﬁl_cq
;

3452 
IBV_POST_SEND_FUNC
:

3453 i‡(!
c⁄ãxt
->
›s
.
po°_£nd
)

3454 
îr‹
;

3456  (*)
c⁄ãxt
->
›s
.
po°_£nd
;

3458 
IBV_POLL_CQ_FUNC
:

3459 i‡(!
c⁄ãxt
->
›s
.
pﬁl_cq
)

3460 
îr‹
;

3462  (*)
c⁄ãxt
->
›s
.
pﬁl_cq
;

3464 
IBV_POST_RECV_FUNC
:

3465 i‡(!
c⁄ãxt
->
›s
.
po°_ªcv
)

3466 
îr‹
;

3468  (*)
c⁄ãxt
->
›s
.
po°_ªcv
;

3474 
îr‹
:

3475 
î∫o
 = 
ENOSYS
;

3476  
NULL
;

3477 
	}
}

3479 
ölöe
 
ibv_mr
 *
	$ibv_exp_¸óã_mr
(
ibv_exp_¸óã_mr_ö
 *
ö
)

3481 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3482 
ibv_mr
 *
mr
;

3484 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
ö
->
pd
->
c⁄ãxt
, 
lib_exp_¸óã_mr
);

3485 i‡(!
v˘x
) {

3486 
î∫o
 = 
ENOSYS
;

3487  
NULL
;

3490 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
ö
->
comp_mask
,

3491 
IBV_EXP_CREATE_MR_IN_RESERVED
 - 1);

3492 
mr
 = 
v˘x
->
	`lib_exp_¸óã_mr
(
ö
);

3493 i‡(
mr
)

3494 
mr
->
pd
 = 
ö
->pd;

3496  
mr
;

3497 
	}
}

3499 
ölöe
 
	$ibv_exp_quîy_mkey
(
ibv_mr
 *
mr
,

3500 
ibv_exp_mkey_©å
 *
©å
)

3502 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3504 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
mr
->
c⁄ãxt
, 
lib_exp_quîy_mkey
);

3505 i‡(!
v˘x
) {

3506 
î∫o
 = 
ENOSYS
;

3507  
î∫o
;

3510 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3511 
IBV_EXP_MKEY_ATTR_RESERVED
 - 1);

3513  
v˘x
->
	`lib_exp_quîy_mkey
(
mr
, 
©å
);

3514 
	}
}

3516 
ölöe
 
	$ibv_exp_dóŒoc_mkey_li°_mem‹y
(
ibv_exp_mkey_li°_c⁄èöî
 *
mem
)

3518 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3520 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
mem
->
c⁄ãxt
,

3521 
lib_exp_dóŒoc_mkey_li°_mem‹y
);

3522 i‡(!
v˘x
) {

3523 
î∫o
 = 
ENOSYS
;

3524  
î∫o
;

3527  
v˘x
->
	`lib_exp_dóŒoc_mkey_li°_mem‹y
(
mem
);

3528 
	}
}

3530 
ölöe
 
ibv_exp_mkey_li°_c⁄èöî
 *

3531 
	$ibv_exp_Æloc_mkey_li°_mem‹y
(
ibv_exp_mkey_li°_c⁄èöî_©å
 *
©å
)

3533 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3535 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
©å
->
pd
->
c⁄ãxt
,

3536 
lib_exp_Æloc_mkey_li°_mem‹y
);

3537 i‡(!
v˘x
) {

3538 
î∫o
 = 
ENOSYS
;

3539  
NULL
;

3542 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3543 
IBV_EXP_MKEY_LIST_CONTAINER_RESERVED
 - 1);

3545  
v˘x
->
	`lib_exp_Æloc_mkey_li°_mem‹y
(
©å
);

3546 
	}
}

3548 
ölöe
 
ibv_§q
 *

3549 
	$ibv_exp_¸óã_§q
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3550 
ibv_exp_¸óã_§q_©å
 *
©å
)

3552 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3554 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_¸óã_§q
);

3555 i‡(!
v˘x
) {

3556 
î∫o
 = 
ENOSYS
;

3557  
NULL
;

3560 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3561 
IBV_EXP_CREATE_SRQ_RESERVED
 - 1);

3563  
v˘x
->
	`exp_¸óã_§q
(
c⁄ãxt
, 
©å
);

3564 
	}
}

3569 
ölöe
 
ibv_exp_ªs_domaö
 *
	$ibv_exp_¸óã_ªs_domaö
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3570 
ibv_exp_ªs_domaö_öô_©å
 *
©å
)

3572 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3574 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_¸óã_ªs_domaö
);

3575 i‡(!
v˘x
) {

3576 
î∫o
 = 
ENOSYS
;

3577  
NULL
;

3580 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3581 
IBV_EXP_RES_DOMAIN_RESERVED
 - 1);

3583  
v˘x
->
	`exp_¸óã_ªs_domaö
(
c⁄ãxt
, 
©å
);

3584 
	}
}

3589 
ölöe
 
	$ibv_exp_de°roy_ªs_domaö
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3590 
ibv_exp_ªs_domaö
 *
ªs_dom
,

3591 
ibv_exp_de°roy_ªs_domaö_©å
 *
©å
)

3593 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3595 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_de°roy_ªs_domaö
);

3596 i‡(!
v˘x
)

3597  
î∫o
 = 
ENOSYS
;

3599 i‡(
©å
)

3600 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3601 
IBV_EXP_DESTROY_RES_DOMAIN_RESERVED
 - 1);

3603  
v˘x
->
	`exp_de°roy_ªs_domaö
(
c⁄ãxt
, 
ªs_dom
, 
©å
);

3604 
	}
}

3617 
ölöe
 *
	$ibv_exp_quîy_ötf
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3618 
ibv_exp_quîy_ötf_∑øms
 *
∑øms
,

3619 
ibv_exp_quîy_ötf_°©us
 *
°©us
)

3621 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3623 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_quîy_ötf
);

3624 i‡(!
v˘x
) {

3625 
î∫o
 = 
ENOSYS
;

3626  
NULL
;

3629 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
∑øms
->
comp_mask
,

3630 
IBV_EXP_QUERY_INTF_RESERVED
 - 1);

3632  
v˘x
->
	`exp_quîy_ötf
(
c⁄ãxt
, 
∑øms
, 
°©us
);

3633 
	}
}

3638 
ölöe
 
	$ibv_exp_ªÀa£_ötf
(
ibv_c⁄ãxt
 *
c⁄ãxt
, *
ötf
,

3639 
ibv_exp_ªÀa£_ötf_∑øms
 *
∑øms
)

3641 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3643 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_ªÀa£_ötf
);

3644 i‡(!
v˘x
)

3645  
î∫o
 = 
ENOSYS
;

3647 i‡(
∑øms
)

3648 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
∑øms
->
comp_mask
,

3649 
IBV_EXP_RELEASE_INTF_RESERVED
 - 1);

3651  
v˘x
->
	`exp_ªÀa£_ötf
(
c⁄ãxt
, 
ötf
, 
∑øms
);

3652 
	}
}

3654 
ölöe
 
ibv_exp_wq
 *
	$ibv_exp_¸óã_wq
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3655 
ibv_exp_wq_öô_©å
 *
wq_öô_©å
)

3657 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3659 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_¸óã_wq
);

3660 i‡(!
v˘x
) {

3661 
î∫o
 = 
ENOSYS
;

3662  
NULL
;

3665 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
wq_öô_©å
->
comp_mask
,

3666 
IBV_EXP_CREATE_WQ_RESERVED
 - 1);

3668  
v˘x
->
	`exp_¸óã_wq
(
c⁄ãxt
, 
wq_öô_©å
);

3669 
	}
}

3671 
ölöe
 
	$ibv_exp_modify_wq
(
ibv_exp_wq
 *
wq
, 
ibv_exp_wq_©å
 *
wq_©å
)

3673 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3675 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
wq
->
c⁄ãxt
, 
exp_modify_wq
);

3676 i‡(!
v˘x
)

3677  
ENOSYS
;

3679 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
wq_©å
->
©å_mask
,

3680 
IBV_EXP_WQ_ATTR_RESERVED
 - 1);

3681  
v˘x
->
	`exp_modify_wq
(
wq
, 
wq_©å
);

3682 
	}
}

3684 
ölöe
 
	$ibv_exp_de°roy_wq
(
ibv_exp_wq
 *
wq
)

3686 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3688 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
wq
->
c⁄ãxt
, 
exp_de°roy_wq
);

3689 i‡(!
v˘x
)

3690  
ENOSYS
;

3692  
v˘x
->
	`exp_de°roy_wq
(
wq
);

3693 
	}
}

3705 
ölöe
 
ibv_exp_rwq_öd_èbÀ
 *
	$ibv_exp_¸óã_rwq_öd_èbÀ
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3706 
ibv_exp_rwq_öd_èbÀ_öô_©å
 *
öô_©å
)

3708 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3710 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_¸óã_rwq_öd_èbÀ
);

3711 i‡(!
v˘x
) {

3712 
î∫o
 = 
ENOSYS
;

3713  
NULL
;

3716 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
öô_©å
->
comp_mask
,

3717 
IBV_EXP_CREATE_IND_TABLE_RESERVED
 - 1);

3718  
v˘x
->
	`exp_¸óã_rwq_öd_èbÀ
(
c⁄ãxt
, 
öô_©å
);

3719 
	}
}

3728 
ölöe
 
	$ibv_exp_de°roy_rwq_öd_èbÀ
(
ibv_exp_rwq_öd_èbÀ
 *
rwq_öd_èbÀ
)

3730 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3732 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
rwq_öd_èbÀ
->
c⁄ãxt
, 
exp_de°roy_rwq_öd_èbÀ
);

3733 i‡(!
v˘x
)

3734  
ENOSYS
;

3736  
v˘x
->
	`exp_de°roy_rwq_öd_èbÀ
(
rwq_öd_èbÀ
);

3737 
	}
}

3748 
ölöe
 
	$ibv_exp_quîy_gid_©å
(
ibv_c⁄ãxt
 *
c⁄ãxt
,

3749 
uöt8_t
 
p‹t_num
,

3750 
ödex
,

3751 
ibv_exp_gid_©å
 *
©å
)

3753 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3755 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
exp_quîy_gid_©å
);

3756 i‡(!
v˘x
)

3757  
ENOSYS
;

3759 
	`IBV_EXP_RET_EINVAL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3760 
IBV_EXP_QUERY_GID_ATTR_RESERVED
 - 1);

3761  
v˘x
->
	`exp_quîy_gid_©å
(
c⁄ãxt
, 
p‹t_num
, 
ödex
, 
©å
);

3762 
	}
}

3771 
ölöe
 
ibv_c⁄ãxt
 *
	$ibv_exp_›í_devi˚
(
ibv_devi˚
 *
devi˚
,

3772 
ibv_exp_›í_devi˚_©å
 *
©å
)

3774 
ibv_c⁄ãxt
 *
c⁄ãxt
;

3775 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3776 
ªt
;

3778 
	`IBV_EXP_RET_NULL_ON_INVALID_COMP_MASK
(
©å
->
comp_mask
,

3779 
IBV_EXP_SET_CONTEXT_ATTR_RESERVED
 - 1);

3781 i‡(!
©å
->
comp_mask
) {

3782 
î∫o
 = 
EINVAL
;

3783 
out
;

3786 
c⁄ãxt
 = 
	`ibv_›í_devi˚
(
devi˚
);

3787 i‡(!
c⁄ãxt
)

3788 
out
;

3790 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
c⁄ãxt
, 
drv_exp_£t_c⁄ãxt_©å
);

3791 i‡(!
v˘x
) {

3792 
î∫o
 = 
ENOSYS
;

3793 
˛o£
;

3796 
ªt
 = 
v˘x
->
	`drv_exp_£t_c⁄ãxt_©å
(
c⁄ãxt
, 
©å
);

3797 i‡(
ªt
)

3798 
˛o£
;

3800  
c⁄ãxt
;

3802 
˛o£
:

3803 
	`ibv_˛o£_devi˚
(
c⁄ãxt
);

3804 
out
:

3805  
NULL
;

3806 
	}
}

3812 
ölöe
 
	$ibv_exp_po°_§q_›s
(
ibv_§q
 *
§q
,

3813 
ibv_exp_›s_wr
 *
›
,

3814 
ibv_exp_›s_wr
 **
bad_›
)

3816 
vîbs_c⁄ãxt_exp
 *
v˘x
;

3818 
v˘x
 = 
	`vîbs_gë_exp_˘x_›
(
§q
->
c⁄ãxt
, 
exp_po°_§q_›s
);

3819 i‡(!
v˘x
) {

3820 *
bad_›
 = 
›
;

3821  
ENOSYS
;

3823  
v˘x
->
	`exp_po°_§q_›s
(
§q
, 
›
, 
bad_›
);

3825 
	}
}

3827 
	eibv_exp_tmh_›
 {

3828 
	mIBV_EXP_TMH_NO_TAG
 = 0,

3829 
	mIBV_EXP_TMH_RNDV
 = 1,

3830 
	mIBV_EXP_TMH_FIN
 = 2,

3831 
	mIBV_EXP_TMH_EAGER
 = 3

3834 
	sibv_exp_tmh
 {

3835 
uöt8_t
 
	m›code
;

3836 
uöt8_t
 
	mª£rved
[3];

3837 
uöt32_t
 
	m≠p_˘x
;

3838 
uöt64_t
 
	mèg
;

3841 
	sibv_exp_tmh_rvh
 {

3842 
uöt64_t
 
	mva
;

3843 
uöt32_t
 
	mrkey
;

3844 
uöt32_t
 
	mÀn
;

3848 
	gEND_C_DECLS


3850 
	#VERBS_MAX_ENV_VAL
 4096

	)

3852 #unde‡
__©åibuã_c⁄°


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


125 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


126 #i‡
__WORDSIZE
 == 64

127 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

132 
	#PTHREAD_RWLOCK_INITIALIZER
 \

133 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

134 #ifde‡
__USE_GNU


135 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

138 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

142 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

143 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

145 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

146 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

147 0 } }

	)

157 
	mPTHREAD_INHERIT_SCHED
,

158 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

159 
	mPTHREAD_EXPLICIT_SCHED


160 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

167 
	mPTHREAD_SCOPE_SYSTEM
,

168 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

169 
	mPTHREAD_SCOPE_PROCESS


170 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

177 
	mPTHREAD_PROCESS_PRIVATE
,

178 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

179 
	mPTHREAD_PROCESS_SHARED


180 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

186 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

190 
	s_±hªad_˛ónup_buf„r


192 (*
	m__routöe
) (*);

193 *
	m__¨g
;

194 
	m__ˇn˚…y≥
;

195 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

201 
	mPTHREAD_CANCEL_ENABLE
,

202 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

203 
	mPTHREAD_CANCEL_DISABLE


204 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

208 
	mPTHREAD_CANCEL_DEFERRED
,

209 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

210 
	mPTHREAD_CANCEL_ASYNCHRONOUS


211 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

213 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

217 
	#PTHREAD_ONCE_INIT
 0

	)

220 #ifde‡
__USE_XOPEN2K


224 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

228 
__BEGIN_DECLS


233 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

234 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

235 *(*
__°¨t_routöe
) (*),

236 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

242 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

250 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

252 #ifde‡
__USE_GNU


255 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

263 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

264 c⁄° 
time•ec
 *
__ab°ime
);

271 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

275 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

279 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

295 *
__dëach°©e
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

299 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

300 
__dëach°©e
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 
size_t
 *
__gu¨dsize
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

311 
size_t
 
__gu¨dsize
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

317 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

322 c⁄° 
sched_∑øm
 *
__ª°ri˘


323 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

326 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


336 
__©å
, *
__ª°ri˘
 
__öhîô
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

340 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

341 
__öhîô
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

347 *
__ª°ri˘
 
__sc›e
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


356 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

363 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

364 *
__°ackaddr
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

368 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


369 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

370 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__°acksize
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

379 #ifde‡
__USE_XOPEN2K


381 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

382 **
__ª°ri˘
 
__°ackaddr
,

383 
size_t
 *
__ª°ri˘
 
__°acksize
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

389 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

390 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 #ifde‡
__USE_GNU


396 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

397 
size_t
 
__˝u£tsize
,

398 c⁄° 
˝u_£t_t
 *
__˝u£t
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

404 
size_t
 
__˝u£tsize
,

405 
˝u_£t_t
 *
__˝u£t
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

409 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

414 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((1));

420 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

430 c⁄° 
sched_∑øm
 *
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

435 *
__ª°ri˘
 
__pﬁicy
,

436 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

441 
__THROW
;

444 #ifde‡
__USE_GNU


446 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

447 
size_t
 
__buÊí
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

452 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 #ifde‡
__USE_UNIX98


458 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

461 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

464 #ifde‡
__USE_GNU


469 
	$±hªad_yõld
 (Ë
__THROW
;

474 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

475 c⁄° 
˝u_£t_t
 *
__˝u£t
)

476 
__THROW
 
	`__n⁄nuŒ
 ((3));

479 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

480 
˝u_£t_t
 *
__˝u£t
)

481 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

495 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

506 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

510 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

513 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

518 
	`±hªad_ã°ˇn˚l
 ();

527 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

528 
__mask_was_ßved
;

529 } 
__ˇn˚l_jmp_buf
[1];

530 *
__∑d
[4];

531 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

534 #i‚de‡
__˛ónup_f˘_©åibuã


535 
	#__˛ónup_f˘_©åibuã


	)

540 
	s__±hªad_˛ónup_‰ame


542 (*
__ˇn˚l_routöe
) (*);

543 *
__ˇn˚l_¨g
;

544 
__do_ô
;

545 
__ˇn˚l_ty≥
;

548 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


549 #ifde‡
__˝lu•lus


551 ˛as†
	c__±hªad_˛ónup_˛ass


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

558 
public
:

559 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

560 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

561 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

562 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

563 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

564 &
__ˇn˚l_ty≥
); 
	}
}

565 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

581 
	#±hªad_˛ónup_p›
(
execuã
) \

582 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

583 } 0)

	)

585 #ifde‡
__USE_GNU


589 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

592 
__˛‰ame
.
	`__de„r
 ()

	)

597 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

598 
__˛‰ame
.
	`__ª°‹e
 (); \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

607 
__exã∫_ölöe
 

608 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

610 i‡(
__‰ame
->
__do_ô
)

611 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

612 
	}
}

621 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

623 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

624 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

625 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

626 .
__do_ô
 = 1 };

	)

630 
	#±hªad_˛ónup_p›
(
execuã
) \

631 
__˛‰ame
.
__do_ô
 = (
execuã
); \

632 } 0)

	)

634 #ifde‡
__USE_GNU


638 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 }; \

644 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

645 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

650 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

651 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

652 
__˛‰ame
.
__do_ô
 = (
execuã
); \

653 } 0)

	)

664 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

666 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

667 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

668 *
__ˇn˚l_¨g
 = (
¨g
); \

669 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

670 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

671 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

673 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

674 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

678 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

679 dÿ{

	)

680 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	#±hªad_˛ónup_p›
(
execuã
) \

688 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

689 i‡(
execuã
) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 } 0)

	)

692 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

693 
__˛ónup_f˘_©åibuã
;

695 #ifde‡
__USE_GNU


699 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

701 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

702 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

703 *
__ˇn˚l_¨g
 = (
¨g
); \

704 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

705 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

706 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

708 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

709 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

713 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

714 dÿ{

	)

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

716 
__˛ónup_f˘_©åibuã
;

721 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

724 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

725 i‡(
execuã
) \

726 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

727 
	}
} 0)

	)

728 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

729 
__˛ónup_f˘_©åibuã
;

733 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

734 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

735 #i‚de‡
SHARED


736 
	`__©åibuã__
 ((
__wók__
))

742 
__jmp_buf_èg
;

743 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

749 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

750 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1));

754 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1));

758 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

759 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

763 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

765 #ifde‡
__USE_XOPEN2K


767 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

768 c⁄° 
time•ec
 *
__ª°ri˘


769 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

773 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

779 
__ª°ri˘
 
__muãx
,

780 *
__ª°ri˘
 
__¥io˚ûög
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

785 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

786 
__¥io˚ûög
,

787 *
__ª°ri˘
 
__ﬁd_˚ûög
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

791 #ifde‡
__USE_XOPEN2K8


793 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #ifde‡
__USE_GNU


796 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

797 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1));

810 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1));

814 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

815 
__ª°ri˘
 
__©å
,

816 *
__ª°ri˘
 
__psh¨ed
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__psh¨ed
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


826 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


827 
__©å
, *
__ª°ri˘
 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

833 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

839 
__ª°ri˘
 
__©å
,

840 *
__ª°ri˘
 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

845 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

846 
__¥Ÿocﬁ
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

851 
__ª°ri˘
 
__©å
,

852 *
__ª°ri˘
 
__¥io˚ûög
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥io˚ûög
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_XOPEN2K


862 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

863 *
__robu°√ss
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

865 #ifde‡
__USE_GNU


866 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

867 *
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

873 
__robu°√ss
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

875 #ifde‡
__USE_GNU


876 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

877 
__robu°√ss
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


888 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

889 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


890 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

893 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

894 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

898 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

901 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

902 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

904 #ifde‡
__USE_XOPEN2K


906 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

907 c⁄° 
time•ec
 *
__ª°ri˘


908 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

912 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

916 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

917 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

919 #ifde‡
__USE_XOPEN2K


921 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

922 c⁄° 
time•ec
 *
__ª°ri˘


923 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

927 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

942 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

943 
__ª°ri˘
 
__©å
,

944 *
__ª°ri˘
 
__psh¨ed
)

945 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

948 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

949 
__psh¨ed
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__¥ef
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

969 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

974 
__THROW
 
	`__n⁄nuŒ
 ((1));

977 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

978 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

981 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

982 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

989 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

990 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

991 
	`__n⁄nuŒ
 ((1, 2));

1000 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1002 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1003 
	`__n⁄nuŒ
 ((1, 2, 3));

1008 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1017 
__ª°ri˘
 
__©å
,

1018 *
__ª°ri˘
 
__psh¨ed
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1022 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1023 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 #ifde‡
__USE_XOPEN2K


1027 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__˛ockid_t
 
__˛ock_id
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 #ifde‡
__USE_XOPEN2K


1044 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1049 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1053 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1056 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1057 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1069 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1070 
__©å
, 
__cou¡
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1079 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1083 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1));

1091 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1092 
__ª°ri˘
 
__©å
,

1093 *
__ª°ri˘
 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1097 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1098 
__psh¨ed
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1111 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1112 (*
__de°r_fun˘i⁄
) (*))

1113 
__THROW
 
	`__n⁄nuŒ
 ((1));

1116 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1119 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1122 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1123 c⁄° *
__poöãr
Ë
__THROW
 ;

1126 #ifde‡
__USE_XOPEN2K


1128 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1129 
__˛ockid_t
 *
__˛ock_id
)

1130 
__THROW
 
	`__n⁄nuŒ
 ((2));

1145 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1146 (*
__∑ª¡
) (),

1147 (*
__chûd
Ë()Ë
__THROW
;

1150 #ifde‡
__USE_EXTERN_INLINES


1152 
__exã∫_ölöe
 

1153 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1155  
__thªad1
 =
__thªad2
;

1156 
	}
}

1159 
	g__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
28
664
rmserver.c
/usr/include/rdma/rdma_cma.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/infiniband/sa.h
/usr/include/infiniband/verbs.h
/usr/include/libio.h
/usr/include/netinet/in.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/errno.h
/usr/include/infiniband/ofa_verbs.h
/usr/include/infiniband/verbs_exp.h
/usr/include/pthread.h
/usr/include/stdc-predef.h
/usr/include/stdint.h
/usr/include/gconv.h
/usr/include/sched.h
/usr/include/time.h
/usr/include/wchar.h
/usr/include/wctype.h
